[{"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "nrn129", "stu_id": "oq29"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "lxl967", "stu_id": "lb71"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "zvj711", "stu_id": "ya14"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "bhb734", "stu_id": "sm59"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "gxw890", "stu_id": "pm12"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "vtu801", "stu_id": "oq29"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "chr766", "stu_id": "wm85"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "mmw883", "stu_id": "lb71"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "bdg747", "stu_id": "ya14"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "qei358", "stu_id": "sm59"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "qi29750143", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "vwm711", "stu_id": "pm12"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "xrm756", "stu_id": "if84"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "jvh571", "stu_id": "hd67"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "kys379", "stu_id": "wh42"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "twx662", "stu_id": "yj70"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "nxr890", "stu_id": "wc14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "ffv381", "stu_id": "oq29"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "uwb097", "stu_id": "wm85"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "mrq404", "stu_id": "tt05"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "kuu464", "stu_id": "lb71"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "gku936", "stu_id": "rm19"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "leu394", "stu_id": "mc00"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "fek771", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "mxb006", "stu_id": "sm59"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "hul759", "stu_id": "tg60"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "eck263", "stu_id": "pm12"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "rzi836", "stu_id": "lb71"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "wvj312", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "fnw964", "stu_id": "tg60"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["往students键中插入成员\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "ev12963112", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "ldf534", "stu_id": "wh42"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "pdo478", "stu_id": "oq29"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["往students键中插入成员\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "ev12963112", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "leh895", "stu_id": "wm85"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "phj280", "stu_id": "lb71"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["往students键中插入成员\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "ev12963112", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "qsc575", "stu_id": "rm19"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "fdx085", "stu_id": "ya14"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "eil706", "stu_id": "sm59"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "iff371", "stu_id": "tg60"}, {"ask": ["如果要爬取一个页面，这个页面是用户中心\n", "爬取思路\n"], "ans": ["https://i.csdn.net/#/uc/profile\n", "发起请求的时候，带上cookie"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "on46510293", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["访问用户中心时\n", "浏鉴器发请求时会带上什么\n", "服务端会做什么处理\n"], "ans": ["一，浏览器在发起请求时\n", "用户访问时，会带上全部的cookie数据\n", "cookie数据中会包含一个键值对，用于记录用户是否登陆\n", "二\n", "1， 服务端会校验用户是否登陆\n", "如果用户没有登录，强制跳转，不让未登陆用户访问特定的页面（比如用户中心）\n", "2， 如果用户成功登陆，那么，就根据用户的登陆信息（比如用户id，可以查询相关的数据，比如用户名，用户头象，地址，基本信息）\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "up02553886", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["往students键中插入成员\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "ev12963112", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "gcq299", "stu_id": "pm12"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个对象\n", "# 先导入\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "nh80573127", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["把一个html字符串转换为Element对象\n"], "ans": ["Element对象 = etree.HTML(html字符串)\n", "备注，Element对象具有xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "oz95217075", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["安装lxml\n"], "ans": ["pip install lxml\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "xi28903090", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取 按钮为 下一页> 的标签\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ts37127622", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["与或\n"], "ans": ["格式：\n", "and \n", "or \n", "例子：\n", "选取notbook标签，要求该标签具有name属性，同时class属性值为active\n", "//notbook[@name and @class=\"active\"]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "xt95823482", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取节点的文本\n"], "ans": ["节点/text()\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "yv08099975", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["选取所有的notbook标签或者mon标签\n"], "ans": ["例子：\n", "//notbook | //mon\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hp32712516", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取pc标签下notbook标签的所有属性值\n"], "ans": ["//pc/notbook/@*\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "of36847917", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["选取未知节点\n", "*\t匹配任何元素节点。\n", "@*\t匹配任何属性节点。\n", "node()\t匹配任何类型的节点。\n"], "ans": [], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bl74620948", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["选取notbook，要求它的子级price标签包裹文本值大于9000\n"], "ans": ["例子：\n", "//notbook[price>9000]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "sb20364451", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["选取某个节点，要求属性等于指定的值\n"], "ans": ["例子：\n", "//mon[@class='m2']\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "fz35662508", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["选取具有某个属性的节点\n"], "ans": ["格式：\n", "节点【@id】\n", "例子：\n", "选取具有id属性的节点\n", "//mon[@id]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "vm53601252", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取位置不等于2的节点\n"], "ans": ["//mon[position()!=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "es07274270", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["从多个节点中选取指定的节点\n"], "ans": ["【索引】\n", "起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ab88108964", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["选取meta标签中的第一个,拿charset属性的值\n"], "ans": ["//meta[1]/@charset\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "kf59216457", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["路径表达式\n"], "ans": ["bookstore\t选取 bookstore 元素的所有子节点。\n", "/bookstore\t\n", "选取根元素 bookstore。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！\n", "bookstore/book\t选取属于 bookstore 的子元素的所有 book 元素。\n", "//book\t选取所有 book 子元素，而不管它们在文档中的位置。\n", "bookstore//book\t选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。\n", "//@lang\t选取名为具有lang属性的所有标签。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hd10357057", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["基本节点的选取\n"], "ans": ["nodename\t选取此节点的所有子节点。\n", "/\t默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。\n", "//\t从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。\n", ".\t选取当前节点。\n", "..\t选取当前节点的父节点。\n", "@\t选取属性。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ox57001164", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "gky753", "stu_id": "oq29"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个对象\n", "# 先导入\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "nh80573127", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["把一个html字符串转换为Element对象\n"], "ans": ["Element对象 = etree.HTML(html字符串)\n", "备注，Element对象具有xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "oz95217075", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["安装lxml\n"], "ans": ["pip install lxml\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "xi28903090", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取 按钮为 下一页> 的标签\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ts37127622", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["与或\n"], "ans": ["格式：\n", "and \n", "or \n", "例子：\n", "选取notbook标签，要求该标签具有name属性，同时class属性值为active\n", "//notbook[@name and @class=\"active\"]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "xt95823482", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取节点的文本\n"], "ans": ["节点/text()\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "yv08099975", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["选取所有的notbook标签或者mon标签\n"], "ans": ["例子：\n", "//notbook | //mon\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hp32712516", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取pc标签下notbook标签的所有属性值\n"], "ans": ["//pc/notbook/@*\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "of36847917", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["选取未知节点\n", "*\t匹配任何元素节点。\n", "@*\t匹配任何属性节点。\n", "node()\t匹配任何类型的节点。\n"], "ans": [], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bl74620948", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["选取notbook，要求它的子级price标签包裹文本值大于9000\n"], "ans": ["例子：\n", "//notbook[price>9000]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "sb20364451", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["选取某个节点，要求属性等于指定的值\n"], "ans": ["例子：\n", "//mon[@class='m2']\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "fz35662508", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["选取具有某个属性的节点\n"], "ans": ["格式：\n", "节点【@id】\n", "例子：\n", "选取具有id属性的节点\n", "//mon[@id]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "vm53601252", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取位置不等于2的节点\n"], "ans": ["//mon[position()!=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "es07274270", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["从多个节点中选取指定的节点\n"], "ans": ["【索引】\n", "起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ab88108964", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["选取meta标签中的第一个,拿charset属性的值\n"], "ans": ["//meta[1]/@charset\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "kf59216457", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["路径表达式\n"], "ans": ["bookstore\t选取 bookstore 元素的所有子节点。\n", "/bookstore\t\n", "选取根元素 bookstore。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！\n", "bookstore/book\t选取属于 bookstore 的子元素的所有 book 元素。\n", "//book\t选取所有 book 子元素，而不管它们在文档中的位置。\n", "bookstore//book\t选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。\n", "//@lang\t选取名为具有lang属性的所有标签。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hd10357057", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["基本节点的选取\n"], "ans": ["nodename\t选取此节点的所有子节点。\n", "/\t默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。\n", "//\t从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。\n", ".\t选取当前节点。\n", "..\t选取当前节点的父节点。\n", "@\t选取属性。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ox57001164", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["linux安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "np34072529", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "lzo708", "stu_id": "ya14"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tp00229750", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["tar解压缩并指定压缩文件的存放位置\n"], "ans": ["tar xvfz 包名称.tar.gz -C 目录\n", "tar xvfz 包名称.tar.gz -C 目录\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rq77286456", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rc06508605", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "za75634820", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "sf09008798", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "kn72304404", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bj22137911", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "zc04289008", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "ur15415054", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["往键名为name的值中添加内容2019\n"], "ans": ["127.0.0.1:6379> append name 2019\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "hc41402015", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "ziu333", "stu_id": "if84"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "zc04289008", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["安装lxml\n"], "ans": ["pip install lxml\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "xi28903090", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "ur15415054", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["与或\n"], "ans": ["格式：\n", "and \n", "or \n", "例子：\n", "选取notbook标签，要求该标签具有name属性，同时class属性值为active\n", "//notbook[@name and @class=\"active\"]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "xt95823482", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["往students键中插入成员\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "ev12963112", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["基本节点的选取\n"], "ans": ["nodename\t选取此节点的所有子节点。\n", "/\t默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。\n", "//\t从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。\n", ".\t选取当前节点。\n", "..\t选取当前节点的父节点。\n", "@\t选取属性。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ox57001164", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["tar解压缩并指定压缩文件的存放位置\n"], "ans": ["tar xvfz 包名称.tar.gz -C 目录\n", "tar xvfz 包名称.tar.gz -C 目录\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rq77286456", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tp00229750", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["把一个html字符串转换为Element对象\n"], "ans": ["Element对象 = etree.HTML(html字符串)\n", "备注，Element对象具有xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "oz95217075", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bj22137911", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["选取具有某个属性的节点\n"], "ans": ["格式：\n", "节点【@id】\n", "例子：\n", "选取具有id属性的节点\n", "//mon[@id]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "vm53601252", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "xyn259", "stu_id": "oq29"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["往students键中插入成员\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "ev12963112", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "ur15415054", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["往键名为name的值中添加内容2019\n"], "ans": ["127.0.0.1:6379> append name 2019\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "hc41402015", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["tar解压缩并指定压缩文件的存放位置\n"], "ans": ["tar xvfz 包名称.tar.gz -C 目录\n", "tar xvfz 包名称.tar.gz -C 目录\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rq77286456", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "zc04289008", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "sf09008798", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tp00229750", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "gxu198", "stu_id": "lb71"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "za75634820", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "ur15415054", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["选取某个节点，要求属性等于指定的值\n"], "ans": ["例子：\n", "//mon[@class='m2']\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "fz35662508", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["选取所有的notbook标签或者mon标签\n"], "ans": ["例子：\n", "//notbook | //mon\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hp32712516", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["设置默认值的过滤器\n", "当模板变量没有值时给默认值\n"], "ans": ["{{ errmsg|default:'无' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "vm48253769", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["安装lxml\n"], "ans": ["pip install lxml\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "xi28903090", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取pc标签下notbook标签的所有属性值\n"], "ans": ["//pc/notbook/@*\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "of36847917", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["tar解压缩并指定压缩文件的存放位置\n"], "ans": ["tar xvfz 包名称.tar.gz -C 目录\n", "tar xvfz 包名称.tar.gz -C 目录\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rq77286456", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["选取notbook，要求它的子级price标签包裹文本值大于9000\n"], "ans": ["例子：\n", "//notbook[price>9000]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "sb20364451", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rc06508605", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "zxe196", "stu_id": "ya14"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "za75634820", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "zc04289008", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "kn72304404", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "fow188", "stu_id": "sm59"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "kn72304404", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["往键名为name的值中添加内容2019\n"], "ans": ["127.0.0.1:6379> append name 2019\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "hc41402015", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["tar解压缩并指定压缩文件的存放位置\n"], "ans": ["tar xvfz 包名称.tar.gz -C 目录\n", "tar xvfz 包名称.tar.gz -C 目录\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rq77286456", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rc06508605", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["往students键中插入成员\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "ev12963112", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "ur15415054", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "zc04289008", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "ygq741", "stu_id": "tg60"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bj22137911", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "rvv643", "stu_id": "td68"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bj22137911", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "lxp620", "stu_id": "td68"}, {"ask": ["tar解压缩并指定压缩文件的存放位置\n"], "ans": ["tar xvfz 包名称.tar.gz -C 目录\n", "tar xvfz 包名称.tar.gz -C 目录\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rq77286456", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["路径表达式\n"], "ans": ["bookstore\t选取 bookstore 元素的所有子节点。\n", "/bookstore\t\n", "选取根元素 bookstore。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！\n", "bookstore/book\t选取属于 bookstore 的子元素的所有 book 元素。\n", "//book\t选取所有 book 子元素，而不管它们在文档中的位置。\n", "bookstore//book\t选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。\n", "//@lang\t选取名为具有lang属性的所有标签。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hd10357057", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["如何自定义过滤器\n", "如何使用自定义过滤器\n"], "ans": ["==定义阶段===\n", "一，在项目根目录下创一个文件夹\n", "templatetags\n", "固定的名称\n", "二，在templatetags目录下建一个py文件用于写代码\n", "例如filters.py，这个名字随意\n", "三，在py文件中写代码，格式套路如下\n", "from django.template import Library\n", "register=Library()\n", "@register.filter\n", "def func(arg1):\n", "\treturn 返回值\n", "==使用阶段==\n", "一，导入过滤器的py文件\n", "{% load filters %}\n", "这里的filters是自建的py文件名称\n", "二，使用\n", "1，一个参数的情况\n", "{{ 模板变量|func}}\n", "模板变量作为func函数的第一个参数\n", "最终的返回值替换双花括号\n", "2，两个参数的情况\n", "{{模板变量|func:参数2}}\n", "接收两个参数\n", "最终返回值替代双花括号\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "la61487288", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "vyo926", "stu_id": "td68"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "kn72304404", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "sf09008798", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "rc06508605", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "ur15415054", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "pxn407", "stu_id": "td68"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["基本节点的选取\n"], "ans": ["nodename\t选取此节点的所有子节点。\n", "/\t默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。\n", "//\t从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。\n", ".\t选取当前节点。\n", "..\t选取当前节点的父节点。\n", "@\t选取属性。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ox57001164", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["选取meta标签中的第一个,拿charset属性的值\n"], "ans": ["//meta[1]/@charset\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "kf59216457", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["与或\n"], "ans": ["格式：\n", "and \n", "or \n", "例子：\n", "选取notbook标签，要求该标签具有name属性，同时class属性值为active\n", "//notbook[@name and @class=\"active\"]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "xt95823482", "exam_id": "zvg475", "stu_id": "oq29"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "wet655", "stu_id": "lb71"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["与或\n"], "ans": ["格式：\n", "and \n", "or \n", "例子：\n", "选取notbook标签，要求该标签具有name属性，同时class属性值为active\n", "//notbook[@name and @class=\"active\"]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "xt95823482", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["选取notbook，要求它的子级price标签包裹文本值大于9000\n"], "ans": ["例子：\n", "//notbook[price>9000]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "sb20364451", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["基本节点的选取\n"], "ans": ["nodename\t选取此节点的所有子节点。\n", "/\t默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。\n", "//\t从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。\n", ".\t选取当前节点。\n", "..\t选取当前节点的父节点。\n", "@\t选取属性。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ox57001164", "exam_id": "otj819", "stu_id": "ya14"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "ptt316", "stu_id": "tg60"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kr61918691", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "oh30676069", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": [], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "vx87225563", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "anb241", "stu_id": "wc14"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["安装lxml\n"], "ans": ["pip install lxml\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "xi28903090", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["把一个html字符串转换为Element对象\n"], "ans": ["Element对象 = etree.HTML(html字符串)\n", "备注，Element对象具有xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "oz95217075", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["选取某个节点，要求属性等于指定的值\n"], "ans": ["例子：\n", "//mon[@class='m2']\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "fz35662508", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["选取具有某个属性的节点\n"], "ans": ["格式：\n", "节点【@id】\n", "例子：\n", "选取具有id属性的节点\n", "//mon[@id]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "vm53601252", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "uwn860", "stu_id": "oq29"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kr61918691", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "oh30676069", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": [], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "vx87225563", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "uwe997", "stu_id": "tt05"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "oh30676069", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kr61918691", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["往键名为name的值中添加内容2019\n"], "ans": ["127.0.0.1:6379> append name 2019\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "hc41402015", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "zgi071", "stu_id": "lb71"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kr61918691", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "oh30676069", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "vsm256", "stu_id": "rm19"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["求长度的过滤器\n"], "ans": ["单词：length\n", "例如：\n", "{{ title|length }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "wb86294420", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取位置不等于2的节点\n"], "ans": ["//mon[position()!=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "es07274270", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["选取具有某个属性的节点\n"], "ans": ["格式：\n", "节点【@id】\n", "例子：\n", "选取具有id属性的节点\n", "//mon[@id]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "vm53601252", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "rec270", "stu_id": "ya14"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "oh30676069", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kr61918691", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["定义一个视图类，所需的父类View，如何导入\n"], "ans": [], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "ty57411341", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "iaj459", "stu_id": "tg60"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "ilr015", "stu_id": "td68"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "uat188", "stu_id": "if84"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "uat188", "stu_id": "if84"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "hec172", "stu_id": "hd67"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "pns573", "stu_id": "wh42"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["选取具有某个属性的节点\n"], "ans": ["格式：\n", "节点【@id】\n", "例子：\n", "选取具有id属性的节点\n", "//mon[@id]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "vm53601252", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["安装lxml\n"], "ans": ["pip install lxml\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "xi28903090", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "xbj392", "stu_id": "oq29"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "vnr649", "stu_id": "wm85"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "ief338", "stu_id": "tt05"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "ser290", "stu_id": "lb71"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "xfj645", "stu_id": "rm19"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["选取所有的notbook标签或者mon标签\n"], "ans": ["例子：\n", "//notbook | //mon\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hp32712516", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "xij833", "stu_id": "ya14"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "fei937", "stu_id": "sm59"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "bw70466308", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "mwh225", "stu_id": "tg60"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "fez765", "stu_id": "pm12"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "ans": [], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "zq51021791", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["统计\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "fm69691266", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["分页相关\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "gv07387341", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "cmo816", "stu_id": "td68"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "ans": [], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "zq51021791", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["统计\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "fm69691266", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "brw679", "stu_id": "wh42"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "ans": [], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "zq51021791", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["获取节点的文本\n"], "ans": ["节点/text()\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "yv08099975", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["选取所有的notbook标签或者mon标签\n"], "ans": ["例子：\n", "//notbook | //mon\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hp32712516", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["把一个html字符串转换为Element对象\n"], "ans": ["Element对象 = etree.HTML(html字符串)\n", "备注，Element对象具有xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "oz95217075", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["选取某个节点，要求属性等于指定的值\n"], "ans": ["例子：\n", "//mon[@class='m2']\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "fz35662508", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["往键名为name的值中添加内容2019\n"], "ans": ["127.0.0.1:6379> append name 2019\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "hc41402015", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["选取notbook，要求它的子级price标签包裹文本值大于9000\n"], "ans": ["例子：\n", "//notbook[price>9000]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "sb20364451", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["获取位置不等于2的节点\n"], "ans": ["//mon[position()!=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "es07274270", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "tiq243", "stu_id": "oq29"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "ans": [], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "zq51021791", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["判空查询\n"], "ans": ["关键词：\n", "is null\t\t\t判断为空\n", "is not null\t\t判断非空\n", "例子：\n", "查询gender值为null的数据\n", "select * from student where gender is null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr23537207", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["分页相关\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "gv07387341", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "len zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "gw36277895", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "irz196", "stu_id": "lb71"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["分页相关\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "gv07387341", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n"], "ans": ["r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "jm12016621", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["统计\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "fm69691266", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "ans": [], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "zq51021791", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": [" \n", "for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zl28559741", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "qxx446", "stu_id": "rm19"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["发起一个带请求头的get请求\n"], "ans": ["requests.get(网址，headers=字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "sd89175603", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["获取pc标签下notbook标签的所有属性值\n"], "ans": ["//pc/notbook/@*\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "of36847917", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["查看日志\n"], "ans": ["git log\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lf26154875", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["lis键的0号数据改为pp\n"], "ans": ["127.0.0.1:6379> lset lis 0 pp\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "vt19027272", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["与或\n"], "ans": ["格式：\n", "and \n", "or \n", "例子：\n", "选取notbook标签，要求该标签具有name属性，同时class属性值为active\n", "//notbook[@name and @class=\"active\"]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "xt95823482", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["获取最后一个节点\n"], "ans": ["格式：\n", "标签[last()]\n", "例子：\n", "//mon[last()]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ev82363455", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["查看版本操作记录\n"], "ans": ["git reflog\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nq62091296", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "ujt474", "stu_id": "ya14"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["统计\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "fm69691266", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["分页相关\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "gv07387341", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["分组，按照某个字段进行分组\n"], "ans": ["关键词：\n", "group by\n", "例子：\n", "查询男生女生总数\n", "select gender,count(*) from student group by gender;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "jr38880911", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["往键名为name的值中添加内容2019\n"], "ans": ["127.0.0.1:6379> append name 2019\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "hc41402015", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "vqp048", "stu_id": "sm59"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "ans": [], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "zq51021791", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["tar压缩格式\n"], "ans": ["》以gzip方式压缩并打包\n", "tar cvfz 包名称.tar.gz \n", "》以bzip2的方式压缩并打包\n", "tar cvfj 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "cc45192593", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["往键lis里面数据a1的前面\n", "添加数据m1\n"], "ans": ["127.0.0.1:6379> linsert lis before a1 m1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tv42428055", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查询数据表中全部数据，查看全部字段\n"], "ans": ["格式：\n", "select * from 表名;\n", "例子：\n", "select * from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "uu04604484", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["分页相关\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "gv07387341", "exam_id": "cnq339", "stu_id": "tg60"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "jsu943", "stu_id": "td68"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["获取位置大于1的所有节点\n"], "ans": ["//mon[position()>1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "af91254276", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "fze547", "stu_id": "wh42"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["基本节点的选取\n"], "ans": ["nodename\t选取此节点的所有子节点。\n", "/\t默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。\n", "//\t从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。\n", ".\t选取当前节点。\n", "..\t选取当前节点的父节点。\n", "@\t选取属性。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ox57001164", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["选取具有某个属性的节点\n"], "ans": ["格式：\n", "节点【@id】\n", "例子：\n", "选取具有id属性的节点\n", "//mon[@id]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "vm53601252", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["把一个html字符串转换为Element对象\n"], "ans": ["Element对象 = etree.HTML(html字符串)\n", "备注，Element对象具有xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "oz95217075", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["获取位置不等于2的节点\n"], "ans": ["//mon[position()!=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "es07274270", "exam_id": "umb522", "stu_id": "oq29"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["访问用户中心的办法\n"], "ans": ["一，请求头中带上cookies数据\n", "request.get(网址，headers=字典)\n", "备注，字典中存一个cookie的键值对\n", "键是：Cookie\n", "值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; \n", "二，get方法带上cookie参数,值是一个字典\n", "格式：\n", "response = request.get(url, headers=请求头字典, cookies=cookie字典)\n", "字典的键是：uuid_tt_dd\n", "值是：10_28743412270-1569723942844-420746\n", "字典的完整形态类以于\n", "{\n", "'uuid_tt_dd'='10_28743412270-1569723942844-420746',\n", "'dc_session_id'='10_1569723942844.879679'\n", "}\n", "三，使用session类\n", "1，实例化一个对session类对象\n", "2，让该对象去登陆网站，登陆成功对象便得到了cookie数据\n", "3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。\n", "例子：\n", "s = requests.session()\n", "s.post(登陆url, params=参数字典)\n", "res = s.get(用户中心url)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "fl60531545", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["仓库内容添加到暂存区\n"], "ans": ["》添加指定的文件\n", "git add 文件名\n", "》添加全部文件\n", "git add .\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wo73277409", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["响应对象的text属性与content属性的相同点与不同点\n"], "ans": ["相同点：\n", "都可以拿到响应的内容\n", "不同点：\n", "数据类型不一样\n", "text拿到string类型\n", "content拿到bytes类型\n", "注意：\n", "如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ph54750549", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["根据图片网址img_url，保存图片\n", "介绍流程\n"], "ans": ["1 发起请求，获取响应对象。\n", "2 读取响应对象中的内容，用content属性读，得到图片的内容，bytes类型\n", "3 保存图片，以字节流模式写入内容\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ko30464394", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["总路由\n", "为什么总路由从urls.py中开始找\n"], "ans": ["在settings.py中配置了\n", "ROOT_URLCONF='项目名.urls'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "op13468090", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["获取节点的属性\n"], "ans": ["节点/@属性名\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ub66433617", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["往students键中插入成员-左侧插入\n", "zs1\n", "ls2\n", "wu3\n"], "ans": ["127.0.0.1:6379> lpush students zs1 ls2 wu3\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "hc76000520", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["查看建表语句\n"], "ans": ["格式：\n", "show create table 表名;\n", "例子：\n", "show create table student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "td74943087", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["lis键中查找b\n", "找到后从右向左删1个\n"], "ans": ["127.0.0.1:6379> lrem lis -1 b\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "fp50298869", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["发起一个get请求，带上参数\n"], "ans": ["request.get(url, params=参数字典)\n"], "tips": ["效果，会在url后拼上传递的参数\n", "例如http://www.baidu.com/?name=zs&age=18\n", "post请求同理\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "yq97868328", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["初始化设置当前目录为仓库目录\n"], "ans": ["git init\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "mr13184994", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["基本的爬虫流程\n"], "ans": ["一，发起请求，获得响应对象\n", "二，从响应对象中提出有效内容\n", "包括：\n", "后面要爬取的url\n", "期望的数据\n", "三，保存数据\n", "四，发起新的请求或者结束\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "zh30473322", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["过滤器的使用格式\n"], "ans": ["模板变量|过滤器：参数\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "te49903562", "exam_id": "qec992", "stu_id": "ya14"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["进入虚拟环境\n"], "ans": ["格式\n", "workon 环境名\n", "例子\n", "workon dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "mu14693306", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "xm74634616", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["创建虚拟环境\n"], "ans": ["格式：\n", "mkvirtualenv 虚拟环境名\n", "例子：\n", "mkvirtualenv dailyfresh\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "jm01289499", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["一次获取哈希值中多个字段的值\n"], "ans": ["格式：\n", "hmget 键 字段1 字段n\n", "例子：获取zs的height字段值，weight字段值\n", "hmget zs height weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "yl21141039", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "vtj835", "stu_id": "tg60"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "vei664", "stu_id": "td68"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "iqk252", "stu_id": "hd67"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "reg167", "stu_id": "wh42"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "sui822", "stu_id": "wc14"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["列出所有虚拟环境\n"], "ans": ["lsvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "uj68395069", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["删除键name,键age\n"], "ans": ["连接对象.delete(\"name\", \"age\")\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "ie48187485", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["基本节点的选取\n"], "ans": ["nodename\t选取此节点的所有子节点。\n", "/\t默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。\n", "//\t从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。\n", ".\t选取当前节点。\n", "..\t选取当前节点的父节点。\n", "@\t选取属性。\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ox57001164", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["删除数据库\n"], "ans": ["格式：\n", "drop database 数据库名;\n", "例子：\n", "drop database pyhui;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "du17385515", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["如何安装requests模块\n"], "ans": ["pip install requests\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "pj38283531", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获得连接对象\n"], "ans": ["import redis\n", "conn = redis.StrictRedis(host=ip地址，port=端口, db=0)\n"], "tips": ["conn代表的是某一个数据库的连接对象\n"], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "od28207131", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["静态目录的配置\n"], "ans": ["》一，新建一个static目录\n", "》二，配置这个目录 \n", "在settings.py中 \n", "STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "ad90609686", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["伪造成浏览器在访问\n"], "ans": ["通过在请求头中添加user-agent来伪造成浏览器\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "zm63582212", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["tar解压缩\n"], "ans": ["》解压缩gzip方式的压缩包\n", "tar xvfz 包名称.tar.gz\n", "》解压缩bzip2方式的压缩包\n", "tar xvfg 包名称.tar.bz2\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "tk58174658", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["python远程连接redis的配置\n", "如何让windows的python可以连接上centos的redis服务\n"], "ans": ["1，centos关闭防火墙对6379端口的保护\n", "2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)\n", "3, redis配置，保护模式关闭（protected-mode no）\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "02-远程连接.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\02-远程连接.txt", "test_id": "xf34266092", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取节点的文本\n"], "ans": ["节点/text()\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "yv08099975", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["上传图片的目录配置\n"], "ans": ["一，新建目录，用于存放用户上传的图片\n", "例如，在static目录下创一个media目录\n", "二，配置目录\n", "在settings.py中配置\n", "# 上传文件的目录保存\n", "MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "qi46060433", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["选取mon标签中class属性值中包含m的\n"], "ans": ["//mon[contains(@class,\"m\")]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "er73436378", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["简洁的查看log日志\n", "一行显示\n"], "ans": ["$ git log --pretty=oneline\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "yo93867136", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["查看键name的剩余时间\n"], "ans": ["127.0.0.1:6379> ttl name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "it77623531", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "vwt884", "stu_id": "oq29"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["模板变量的显示\n"], "ans": ["{{ 变量名 }}\n", "说明：变量的来源，来自视图的传递\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "zm39573468", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "nys622", "stu_id": "wm85"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "jmy389", "stu_id": "tt05"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查看当前正在使用的数据库\n"], "ans": ["例子：\n", "> db\n", "one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "zp13285866", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["合并分支\n"], "ans": ["格式：\n", "git merge 另一个分支名称\n", "例子：\n", "一，切换到接收分支\n", "git checkout 接收分支\n", "$ git checkout master\n", "二，接收分支合并数据\n", "》接收dev分支的代码\n", "git merge dev\n", "》接收zhaoyun分支的代码\n", "git merge zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "df43898032", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查看分支\n"], "ans": ["$ git branch\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vt43300579", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取响应内容\n"], "ans": ["方式一：string类型的结果\n", "响应对象.text\n", "方式二：bytes数据类型\n", "响应对象.content\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "ie63893383", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取请求头\n"], "ans": ["响应对象.request.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "tz77992736", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["在模板页中如何加载静态文件\n"], "ans": ["一，加载模板的配置\n", "{% load staticfiles %}\n", "二，利用配置完成静态路径的拼接\n", "如果有个图片存放在\n", "项目目录/static/image/a.jpg\n", "那么这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "02-模板语言.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\02-模板语言.txt", "test_id": "ma22225420", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取响应网址\n"], "ans": ["响应对象.url\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "hr25228963", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["生成公钥与私钥\n"], "ans": ["命令：\n", "ssh-kengen\n", "效果：\n", "在提示的路径上会有公钥与私钥生成\n", "公钥配到网上\n", "私钥留在电脑\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "av77104694", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查询中的比较运算符\n"], "ans": ["符号：\n", "等于 =\n", "大于 >\n", "小于 <\n", "大于等于 >=\n", "小于等于 <=\n", "不等于 !=\n", "例子：\n", "查询gender字段不为0的数据\n", "select * from student where gender != 0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "lb59308253", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["<div class=\"nam\">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的\n"], "ans": ["import re\n", "str='<div class=\"nam\">中国</div>'\n", "res=re.findall(r'<div class=\".*\">(.*?)</div>',str)\n", "print(res)       ==》      ['中国']\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "pa80172593", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "ifr940", "stu_id": "lb71"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["python中断言方法举例\n"], "ans": ["a=2\n", "assert(a>1)\n", "print('断言成功，程序继续向下执行')\n", "b=2\n", "assert(b>3)\n", "print('断言失败，程序报错') #AssertionError　　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "to24996864", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["创建虚拟环境时指定python版本\n"], "ans": ["格式：\n", "mkvirtualenv --python==解释器的路径 虚拟环境名称\n", "例子：\n", "mkvirtualenv --python==c:\\Python36\\python.exe hy_env\n", "说明：\n", "如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "fh79428470", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["re_path的使用\n"], "ans": ["》格式：\n", "re_path(正则式，视图）\n", "注意：使用前确保re_path导入了\n", "》导入，re_path的导入与path的导入在同一个位置\n", "from django.urls import re_path\n", "》使用\n", "例如：匹配 127.0.0.1/\n", "re_path(r\"^$\", views.article)\n", "例如：匹配路径中的年份  127.0.0.1/list/2019\n", "repath(r\"^list/(?P<year>\\d{4}/\"), views.article_list)\n", "例如：匹配路径中的月份   \n", "re_path(r\"list/(?P<month>\\d{2}/\"), views.article_list)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ld98376417", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["列出5个python标准库\n"], "ans": ["os datetime sys re math time random\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt01149440", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "yps346", "stu_id": "rm19"}, {"ask": ["获取一个哈键的所有字段\n"], "ans": ["格式：\n", "hkeys 键\n", "例如：获取一个键名为zs的哈希数据中所有字段\n", "hkeys zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "il40634992", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["获取z1键的所有成员值\n"], "ans": ["127.0.0.1:6379> zrange z1 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "dk96918409", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["版本回退\n"], "ans": ["一，按照版本号回退\n", "格式：\n", "git reset --hard 版本号\n", "例子：\n", "$ git reset --hard d3064f0\n", "二，按照数量回退\n", "方式1：通过^\n", "例子：回退到前两个版本\n", "git reset --hard HEAD^^\n", "方式2：通过~\n", "例子：回退到前50个版本\n", "git reset --hard HEAD~50\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "kr14858959", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["查看所有的数据库\n"], "ans": ["格式：\n", "show databases;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "kq85558280", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["修改classname的值为pythonOne\n"], "ans": ["127.0.0.1:6379> set classname pythonOne\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "yy47099323", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["利用Element对象的xpath方法取值\n"], "ans": ["格式：\n", "返回值 = Element对象.xpath(字符串xpath选择语句)\n", "注意：\n", "返回值是列表类型\n", "如果返回值是一个节点\n", "那么该节点，仍然可以继续使用xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "pr62422989", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["如何获取下一页的URL地址\n"], "ans": ["一，寻找URL规律，根据规律来拼下一页\n", "二，通过\"下一页\"链接url来找\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "mp78072070", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["获取pc标签下notbook标签的所有属性值\n"], "ans": ["//pc/notbook/@*\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "of36847917", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["ALLOWED_HOSTS的功能\n"], "ans": ["配置中ALLOWED_HOSTS的功能\n", "只有列表中的ip才可以访问\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "fh95490441", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["修改表中字段-删除字段\n"], "ans": ["格式：\n", "alter table 表名 drop 字段;\n", "例子：\n", "alter table pistudent drop defen;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "pc00894946", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["添加string类型的数据\n"], "ans": ["连接对象.set(键，值)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "pa17408121", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "ptv630", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["发起请求，伪装为浏览器\n"], "ans": ["办法，发起请求时，在请求头中添加user-agent数据\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "vq97440939", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["如何定义一个视图类\n"], "ans": ["用法：\n", "导入View类，作为父类\n", "自定义一个类，继承View类\n", "例子：商品首页的页面渲染与展示\n", "from django.views.generic import View\n", "class IndexView(View):\n", "    \"\"\"首页\"\"\"\n", "    def get(self,request):\n", "        \"\"\" 显示首页 \"\"\"\n", "        return render(request, \"index.html\")\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "02-模块与功能.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\02-模块与功能.txt", "test_id": "jy57341339", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["安装virtualenvwrapper\n"], "ans": ["》windows系统的安装\n", "pip install virtualenvwrapper-win\n", "》linux系统的安装\n", "pip install virtualenvwrapper\n"], "tips": ["直接安装virtualenvwrapper，会自动安装virtualenv\n"], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "cl82545433", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["缓冲区的内容清除\n", "清除缓冲区中记录的对某一个文件的修改\n"], "ans": ["格式：\n", "git reset HEAD 文件名\n", "例子：\n", "git reset HEAD a.py\n", "显示：\n", "$ git reset HEAD a.py\n", "Unstaged changes after reset:\n", "M       a.py\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fq45392788", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["如何在一个函数内部修改全局变量\n"], "ans": ["a=1\n", "def test():\n", "    global a   #利用global 修改全局变量\n", "    a=2\n", "    print(a)\n", "    return\n", "test()  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "zt56994900", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["往lis键中数据a4后面添加数据n4\n"], "ans": ["127.0.0.1:6379> linsert lis after a4 n4\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "tp89483501", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["获取当前线程的对象\n"], "ans": ["threading.current_thread()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yc03892255", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["删除分支\n"], "ans": ["格式：\n", "git branch -d 分支名称\n", "例子：\n", "$ git branch -d zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "vb11659962", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["reverse函数反转路径-不带参数的反转\n"], "ans": ["》使用前记得确保导入了\n", "from django.shortcuts import reverse\n", "》格式\n", "reverse(“命名空间：别名”）\n", "reverse（“别名”）\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xt14527492", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["一个条件的查找\n"], "ans": ["格式：\n", "db.集合名称.find(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "om61295295", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["bzip2压缩\n"], "ans": ["bzip2 文件1 文件n\n"], "tips": ["被压缩文件会消失，新生成的压缩文件以.bz2结尾\n", "单个文件被压缩，并不会合并成一个压缩包\n", "不可以压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "wz91255290", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["删除哈希数据某一个字段\n"], "ans": ["格式：\n", "hdel 键 字段\n", "例子：删除zs的weight字段\n", "hdel zs weight\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "zh87474365", "exam_id": "jjv288", "stu_id": "sm59"}, {"ask": ["从选取到的一堆节点中拿到指定索引的节点对象\n"], "ans": ["办法：利用索引\n", "例子：//a[1]\n", "注意：起始值为1\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ms94454618", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["模糊查询\n"], "ans": ["符号：\n", "like，模糊查询关键词\n", "%，代表任意多个任意字符\n", "_，代表一个任意字符\n", "例子：\n", "查询name以赵字开头的\n", "select * from student where name like '赵%';\n", "查询name是两个字组成的\n", "select * from student where name like '__';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bd20181494", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["获取z1键里权值在1到5范围的数据\n"], "ans": ["127.0.0.1:6379> zrangebyscore z1 1 5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "xj85358655", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]\n", "并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]\n"], "ans": ["def square(x):\n", "　　return x**2\n", "res=map(square,[1,2,3,4,5])\n", "res=[i for i in res if i>10]\n", "print(res)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "kk28139804", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除文件的操作\n"], "ans": ["1，本地删除\n", "rm -rf 目标\n", "2，提交到缓存区\n", "git add 目标\n", "3，提交到版本\n", "git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wd47405710", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句\n"], "ans": ["select distinct name from student\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "yf26981835", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除z1键里的两个成员two,three\n"], "ans": ["127.0.0.1:6379> zrem z1 two three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ic98463950", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["修改表中字段-改字段名\n"], "ans": ["格式：\n", "alter table 表名 change 原字段名 新字段名 类型 约束;\n", "例子：\n", "alter table pistudent change score defen tinyint ;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "xw68859571", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["工作区的内容恢复为修改前的内容\n"], "ans": ["格式：\n", "git checkout -- 文件名\n", "例子：\n", "。让所有的内容变为修改前\n", "$ git checkout -- .\n", "。让a.py变为修改前\n", "$ git checkout -- a.py\n", "图例：\n", "https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lu58946554", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["修改表中字段的类型-仅改类型-不改字段名\n"], "ans": ["格式：\n", "alter table 表名 modify 字段名 约束;\n", "例子：\n", "alter table pistudent modify score char(3) default '60';\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ca99273567", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["获取z1键中数据three的权值\n"], "ans": ["127.0.0.1:6379> zscore z1 three\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "ng58043608", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["哈希的数据结构\n"], "ans": ["redis数据库是键值形式的\n", "比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3]｝\n", "如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：\n", "｛\"name\":\"zs\", \"lis\":[1,2,3], \"ha\":{\"f1\":\"v1\",\"f2\":\"v2\"}｝\n", "博客：\n", "https://blog.csdn.net/ifubing/article/details/101427123\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "kg16544937", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["总路由根据路径进行分发\n"], "ans": ["》导入include模块\n", "from django.urls import include\n", "》进行分发\n", "path(\"book/\", include(\"book.urls\"))\n", "》其它形态\n", "path(\"book/\",include([path(\"list\", 视图)]\n", "))\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "xt14394491", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["模板页中如何使用静态文件\n"], "ans": ["一，导入静态配置\n", "{% load staticfiles %}\n", "二，拼静态文件的路径\n", "例如在static目录下有image目录，目录下有a.jpg\n", "这样子拼路径\n", "{% static 'image/a.jpg'}\n"], "tips": [], "1": "03-django", "2": "03-配置", "3": "01-基本配置.txt", "file_path": "D:\\易三就业版\\source\\03-django\\03-配置\\01-基本配置.txt", "test_id": "nz98427719", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["冲突的预防\n"], "ans": ["确保当前自己的版本是最新的版本\n", "只提交属于自己一个人的代码\n", "如果要提交的是多人合作的文件\n", "就更更新文件，然后再提交\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "zf92890498", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["bzip2解压缩\n"], "ans": ["bunzip2 压缩文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "bg07465187", "exam_id": "drw780", "stu_id": "tg60"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["如何启动一个线程\n"], "ans": ["》导入线程模块\n", "import threading\n", "》创建线程对象\n", "t = threading.Thread(target=函数体，args=(参数,))\n", "》让线程对象运行起来\n", "t.start()\n"], "tips": ["明确主线程与子线程的执行与等待关系\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "zt59753742", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["for遍历基本使用\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 %}\n", "临时变量\n", "{% endfor %}\n", "注意：\n", "for中无continue与break\n", "扩展：\n", "forloop.counter\t当前循环的索引值,从1开始\n", "forloop.counter0\t当前循环的索引值,从0开始\n", "forloop.revcounter\t当前循环的倒序索引值(以1结束)\n", "forloop.revcounter0\t当前循环的倒序索引值(以0结束)\n", "forloop.first\t当前循环是不是第一次循环(返回的是一个布尔值)\n", "forloop.last\t当前循环是不是最后一次循环(返回的是一个布尔值)\n", "forloop.parentloop\t本层循环的外层循环\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "em24914119", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["分组\n"], "ans": ["格式：\n", "db.集合名.aggregate({_id:\"$字段名\"})\n", "例子：按照classname的值来进行分组\n", "> db.colc.aggregate({$group:{_id:'$classname'}})\n", "{ \"_id\" : \"java\" }\n", "{ \"_id\" : \"php\" }\n", "{ \"_id\" : \"python02\" }\n", "{ \"_id\" : \"python\" }\n", "{ \"_id\" : null }\n", ">\n", "例子：按照classname的值来进行分组并统计人数\n", "> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})\n", "{ \"_id\" : \"java\", \"num\" : 1 }\n", "{ \"_id\" : \"php\", \"num\" : 1 }\n", "{ \"_id\" : \"python02\", \"num\" : 1 }\n", "{ \"_id\" : \"python\", \"num\" : 1 }\n", "{ \"_id\" : null, \"num\" : 2 }\n", ">\n", "例子：分组统计小组人数，统计年龄平均值\n", "> db.one.aggregate({$group:{_id:\"$class\",count:{$sum:1},pjnl:{$avg:\"$age\"}}})\n", "{ \"_id\" : \"php\", \"count\" : 1, \"pjnl\" : 86 }\n", "{ \"_id\" : \"python\", \"count\" : 2, \"pjnl\" : 28 }\n", "例子：分组并得到最小值\n", "> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})\n", "{ \"_id\" : 1, \"minage\" : 52 }\n", "{ \"_id\" : 0, \"minage\" : 38 }\n", ">   \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "ze65923603", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "wzx036", "stu_id": "td68"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "atx157", "stu_id": "if84"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "atx157", "stu_id": "if84"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "xar086", "stu_id": "hd67"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["for遍历，逆序遍历\n"], "ans": ["格式：\n", "{% for 临时变量 in 容器 reversed %}\n", "临时变量\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "dl28366900", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "db.集合名称.update(查找条件，修改内容，[{multi:true}])\n", "情况一：查到数据，完全修改\n", "例子：这种效果会把查到的结果完全的替代为修改的内容\n", "查找姓名为zs的数据行，把整个数据修改年龄为20\n", "> db.colc.update({name:\"zs\"},{age:20})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">   \n", "情况二：查到数据，保留修改（只修改指定的字段）\n", "例子，查找班级为python的数据，把年级改为2\n", "> db.colc.update({classname:\"python\"},{$set:{grade:2}})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", "格式：\n", "要修改的内容\n", "{$set:{要修改的键：要修改的值}}\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "gq79762589", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["高级模板变量取值与方法的调用\n", "模板变量为列表，字典时，如何取成员\n", "模板变量为对象时，如何调方法\n"], "ans": ["取值规则：\n", "通过点来取值，例如：\n", "字典.键， 列表.索引， 对象.属性取值\n", "调方法规则：\n", "模板变量.方法名  \n", "注意，方法名后不用加括号\n", "例如：\n", "模板变量 stu_list 是一个列表，取列表的2号位\n", "{{ stu_list.2 }}\n", "例如：\n", "模板变量 user 是一个对象，取它的name属性值\n", "{{ user.name }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "gu29642307", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["字典遍历，同时得到键与值\n"], "ans": ["例子：\n", "{% for key, val in persion.items %}\n", "key--val\n", "{% endfor %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "wl68820240", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["统计查询结果的数量\n", "两种方式\n"], "ans": ["方式一\n", "db.集合名称.find(条件).count()\n", "方式二\n", "db.集合名称.count(条件)\n", "例子：\n", "查询年龄小于60的数据条目数\n", "db.colc.find({age:{$lt:60}}).count()\n", "db.colc.count({age:{$lt:60}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "yr94545494", "exam_id": "uww906", "stu_id": "wh42"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["往表中添加字段\n"], "ans": ["格式：\n", "alter table 表名 add 字段 类型 约束;\n", "例子：\n", "alter table pistudent add score int default 60;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hx95697088", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["查看数据库的版本\n"], "ans": ["select version();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "aa27172246", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["如何查看redis是否启动\n"], "ans": ["ps aux|grep redis\n"], "tips": ["[root@192 ~]# ps aux|grep redis\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "fg85539460", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "owq296", "stu_id": "yj70"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "dmc941", "stu_id": "wc14"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["查询，只显示指定的字段\n"], "ans": ["格式：\n", "select 字段1， 字段n from 表名；\n", "例子：\n", "select id, name from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "ts12450290", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["用代码运行一个项目\n"], "ans": ["python manage.py runserver\n", "期望它以指定的ip和端口运行\n", "python mange.py runserver IP地址：端口\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "gv53935452", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["查看表结构\n"], "ans": ["格式：\n", "desc 表名;\n", "desc student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "gh31876369", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["删除数据表\n"], "ans": ["格式：\n", "drop table 表名\n", "示例：\n", "drop table one;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "hk75112835", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["查看当前选中的是哪个数据库\n"], "ans": ["select database();\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "gi49058012", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["选取notbook，要求它的子级price标签包裹文本值大于9000\n"], "ans": ["例子：\n", "//notbook[price>9000]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "sb20364451", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["4、字典如何删除键和合并两个字典\n"], "ans": ["dic={'name':'alex','age':18,'sex':'female'}\n", "del dic['sex']\n", "print(dic)  \n", "# {'name': 'alex', 'age': 18}\n", "dic1={'sex':'female'}\n", "dic.update(dic1)\n", "print('更新后的dic：',dic)   \n", "# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "sk69490408", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["删除指定的数据行\n"], "ans": ["格式：\n", "delete from 表名 where 条件；\n", "例子：\n", "delete from student where id>4;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "io23628744", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["进入虚拟环境所在的目录\n"], "ans": ["cdvirtualenv\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "lv54200222", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["往键名为name的值中添加内容2019\n"], "ans": ["127.0.0.1:6379> append name 2019\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "hc41402015", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["发起一个get请求\n"], "ans": ["# 导入模块\n", "import request\n", "# 发起请求\n", "响应对象 = requests.get(网址)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "me55923874", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["把一个html字符串转换为Element对象\n"], "ans": ["Element对象 = etree.HTML(html字符串)\n", "备注，Element对象具有xpath方法\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "oz95217075", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取pc标签下notbook标签的所有属性值\n"], "ans": ["//pc/notbook/@*\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "of36847917", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["python连redis需要安装的包\n"], "ans": ["pip install redis\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "hx71103725", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取响应状态码\n"], "ans": ["响应对象.status_code\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "rf61276862", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取s1键里的成员值\n"], "ans": ["127.0.0.1:6379> smembers s1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "cv52858568", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["视图中获取get方式传递过来的参数\n"], "ans": ["在视图中通过\n", "request.GET 获取get传参的字典\n", "通过request.GET[键] 获取字典中键所对应的值\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "bb86703826", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["查看当前库里的所有数据表\n"], "ans": ["show tables;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "ew09934500", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["聚合查询\n"], "ans": ["符号：\n", "count(*)\t统计总数\n", "max(列)\t\t此列最大值\n", "min(列)\t\t此列最小值\n", "sum(列)\t\t此列总和\n", "avg(列)\t\t此列平均值\n", "例子：\n", "查询全部数据有多少条\n", "select count(*) from student;\n", "查询年龄最大的值\n", "select max(age) from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "vo43275161", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取一共有多少个键值对\n"], "ans": ["格式：\n", "hlen 键\n", "例子：获取zs一共有多少个字段\n", "hlen zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ms76734245", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["如何启动服务端\n"], "ans": ["redis-server 配置的地址\n"], "tips": ["[root@192 ~]# redis-server /etc/redis/redis.conf\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "bv06041357", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["选取所有的notbook标签或者mon标签\n"], "ans": ["例子：\n", "//notbook | //mon\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "hp32712516", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["修改响应对象的默认解码格式为utf8\n"], "ans": ["响应对象.encoding=\"utf8\"\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wl83768950", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["创建数据表\n"], "ans": ["格式：\n", "create table 表名（字段 类型 约束）\n", "示例：\n", "》创建一个表，主键primary key， 自增长 auto_increment\n", "create table student(id int primary key auto_increment);\n", "》删掉它\n", "drop table student;\n", "》换个姿式再创建一次，不允许为空 not null\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null\n", ");\n", "》再删掉\n", "drop table student;\n", "》再创建，default 0\n", "create table student(\n", "id int auto_increment primary key,\n", "name varchar(20) not null,\n", "age int not null,\n", "gender bit default 1,\n", "address varchar(20),\n", "isDelete bit default 0\n", ");\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "dl13737028", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["遍历容器无数据时的显示\n"], "ans": ["格式：\n", "｛% for 临时变量 in 容器 %}\n", " \t临时变量\n", "｛% empty %}\n", "无数据\n", "｛% endfor %｝\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ty99941353", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取第二个节点\n"], "ans": ["//mon[2]\n", "//mon[position()=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ca59889766", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["命名空间的使用\n"], "ans": ["为了防止多个别名导致的冲突，在总路由定义命名空间\n", "一，总路由定义命名空间\n", "path(路径，include('应用名.urls', namespace='空间名'))\n", "例如：path('cms1/', include('cms.urls', namespace='cms1'))\n", "二，在应用的urls.py中定义一个变量\n", "app_name = 应用名\n", "例如：app_name=book\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "ah39440702", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取位置不等于2的节点\n"], "ans": ["//mon[position()!=2]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "es07274270", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["获取响应头\n"], "ans": ["响应对象.headers\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "gr98339478", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "jzi837", "stu_id": "oq29"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "grb800", "stu_id": "wm85"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "ipg941", "stu_id": "tt05"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["centos系统安装git\n"], "ans": ["yum install git\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "gj45876074", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["redis主从如何配置\n"], "ans": ["1，复制配置文件\n", "例如，redis.conf复制一个，起名为slave.conf\n", "使用cp命令复制\n", "2，修改从服务的配置\n", "slave.conf中添加\n", "replicaof 主redis的ip地址 端口\n", "3，确保主从配置的bind被注释，例如，#bind 127.0.0.1\n", "4，确保主从配置的protected-mode no\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "03-主从.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\03-主从.txt", "test_id": "cm53023409", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["添加数据\n"], "ans": ["格式：\n", "db.集合名称.insert(字典)\n", "例子：\n", "> db.cola.insert({\"name\":\"zs\", \"age\":18})\n", "WriteResult({ \"nInserted\" : 1 })\n", "注意：\n", "关于集合名称，如果操作的是一个不存在的集合\n", "mongo会自动创建\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "it01852882", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["默认的数据库数量\n"], "ans": ["16\n"], "tips": ["取值范围是0-15\n"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "ha55823327", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["排序\n"], "ans": ["格式：\n", "以某某键进行升序排序\n", "查询结果.sort(｛键：1｝)\n", "以某某键进行降序排序\n", "查询结果.sort(｛键：-1｝)\n", "例子：\n", "查询所有的数据，以age升序排序\n", "db.colc.find().sort({age:1})\n", "查询所有的数据，以age降序排序\n", "db.colc.find().sort({age:-1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vu31854238", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["匹配数据\n"], "ans": ["例子：查到年龄大于20的数据\n", "> db.one.aggregate({$match:{age:{$gt:20}}})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">    \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "bh39803598", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数\n"], "ans": ["例子：假设路径的格式\n", "path('book/<名称1>/<名称2>/', 视图）\n", "对应的视图需要这样定义：\n", "def 视图名（request， 名称1， 名称2）：\n", "注意，视图中的形参要与path里尖括号里名称保持一致\n", "视图中就可以得到数据\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "xi01625910", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["模板的渲染，\n", "把模板文件的内容获取出来\n"], "ans": ["方式一：render_to_string\n", "》导入\n", "from django.template.loader import render_to_string\n", "》在视图中使用\n", "def index(request):\n", "\thtml = render_to_string(模板名.html)\n", "\treturn HttpResponse(html)\n", "》说明\n", "这个是render函数的基本，了解即可\n", "方式二: render \n", "》导入\n", "from django.shortcuts import render\n", "》在视图中使用\n", "def index(request):\n", "\treturn render(request, 模板名.html)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "xs21639164", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["获取lis键中最后四个元素\n"], "ans": ["127.0.0.1:6379> lrange lis -4 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "pk67525059", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["查询所有\n"], "ans": ["格式：\n", "db.集合名称.find()\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "qz85294755", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["一次性设置多个键值\n", "name,zs\n", "age,18\n", "gender,ture\n"], "ans": ["127.0.0.1:6379> mset name zs age 18 gender true\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "uv37773881", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["for循环中的变量，显示序号-顺序显示\n"], "ans": ["forloop.counter\n", "》\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.counter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数从0开始，使用\n", "forloop.counter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ho03817205", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["for循环中的变量，显示序号-反向显示\n"], "ans": ["forloop.revcounter\n", "。\n", "例子格式：\n", "{% for 变量 in 容器 %}\n", "序号：{{ forloop.revcounter }}\n", "变量\n", "{% endfor %}\n", "》\n", "计数以0结束\n", "revcounter0\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "tb07142151", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["创建分支同时切换到新分支\n"], "ans": ["格式：\n", "git checkout -b 分支名称\n", "例子：\n", "$ git checkout -b zhaoyun\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "fc38227021", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["修改mkvirtualenv默认路径的办法\n"], "ans": ["环境变量》系统变量\n", "添加WORKON_HOME\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ts49676773", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["线程锁的定义与使用\n"], "ans": ["定义\n", "import threading\n", "生成线程锁对象\n", "锁对象 = threading.Lock()\n", "上锁\n", "锁对象.acquire()\n", "解锁\n", "锁对象.release()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "yz71183455", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["正则查询\n"], "ans": ["find(｛键：/正则表达式/｝)\n", "find(｛键：$regex:正则式str｝)\n", "例子：\n", "查询sku以abc开头的数据\n", "db.products.find({sku:/^abc/})\n", "例子：查询姓名以z开头的\n", "db.colc.find({name:/^z/})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "tn16502950", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["范围运算符\n"], "ans": ["在， $in\n", "不在， $nin\n", "例子：查询年龄在 16 19 22 岁的\n", "db.colc.find({age:{$in:[16,19,22]}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "vv88230323", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["设置name键对应的值zgl，5秒钟过期\n"], "ans": ["127.0.0.1:6379> setex name 5 zgl\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ja37083434", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["冲突的发生与解决\n"], "ans": ["》发生\n", "两个分支在处理同一个文件\n", "在进行合并分支时，会冲突\n", "》解决\n", "手动编辑冲突文档解决\n", "例如下面是冲突的内容：留下想要的内容， 删掉 >>>   <<< === 等符号\n", ">>>>>head\n", "111\n", "======\n", "2222\n", "<<<<<<分支名\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "lj70567545", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "lgo722", "stu_id": "lb71"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["创建与数据库的连接\n", "定位到数据库\n", "定位到集合\n"], "ans": ["# 导入pymongo的客户端类\n", "from pymongo import MongoClient\n", "# 实例化得到一个对象\n", "client = MongoClient(host=\"127.0.0.1\", port=27017)\n", "# 连接数据库\n", "db = client['one']\n", "print(db)\n", "# 连接到集合\n", "col = db['stu']\n", "print(col)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "vi72521171", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["python2和python3的range（100）的区别\n"], "ans": ["python2返回列表，python3返回迭代器，节约内存\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cm79010641", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["避免转义给字符串加哪个字母表示原始字符串\n", "如何避免正则表达式中的内容被python解释器转义\n", "在python写正则表达式要注意什么\n"], "ans": ["注意使用r包裹一下\n", "r , 表示需要原始字符串，不转义特殊字符\n", "例如：\n", "re_path(r\"book/(\\d+)/\", bookview)\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ny72600379", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["10、python内建数据类型有哪些\n"], "ans": ["整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "xm72735164", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "zyg200", "stu_id": "rm19"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["无序列表标签\n"], "ans": ["例子：\n", "<ul>\n", "    <li><a href=\"#\">新闻标题一</a></li>\n", "    <li><a href=\"#\">新闻标题二</a></li>\n", "    <li><a href=\"#\">新闻标题三</a></li>\n", "</ul>\n", "说明：\n", "在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "jn04863052", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["表单标签\n"], "ans": ["例子：\n", "<form action=\"\" method=\"get\" enctype=\"multipart/form-data\"></form>\n", "说明：\n", "如果数据需要提交到某个网址需要使用表单标签\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "fb62342900", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["定义列表标签\n"], "ans": ["例子：\n", "<dl>\n", "    <dt>html</dt>\n", "    <dd>负责页面的结构</dd>\n", "    <dt>css</dt>\n", "    <dd>负责页面的表现</dd>\n", "    <dt>javascript</dt>\n", "    <dd>负责页面的行为</dd>\n", "</dl>\n", "说明：\n", "定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "od22014520", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["斜体标签\n"], "ans": ["<i>斜体</i>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "hs87993083", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "xfk411", "stu_id": "mc00"}, {"ask": ["安装lxml\n"], "ans": ["pip install lxml\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "xi28903090", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["修改数据\n"], "ans": ["格式：\n", "update 表名 set 列1=值1，列2=值2 where 条件\n", "例子：\n", "update student set name='赵云',age=23 where id=3;\n", "注意：\n", "一定不要漏了where 条件，否则所有数据都被改掉\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "ck53449602", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["获取lis键中的所有元素\n"], "ans": ["127.0.0.1:6379> lrange lis 0 -1\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "eb92342741", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["暂存区内容添加到版本库中\n"], "ans": ["git commit -m '版本说明'\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "wr29890754", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["给一个url起一个别名\n"], "ans": ["例子：\n", "path('login/', views.login, name='login')\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191022路由url.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191022路由url.txt", "test_id": "pd72442837", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["添加单个哈希字段值对\n", "设置zs键为哈希，存值\n", "字段height 170\n"], "ans": ["格式：\n", "hset 键 字段1 值1\n", "例子：\n", "hset zs height 170\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "hx46737901", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["获取倒数第二个节点\n"], "ans": ["例子：\n", "//mon[last()-1]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "el38137520", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["取notbook标签中name值包含m的标签\n"], "ans": ["//notbook[contains(@name,'m')]\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "zq07437471", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["url是统一资源定位符，它的组成结构\n"], "ans": ["格式：\n", "scheme：//host:port/path/?k1=v1&k2=v2#anchor\n", "详解：\n", "scheme，协议\n", "host，主机名\n", "port，端口号\n", "path，路径\n", "k1=v1&k2=v2，get参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "jx68307592", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["查看当前全部的数据库\n"], "ans": ["两种查询办法：\n", "> show databases\n", "> show dbs\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "nb21074508", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["设置classname的值为python01\n"], "ans": ["127.0.0.1:6379> set classname python01\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ly39159979", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["自定义查询，使用js语句来查\n"], "ans": ["例子：\n", "find({\n", "\t$where:function(){\n", "\t\treturn this.age>19\n", "\t}\n", "})\n", "例子：\n", "查找班级名称为python02的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.classname == \"python02\"\n", "\t}\n", "})\n", "查找年龄小于19岁的\n", "db.colc.find({\n", "\t$where:function(){\n", "\t\treturn this.age < 19 \n", "\t}\n", "})\n", "关键点：\n", "查询条件字典中以\n", "$where 为键\n", "值是一个js的匿名函数\n", "只需要函数return 一个布尔值即可\n", "如果布尔的结果为true 那么该行数据会被显示\n", "通常在匿函中的this代表了当前数据行对象\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ys35382742", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["切换分支\n"], "ans": ["格式：\n", "$ git checkout 分支名称\n", "例子：\n", "$ git checkout dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "nl15998726", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["使用代理发起请求\n"], "ans": ["request.get(网址，proxies=代理字典)\n"], "tips": ["代理字典的格式：\n", "{\"协议\"：\"ip：端口\"\"}\n", "例如：\n", "{\"http\":\"http://12.34.56.01:8000\", \"https\":\"https://12.34.56.01:8000\"}\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "wr19673115", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["导入etree\n"], "ans": ["from lxml import etree\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "fj35556556", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["让当前的线程全部执行完毕后\n", "主线程再进行下一条\n"], "ans": ["线程对象.join（）\n", "例子：\n", "t.join()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "gs38510891", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["bzip2压缩文件，同时要保留文件\n"], "ans": ["bzip2 - k 文件1 文件n\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oi70168778", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["从线程队列中取出数据\n"], "ans": ["代码：\n", "队列.get()\n", "说明：\n", "队列如果是空的，会阻塞\n", "补充：\n", "队列.get(block=False)\n", "队列如果空了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "qr67463678", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["改变日期显示格式的过滤器\n"], "ans": ["单词：date\n", "例如：\n", "{{ book.bpub_data|date:'Y年-m月-d日' }}\n"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "qh09825502", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["获取响应对象的默认解码格式\n"], "ans": ["响应对象.encoding\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "02-响应的属性与方法.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\02-响应的属性与方法.txt", "test_id": "wj80528773", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["having与where的区别\n"], "ans": ["having对分组后的结果进行过滤\n", "where对原始的查询数据进行过滤\n", "where能做的having都能够做，having功能更加，但是过滤的性能弱一些\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "tt29392820", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["python实现列表去重的方法（先通过集合去重，在转列表）\n"], "ans": ["li=[1,2,2,3,3]\n", "a=set(li)\n", "print (list(a))　\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "ne57018383", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["符号：\n", "与 and\n", "或 or\n", "非 not \n", "例子：\n", "查询id大于3并且gender等于0的\n", "select * from student where id>3 and gender=0;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "nh60984832", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["分页相关知识\n", "1，限定显示几条\n", "2，跳过几条\n"], "ans": ["格式：\n", "limit(n)，显示n条\n", "skip(m)，跳过m条\n", "一般limit与skip同时使用，实现分页效果\n", "例子：\n", "每一页显示两个数据\n", "第一页\n", "db.集合名.find().skip(0).limit(2)\n", "第二页\n", "db.集合名.find().skip(2).limit(2)\n", "第三页\n", "db.集合名.find().skip(4).limit(2)\n", "第四页\n", "db.集合名.find().skip(6).limit(2)\n", "（当前页码-1）*每页显示几个数据\n", "第n页\n", "db.集合名.find().skip((n-1)*2)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "bt90494210", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["创建分支\n"], "ans": ["格式：\n", "$ git branch 分支名称\n", "例子：\n", "$ git branch dev\n"], "tips": [], "1": "04-版本控制", "2": "01-git", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\01-git\\01-入门.txt", "test_id": "on92968519", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["创建一个线程队列队象\n"], "ans": ["代码：\n", "import queue\n", "q = queue.Queue()\n", "补充：\n", "生成一个容量为6的队列对象\n", "q = queue.Queue(6)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "us88858668", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["退出虚拟环境\n"], "ans": ["用法：\n", "deactivate\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "of42063636", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["获取string类型的键对应的值\n"], "ans": ["连接对象.get(键)\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "eh39951732", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["发起一个post请求\n"], "ans": ["requests.post(url, params=参数字典)\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "01-发起请求.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\01-发起请求.txt", "test_id": "od72989316", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["命令创建django项目\n"], "ans": ["格式：\n", "django-admin startproject 项目名称\n", "例子：\n", "diango-admin startproject first_project\n", "效果：\n", "会在当前目录下创建一个目录，名称是项目名\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "zy09937925", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["分组与对已分的组进行过滤\n"], "ans": ["格式：\n", "group by 列 having 条件\n", "意义：\n", "对某一个列进行分组，同时按照某个条件对组进行过滤\n", "例子：\n", "select gender,count(*) from student group by gender having gender is not null;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "bw02793931", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["安装scrapy\n"], "ans": ["pip install scrapy\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "km78828024", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["插入数据-插入多条数据\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);\n", "例子：\n", "insert into student(name) values('cat'), ('dog'),('mie');\n", "说明：\n", "括号，括号，括号\n", "这样的方式传多个值\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "cl68579501", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["队列中计数器减一\n"], "ans": ["队列.task_done()\n", "补充：\n", "一般与队列等待共同使用\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ed00002001", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["重命名表名\n"], "ans": ["格式：\n", "rename table 原表名 to 新表名\n", "例子：\n", "rename table student to pistudent;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "03-数据表的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\03-数据表的操作.txt", "test_id": "zd94133911", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "yuk387", "stu_id": "ya14"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["超链接标签\n"], "ans": ["例子：\n", "<a href=\"2.html\" target=\"_blank\">测试页面2</a>\n", "说明：\n", "<a>标签可以在网页上定义一个链接地址，它的常用属性有：\n", "href属性 定义跳转的地址\n", "title属性 定义鼠标悬停时弹出的提示文字框\n", "target属性 定义链接窗口打开的位置\n", "target=\"_self\" 缺省值，新页面替换原来的页面，在原来位置打开\n", "target=\"_blank\" 新页面会在新开的一个浏览器窗口打开\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "bg21119574", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["换行标签\n"], "ans": ["标签：\n", "<br>\n", "或者\n", "<br />\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "mn63719068", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["线程类的定义与启动\n"], "ans": ["自定义一个类\n", "让该类继承threading.Thread\n", "同时在自定义类中重写run方法\n", "就可\n", "例子：\n", "class Drawing(threading.Thread):\n", "    def run(self):\n", "        for x in range(3):\n", "            print('正在绘制图片', x)\n", "            time.sleep(1)\n", "》线程类实例化为一个对象并运行：\n", "t2 = Drawing()\n", "t2.start()\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "un51942561", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["不尊守爬虫协议\n"], "ans": ["ROBOTSTXT_OBEY = False\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "02-配置.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\02-配置.txt", "test_id": "wb80244828", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["创建集合（集合就是数据表）\n"], "ans": ["例子：创建一个名籽tbtwo的集合\n", "> db.createCollection(\"tbtwo\")\n", "{ \"ok\" : 1 }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "rv80093740", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["模板中的反向解析，url基本用法\n"], "ans": ["用法，两种情况：\n", "{% url '别名' %}\n", "{% url '命名空间:别名' %}\n", "例子：\n", "路由文件中\n", "path('book/detail/', views.book_detail, name='detail')\n", "在模板中可以通过\n", "{% url 'detail' %} \n", "拿到值\n", "book/detail\n", "在视图函数中可以通过\n", "reverse('detail') \n", "拿到值\n", "book/detail\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "aa07736240", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["创建项目\n"], "ans": ["格式：\n", "scrapy startproject 项目名称\n", "例子：\n", "scrapy startproject xiaoshuo\n", "效果：\n", "会在当前目录创建一个目录\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "jd53067804", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["插入数据-全列插入\n", "全部字段的值都插入\n"], "ans": ["格式：\n", "insert into 表名 values(值1，值n)\n", "例子：\n", "insert into student values(0, 'pyhui',18);\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "fy91825288", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["本地仓库推送到网上\n"], "ans": ["格式：\n", "git push -u origin\n", "例子：\n", "git push -u origin\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "da23901950", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["fun(*args,**kwargs)中的*args,**kwargs什么意思？\n"], "ans": ["*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。\n", "*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数\n", "**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "la23633697", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["添加数据\n", "如果存在，修改\n", "如果不存在，新增\n"], "ans": ["例子：\n", "> db.colc.save({_id:100,\"name\":\"ww\"})\n", "WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "zl69644352", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["插入数据\n"], "ans": ["》插入一条数据\n", "例子：\n", "res = 集合对象.insert_one({\"name\":\"悟空2\", \"age\":500, \"skill\":\"龟派气功\"})\n", "》插入多条数据\n", "例子：\n", "集合对象.insert_many(列表包字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "gd60591178", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["input控件的各种类型\n"], "ans": ["格式：\n", "<input type=\"类型\">\n", "例子：\n", "<input type=\"text\">\n", "分类：\n", "type=\"text\" 定义单行文本输入框\n", "type=\"password\" 定义密码输入框\n", "type=\"radio\" 定义单选框\n", "type=\"checkbox\" 定义复选框\n", "type=\"file\" 定义上传文件\n", "type=\"submit\" 定义提交按钮\n", "type=\"reset\" 定义重置按钮\n", "type=\"button\" 定义一个普通按钮\n", "type=\"image\" 定义图片作为提交按钮，用src属性定义图片地址\n", "type=\"hidden\" 定义一个隐藏的表单域，用来存储值\n", "value属性 定义表单元素的值\n", "name属性 定义表单元素的名称，此名称是提交数据时的键名\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "bj62664961", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["爬虫项目运行\n"], "ans": ["格式：\n", "scrapy crawl 爬虫名称\n", "例子：\n", "scrapy crawl qidian\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ar54679641", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["删除集合\n"], "ans": ["例子：\n", "> db.tbtwo.drop()\n", "true\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "hu56399293", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["队列中的等待\n"], "ans": ["队列.join()\n", "可以让任务没有完成的队列，阻塞\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "ll07056563", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["显示指定的字段\n"], "ans": ["例子：不显示_id字段，只显示name字段\n", "> db.one.aggregate({$project:{_id:0, name:1}})\n", "{ \"name\" : \"张三\" }\n", "{ \"name\" : \"李四\" }\n", "{ \"name\" : \"赵强\" }\n", ">  \n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "hr94544083", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["比较运算符\n"], "ans": ["符号有：\n", "等于，年龄等于18  ｛age:18｝\n", "小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}\n", "大于，$gt,  greater than\n", "小于等于，$lte  less than equal\n", "大于等于，$gte\n", "不等于， $ne   \n", "例子：\n", "db.colc.find({age:{$gt:19}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "rw84943252", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["视图给模板传递参数\n"], "ans": ["render(request, 模板名, 字典)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ra19809687", "exam_id": "peg028", "stu_id": "sm59"}, {"ask": ["往键s1里添加成员zs ls ww\n"], "ans": ["127.0.0.1:6379> sadd s1 zs ls ww\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "ob71479662", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["表格的基本格式\n"], "ans": ["<table>\n", "    <thead>\n", "    <tr><th>序号</th><th>姓名</th></tr>\n", "    </thead>\n", "    <tbody>\n", "    <tr><td>1</td><td>张三</td></tr>\n", "    </tbody>\n", "</table>\n", "说明：table的属性\n", "border属性 定义表格的边框，设置值是数值\n", "cellpadding属性 定义单元格内容与边框的距离，设置值是数值\n", "cellspacing属性 定义单元格与单元格之间的距离，设置值是数值\n", "align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right\n", "说明：tr代表一行，td和th代表单元格\n", "<tr>标签：定义表格中的一行\n", "<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，\n", "<thead>标签，代表表头\n", "<tbody>标签，代表了表格的主体\n", "注意：单元格的属性\n", "align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\n", "valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\n", "colspan 设置单元格水平合并，设置值是数值\n", "rowspan 设置单元格垂直合并，设置值是数值\n"], "tips": [], "1": "06-前端", "2": "html", "3": "05-表格.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\05-表格.txt", "test_id": "jw88773593", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["获取classname对应的值\n"], "ans": ["127.0.0.1:6379> get classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "ft08908966", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查看name键对应值的数据类型\n"], "ans": ["127.0.0.1:6379> type name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "kf43807626", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["获取当前代码中所有的线程对象，得到一个列表\n"], "ans": ["threading.enumerate()\n"], "tips": ["[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的\n"], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "wf35681234", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["删除s1键中的数据zs\n"], "ans": ["127.0.0.1:6379> srem s1 zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "07-set数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\07-set数据类型.txt", "test_id": "qv01197288", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["范围查询\n"], "ans": ["关键词：\n", "in(值1，值n)\t\t\t不连续范围内\n", "between...and...\t连续范围内\n", "例子：\n", "查询id值为1,3,6的学生\n", "select * from student where id in (1,3,6);\n", "查询id值在2到8之间的学生\n", "select * from student where id between 2 and 8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "og86721283", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["获取多个键对应的值\n", "获取name,age,gender键对应的值\n"], "ans": ["127.0.0.1:6379> mget name age gender\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "04-string数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\04-string数据类型.txt", "test_id": "gt16512591", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["获取一个哈希数据某个字段的值\n"], "ans": ["格式：\n", "hget 键 字段\n", "例子：获取zs键对应的哈希数据中height字段的值\n", "hget zs height\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "eb26842693", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["插入数据-缺省插入\n", "只插入部分字段的值\n"], "ans": ["格式：\n", "insert into 表名（字段1，字段n） values(值1，值n);\n", "例子：\n", "insert into student (name) values('ggyy');\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "04-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\04-数据行的操作.txt", "test_id": "jp47277332", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["pycharm创建django项目\n"], "ans": ["一，New project>django\n", "二，设置路径，虚拟环境，等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ev40979788", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["如何解决破解图片验证码\n"], "ans": ["使用打码平台\n", "执行给定的代码，打码平台会识别指定路径的图片验证码\n", "并且返回识别后的结果\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "03-经验小结.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\03-经验小结.txt", "test_id": "ay12905006", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["获取所有的键\n"], "ans": ["连接对象.keys()\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-python连redis.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-python连redis.txt", "test_id": "bf55286631", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["删除数据\n"], "ans": ["格式：\n", "》删除多个\n", "db.集合名称.remove(条件)\n", "》删除一个\n", "db.集合名称.remove(条件,{justOne:true})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "02-数据行的操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\02-数据行的操作.txt", "test_id": "aj45353563", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["使用数据库\n"], "ans": ["格式：\n", "use 数据库名称\n", "例子：\n", "use one\n", "> use one\n", "switched to db one\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "ky08021313", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["reverse函数反转-带关键词参数的反转\n", "路由的路径匹配中有关键词捕获时（命名分组的正则表达式）\n"], "ans": ["格式：\n", "reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)\n", "例子：\n", "detail_url= reverse(\"detail\", kwargs={\"article_id\":16})\n", "效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024视图.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024视图.txt", "test_id": "ve47599641", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["本地仓库与远程仓库产生一个关联\n"], "ans": ["格式：\n", "git remote add origin 路径ssh的\n", "例子：\n", "git remote add origin git@github.com:ifubing/py1021.git\n"], "tips": [], "1": "04-版本控制", "2": "02-github", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\04-版本控制\\02-github\\01-操作.txt", "test_id": "gv08265075", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["标题标签的使用\n"], "ans": ["默认效果：\n", "加粗\n", "额外效果：\n", "爬虫识别页面时，知道这个是重点\n", "例子：\n", "<h1>这是一级标题</h1>\n", "<h2>这是二级标题</h2>\n", "<h3>这是三级标题</h3>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yg65029556", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["开始行与结束行的判断\n"], "ans": ["》判断是否是开始行\n", "forloop.first\n", "》判断是否是结束行\n", "forloop.last\n", "》例子\n", "{% for book in books %}\n", "{% if forloop.first %}\n", "代码一\n", "{% elif forloop.last %}\n", "代码二\n", "｛% endif %}\n", "{% endfor %}\n", "》说明\n", "一般会与if判断一起使用\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "pr47142553", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["url转换器\n", "path方法捕捉路径上的参数\n", "限定参数的类型\n"], "ans": ["例子：\n", "path('book/publisher/<int:publisher_id>/', 视图）\n", "本写法限定了路径中publisher_id位置的类型，为int类型\n", "默认的转换器是str\n", "小结：\n", "url转换器限定的是什么类型，视图函数得到的参数就是什么类型\n", "常用的类型有int, str\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "sc60096405", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["添加多个哈希字段值对\n", "设置ls键为哈希，存多个字段值对\n", "字段height 177\n", "字段weight 66\n"], "ans": ["格式：\n", "hmset 键 字段1 值1 字段n 值n\n", "例子：\n", "hmset ls height 177 weight 66\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "xs78229438", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查看所有的键\n"], "ans": ["127.0.0.1:6379> keys *\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "go15069228", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查询结果消除重复\n"], "ans": ["格式：\n", "select distinct 字段 from 表名;\n", "例子：\n", "select distinct gender from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "dl34975893", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查看name键是否存在\n"], "ans": ["127.0.0.1:6379> exists name\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "xf70357654", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["多行文本输入框\n"], "ans": ["例子：\n", "    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">内容区</textarea>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "om72163918", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["从lis键中查找数据c\n", "找到后删除全部\n"], "ans": ["127.0.0.1:6379> lrem lis 0 c\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "go37372319", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["设置键name的过期时间为6秒\n"], "ans": ["127.0.0.1:6379> expire name 6\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "ii79456247", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查指定的字段，并且控制表头名称\n"], "ans": ["格式：\n", "select 字段1 as 表头1，字段n as 表头n from 表名；\n", "例子：\n", "select name as 姓名, age as 年龄 from student;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "05-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\05-查询.txt", "test_id": "du49684423", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["默认的端口号\n"], "ans": ["6379\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "um82641120", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["远程连接数据库\n"], "ans": ["格式：\n", "mysql -h ip地址 -p 端口号 -u用户名 -p\n", "输入密码\n", "例如：IP为192.168.206.1，端口为3306，用户名为root，密码为root\n", "mysql -h 192.168.206.1 -p 3306 -uroot -p\n", "请输入密码：root\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "01-相关操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\01-相关操作.txt", "test_id": "wj72016205", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["切换数据库\n"], "ans": ["格式：\n", "use 数据库名;\n", "例子：\n", "use test;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "ed67717405", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["往z1键中添加内容，权重与值分别为\n", "5 five \n", "3 three \n", "2 two \n", "11 eleven\n"], "ans": ["127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "di70188641", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["安装虚拟环境\n"], "ans": ["pip install virtualenv \n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "ar16882683", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["获取标签内容为：下一页> 的a标签，取它的href值\n"], "ans": ["//a[text()=\"下一页>\"]/@href\n"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "01-xpath解析.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\01-xpath解析.txt", "test_id": "ze83592159", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["web服务器，应用服务器，web应用框架\n"], "ans": ["web服务器，处理http请求，例如nginx\n", "应用服务器，处理逻辑的服务器\n", "应用框架，封装好的编程语言\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ck44318740", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["获取所有字段对应的值\n"], "ans": ["格式：\n", "hvals 键\n", "例子：获取zs的所有值\n", "hvals zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "bx35147768", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["创建数据库\n"], "ans": ["格式：\n", "create database 数据库名 charset=utf8;\n", "例子：\n", "create database pyhui charset=utf8;\n"], "tips": [], "1": "01-数据库", "2": "mysql", "3": "02-数据库操作.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mysql\\02-数据库操作.txt", "test_id": "yr69476235", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["取键名lis的数据\n", "取0号到2号索引的值\n"], "ans": ["127.0.0.1:6379> lrange lis 0 2\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "un88289683", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["删除z1键中权值在4到10范围的数据\n"], "ans": ["127.0.0.1:6379> zremrangebyscore z1 4 10\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "08-zset数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\08-zset数据类型.txt", "test_id": "kw15047054", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["从右侧插入数据\n", "往lis键右侧插入数据 \n", "a4  \n", "a5\n"], "ans": ["127.0.0.1:6379> rpush lis a4 a5\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "wp10995007", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["一行代码实现1--100之和\n"], "ans": ["s=sum(range(101))\n", "print(s)  \n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "wn93696801", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["如何选择数据库\n"], "ans": ["select n\n"], "tips": ["n的取值范围是0-15\n", "select 5\n", "代表选取了索引值为5的redis数据库"], "1": "01-数据库", "2": "redis", "3": "01-安装与配置.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\01-安装与配置.txt", "test_id": "nf62084168", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["删除多个键值对\n", "删除stuname和classname两组键值对\n"], "ans": ["127.0.0.1:6379> del stuname classname\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "vy53463087", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["下拉框\n"], "ans": ["例子\n", "    <select name=\"place\" id=\"\">\n", "        <option value=\"1\">武汉</option>\n", "        <option value=\"2\">长沙</option>\n", "    </select>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "yn49298954", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查看当前数据库中的全部集合（全部数据表）\n"], "ans": ["例子：\n", "> show collections\n", "spider\n", "stu\n", "tbtwo\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "01-增删改查.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\01-增删改查.txt", "test_id": "lv42712217", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["查看以na开头的键\n"], "ans": ["127.0.0.1:6379> keys na*\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "05-键命令.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\05-键命令.txt", "test_id": "oe08322995", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["if标签基本用法\n", "if...else...二路分支的格式\n"], "ans": ["格式：\n", "{% if 条件 %}\n", "成立时显示\n", "{% else %}\n", "不成立时显示\n", "{% endif %}\n", "关于条件：\n", "可以是比较大小，判断等于，成员运算，等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ej91984115", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["DEBUG模式的功能\n", "位于settings.py中的DEBUG的功能\n"], "ans": ["1，开启后修改django代码并保存后，服务器会重启\n", "2，如果项目中出现了错误，会在浏览器与控制台打印错误\n", "3，上线以后需要设置把DEBUG=False\n", "4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "1920211530综合.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\1920211530综合.txt", "test_id": "ga77144567", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["删除整个哈希数据\n"], "ans": ["格式：\n", "del 键\n", "例子：删掉键为zs的哈希数据\n", "del zs\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "09-hash数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\09-hash数据类型.txt", "test_id": "ry62802032", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["往线程队列中存入数据\n"], "ans": ["代码：\n", "队列.put(数据)\n", "说明：\n", "如果队列满了，会阻塞\n", "补充：\n", "队列.put(数据，block=False)\n", "队列如果满了，就会报一个错误\n"], "tips": [], "1": "02-爬虫", "2": "requests爬虫", "3": "04-多线程爬虫.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\requests爬虫\\04-多线程爬虫.txt", "test_id": "sg30164931", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["xpath的使用套招\n"], "ans": ["一，实例化生成一个element对象\n", "from lxml import etree\n", "obj = etree.HTML(字符串html内容)\n", "二，对象.xpath（xpath表达式)\n", "res = obj.xpath(表达式)\n", "# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法"], "tips": [], "1": "02-爬虫", "2": "解析库", "3": "02-python操作xpath.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\解析库\\02-python操作xpath.txt", "test_id": "kw98425846", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["谈下python的GIL\n"], "ans": ["GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。\n", "如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。\n", "多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大\n"], "tips": [], "1": "08-面试刷题", "2": "一只小妖", "3": "10221614-面试题上.txt", "file_path": "D:\\易三就业版\\source\\08-面试刷题\\一只小妖\\10221614-面试题上.txt", "test_id": "cz09514929", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["gzip压缩\n"], "ans": ["gzip 文件1 文件n\n"], "tips": ["原文件会消失，会有新的压缩文件出来，以.gz结尾\n", "单个文件压缩，并不会合并为一个压缩包\n", "不可压缩目录\n"], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "vg30463765", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["lis键中查找a\n", "找到后从左向右删掉2个\n"], "ans": ["127.0.0.1:6379> lrem lis 2 a\n"], "tips": [], "1": "01-数据库", "2": "redis", "3": "06-list数据类型.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\redis\\06-list数据类型.txt", "test_id": "my94115815", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["投影\n"], "ans": ["功能：显示期望的字段\n", "用法：\n", "find(条件字典，投影字典)\n", "投影字典的说明：\n", "希望显示的字段，设置为1\n", "如果不希望显示_id，设置它为0\n", "例子：\n", "查询结果中，只显示classname字段的值\n", "db.getCollection('colc').find({},{classname:1})\n", "db.colc.find({},{classname:1})\n", "例子：\n", "查询结果中，只显示classname字段的值，不显示_id的内容\n", "db.getCollection('colc').find({},{classname:1, _id:0})\n", "例子：\n", "查找年龄在79，16岁的数据，只显示name，age\n", "db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "pu84484458", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["gzip解压缩\n"], "ans": ["gunzip 被压缩的文件\n"], "tips": [], "1": "05-linux", "2": "01-压缩与解压缩.txt", "3": "01-操作.txt", "file_path": "D:\\易三就业版\\source\\05-linux\\01-压缩与解压缩.txt", "test_id": "oa81206630", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["排序\n"], "ans": ["例子：按照年龄进行升序\n", "> db.one.aggregate({$sort:{age:1}})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", ">\n", "例子：按照主键降序显示\n", "> db.one.aggregate({$sort:{_id:-1}})\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "du14407885", "exam_id": "jxi749", "stu_id": "tg60"}, {"ask": ["自定义过滤器\n"], "ans": ["一，任意app下创建一个包\n", "名称必需为\n", "templatetags\n", "二，在包下新建一个py文件，名字随便，开始写功能\n", "例子如下：\n", "#1 固定写法 导入模块\n", "from django import template\n", "#2 固定写法 实例化对象\n", "register = template.Library()\n", "#3 写过滤器同时注册该过滤器\n", "@register.filter\n", "def addString(value):\n", "    return value+\"good\"\n", "三，确保app已注册\n", "四，模板中使用。1，先导入。2，再使用。\n", "{% load my_filter %}\n", "{{ \"张三\"|addString}}"], "tips": [], "1": "03-django", "2": "02-模板", "3": "01-过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\02-模板\\01-过滤器.txt", "test_id": "xo14629607", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["删除虚拟环境\n"], "ans": ["rmvirtualenv 环境名称\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "10211518虚拟环境.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\10211518虚拟环境.txt", "test_id": "qc96096276", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["内间距与外间距\n"], "ans": ["》\n", "内间距 padding\n", "外间距 margin\n", "》具体的设置，以内间距为例（外间距同理，换个单词就可以）\n", "padding-top：20px;     /* 设置顶部内间距20px */ \n", "padding-left:30px;     /* 设置左边内间距30px */ \n", "padding-right:40px;    /* 设置右边内间距40px */ \n", "padding-bottom:50px;   /* 设置底部内间距50px */\n", "》连写设置\n", "有多种写法，详情如下：\n", "padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \n", "padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \n", "padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \n", "padding：20px; /* 设置四边内边距为20px */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "ng63656450", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["边框\n"], "ans": ["》可以具体的设置：\n", "border-top-color:red;    /* 设置顶部边框颜色为红色 */  \n", "border-top-width:10px;   /* 设置顶部边框粗细为10px */   \n", "border-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  dashed(虚线)  dotted(点线); */\n", "》连写\n", "设置上边框\n", "border-top:10px solid red;\n", "设置上下左右边框\n", "border:10px solid red;\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "mi03988316", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["first与last过滤器\n"], "ans": ["用法：\n", "{{ 数据|first }}\n", "{{ 数据|last }}\n", "效果：\n", "first用于拿到数据中第一个成员\n", "last用于拿到数据中最后一个成员\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qk19871694", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["02-文本样式.txt"], "ans": [], "tips": [], "1": "06-前端", "2": "css", "3": "02-文本样式.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\02-文本样式.txt", "test_id": "zb56901763", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["层级选择器\n"], "ans": ["主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突。\n", ".box span{color:red}\n", ".box .red{color:pink}\n", ".red{color:red}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ji08094047", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["有序列表标签\n"], "ans": ["例子：\n", "<ol>\n", "    <li>列表文字一</li>\n", "    <li>列表文字二</li>\n", "    <li>列表文字三</li>\n", "</ol>\n", "说明：\n", "在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。\n"], "tips": [], "1": "06-前端", "2": "html", "3": "03-列表.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\03-列表.txt", "test_id": "ke97521951", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["注释\n"], "ans": ["/*\n", "    css注释 ctrl+shift+\"/\"\n", "*/\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "ty67701318", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["查找\n"], "ans": ["查找一条数据：\n", "res = 集合对象.find_one({\"name\":\"qq\"})\n", "查找多条数据：\n", "res = 集合对象.find({\"gender\":True})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "tf80593061", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["伪类及伪元素选择器\n"], "ans": ["常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。\n", ".box1:hover{color:red}\n", ".box2:before{content:'行首文字';}\n", ".box3:after{content:'行尾文字';}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "pc55105757", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["从xpath的结果对象中提取内容\n"], "ans": ["格式\n", "对象.get()\n", "或者\n", "对象.extract_first()\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "op27026993", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["宽和高\n"], "ans": ["width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ \n", "height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */\n"], "tips": [], "1": "06-前端", "2": "css", "3": "05-盒子模型.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\05-盒子模型.txt", "test_id": "xn75861585", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["css颜色值主要有三种表示方法\n"], "ans": ["1、颜色名表示，比如：red 红色，gold 金色\n", "2、rgb表示，比如：rgb(255,0,0)表示红色\n", "3、16进制数值表示，比如：#ff0000 表示红色，这种可以简写成 #f00\n"], "tips": [], "1": "06-前端", "2": "css", "3": "03-颜色表示.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\03-颜色表示.txt", "test_id": "ol61933901", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["三种使用方式\n"], "ans": ["1、外联式：通过link标签，链接到外部样式表到页面中。\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n", "2、嵌入式：通过style标签，在网页上创建嵌入的样式表。\n", "<style type=\"text/css\">\n", "    div{ width:100px; height:100px; color:red }\n", "    ......\n", "</style>\n", "3、内联式：通过标签的style属性，在标签上直接写样式。\n", "<div style=\"width:100px; height:100px; color:red \">......</div>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "nm00509152", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["truncatechars过滤器\n"], "ans": ["用法：\n", "{{ value| truncatechars:n }}\n", "效果：\n", "保留n位字符的显示\n", "其中最后一位的显示是...\n", "单词：\n", "truncate，截短缩短\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "lz80161827", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["striptags过滤器\n"], "ans": ["例子：\n", "{{ value|striptags}}\n", "效果：\n", "会删掉value中的html标签\n", "让内容变为纯文本\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "pv42793746", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["组选择器\n"], "ans": ["多个选择器，如果有同样的样式设置，可以使用组选择器。\n", ".box1,.box2,.box3{width:100px;height:100px}\n", ".box1{background:red}\n", ".box2{background:pink}\n", ".box2{background:gold}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kk65911301", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["模板反向解析-带关键词参数的情况\n"], "ans": ["格式：\n", "{% url '别名' 参数名1=值1 参数名n=值n %}\n", "例子：\n", "{% url 'detail' book_id=1 %}\n", "说明：\n", "path('book/detail/<book_id>/', views.book_detail, name='detail')\n", "别名detail对应的路径需要一个参数\n", "所以在反向解析时要传递过去\n", "模板中反解 {% url 'detail' book_id=1 %}\n", "会得到这样的结果  'book/detail/1/'\n", "视图中反解 reverse(\"detail\", kwargs = {\"book_id\":1})\n", "会得到这样的结果  'book/detail/1/'\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "jq64205828", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["ID选择器\n"], "ans": ["通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器。\n", "#box{color:red} \n", "<div id=\"box\">....</div>   <!-- 对应以上一条样式，其它元素不允许应用此样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "gi56663078", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["发起下一页的请求\n"], "ans": ["思路：\n", "1，拿到下一页的完整路径\n", "2，yield scrapy.Request(下一页的路径, callback=解析方法)\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "sw52239014", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["类选择器\n"], "ans": ["通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是css中应用最多的一种选择器。\n", ".red{color:red}\n", ".big{font-size:20px}\n", ".mt10{margin-top:10px} \n", "<div class=\"red\">....</div>\n", "<h1 class=\"red big mt10\">....</h1>\n", "<p class=\"red mt10\">....</p>\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "kr60839573", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["修改\n"], "ans": ["》修改一条\n", "集合对象.update_one({条件字典})\n", "》修改多条\n", "集合对象.update_many({条件字典})\n", "例子：\n", "res = 集合对象.update_many({\"gender\":True},{\"$set\":{\"skill\":\"无言\"}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "ia84963472", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["段落标签\n"], "ans": ["标签：\n", "<p>内容</p>\n", "例子：\n", "    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方\n", "    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网\n", "    页可以从一个网页链接跳转到另外一个网页。</p>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "er73115113", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["slice过滤器\n"], "ans": ["效果：\n", "切片的效果\n", "格式：\n", "{{ 变量|slice:\"起始索引：终止索引：步长\" }}\n", "例子：\n", "{{ 变量|slice:\"2:6\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "jm29872588", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["标签选择器\n"], "ans": ["标签选择器，此种选择器影响范围大，建议尽量应用在层级选择器中。\n", "例子：\n", "*{margin:0;padding:0}\n", "div{color:red}   \n", "<div>....</div>   <!-- 对应以上两条样式 -->\n", "<div class=\"box\">....</div>   <!-- 对应以上两条样式 -->\n"], "tips": [], "1": "06-前端", "2": "css", "3": "04-选择器.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\04-选择器.txt", "test_id": "ei60226529", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["定义样式的语法格式\n"], "ans": ["格式：\n", "选择器 { 属性:值; 属性:值; 属性:值;}\n", "例子：\n", "div{ \n", "    width:100px; \n", "    height:100px; \n", "    color:red \n", "}\n"], "tips": [], "1": "06-前端", "2": "css", "3": "01-基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\css\\01-基本.txt", "test_id": "rt00162858", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["样式标签\n"], "ans": ["样式代码写在这里\n", "<style>\n", "样式代码写这里\n", "</style>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "fb90555749", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["创建一个普通索引\n"], "ans": ["例子：\n", "> db.stu.ensureIndex({name:1})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ya85867064", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["meta标签\n"], "ans": ["定义网页基本信息的标签\n", "例如\n", "    <meta charset=\"UTF-8\">\n", "    <meta name=\"viewport\"\n", "          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n", "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n", "    <meta name=\"keywords\" content=\"python 人工智能\">\n", "    <meta name=\"description\" content=\"网站描述\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "gi84634566", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["常用的数据取别名\n"], "ans": ["格式一：\n", "{% with 别名=数据 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "格式二：\n", "{% with 数据 as 别名 %}\n", "{{ 别名 }}\n", "{% endwith %}\n", "例子：\n", "{% with zs = persons.0 %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sl26795462", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["创建一个联合唯一索引\n"], "ans": ["格式：\n", "db.集合名.ensureIndex({字段1：1， 字段2：1})\n", "例子：按照姓名与图片名称建立联合唯一索引\n", "db.stu.ensureIndex({name:1, bname:1})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ad65911117", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": [" \n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "sg78455428", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["    "], "ans": [], "tips": [], "1": "06-前端", "2": "html", "3": "04-表单.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\04-表单.txt", "test_id": "xo41225528", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["注释\n"], "ans": ["<!-- 注释内容写在这里 -->\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "bd84381118", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["{% with persons.0 as zs %}\n", "<p> {{ zs }} </p>\n", "{% endwith %}\n"], "ans": [], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "xn19959147", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["逻辑运算符\n"], "ans": ["与，｛键1：值1， 键2：值2｝ \n", "或， ｛$or：[{},{}]｝\n", "例子：\n", "找年龄为19岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:19},{classname:\"java\"}]})\n", "找年龄大于16岁或者班级为java班的数据\n", "db.colc.find({$or:[{age:{$gt:16}},{classname:\"java\"}]})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ny44452985", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["水平线标签\n"], "ans": ["<hr>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "wz33486748", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["删除标签\n"], "ans": ["<s>删除线</s>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "ep92286956", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["下划线标签\n"], "ans": ["<u>下划线</u>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dt39597884", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["加粗标签\n"], "ans": ["<b>加粗</b>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "dj46751083", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["图象标签\n"], "ans": ["例子\n", "<img src=\"images/pic.jpg\" alt=\"产品图片\" title=\"鸣人\"/>\n", "说明：\n", "<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：\n", "src属性 定义图片的引用地址\n", "alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。\n", "title属性，鼠标移动到图片上时显示的文字\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "vm68826489", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["字符实体\n"], "ans": ["空格， &nbsp;\n", "<， &lt;\n", ">， &gt;\n"], "tips": [], "1": "06-前端", "2": "html", "3": "02-基本标签.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\02-基本标签.txt", "test_id": "yh68985021", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["特效标签脚本标签\n", "放javascript代码的标签\n"], "ans": ["两个效果\n", "1，加载其它js文件\n", "<script src=\"js路径\"></script>\n", "2，直接在里面写代码\n", "<script>样式</script>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "yo70762429", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["载入其它样式文件\n"], "ans": ["<link rel=\"stylesheet\" href=\"m.css\">\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "qk12050966", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["html的基本结构\n"], "ans": ["<!DOCTYPE html>\n", "<html lang=\"en\">\n", "    <head>            \n", "        <meta charset=\"UTF-8\">\n", "        <title>网页标题</title>\n", "    </head>\n", "    <body>\n", "          网页显示内容\n", "    </body>\n", "</html>\n"], "tips": [], "1": "06-前端", "2": "html", "3": "01-html基本.txt", "file_path": "D:\\易三就业版\\source\\06-前端\\html\\01-html基本.txt", "test_id": "uj59900212", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["safe过滤器\n"], "ans": ["例子：\n", "{{ value|safe }}\n", "效果：\n", "value的代码会被浏览器解析\n", "如果是html代码会生成标签\n", "如果是js代码会执行\n", "对于用户提交的数据不要用saft过滤器\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xm71688900", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["random过滤器\n"], "ans": ["例子：\n", "{{ value|random }}\n", "效果：\n", "从value中随机出一个来\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fi50527724", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["lower与upper过滤器\n"], "ans": ["例子：\n", "{{ value|lower }}\n", "效果：\n", "把数据全部变为小写\n", "例子：\n", "{{ value|upper}}\n", "效果：\n", "把数据全部转变为大写\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "qh22880679", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["length过滤器\n"], "ans": ["例子：\n", "{{ value|length }}\n", "效果\n", "获取数据的长度\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mf17221214", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["join过滤器\n"], "ans": ["例子：\n", "{{ value|join:\"/\" }}\n", "效果：\n", "value容器的成员以：右边的符号进行连接\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "xc46420574", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["floatformat过滤器\n"], "ans": ["用法：2种情况\n", "{{ 数据|floatformat }}\n", "{{ 数据|floatformat:n }}\n", "例子：\n", "{{ \"123.456\"|floatformat }}\n", "结果为 123.5\n", "{{ \"123.00\"|floatformat }}\n", "结果为 123\n", "{{ \"123.4567\"|floatformat:2 }}\n", "结果为123.46\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "eo32441511", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["default_if_none过滤器\n"], "ans": ["用法：\n", "{{ 数据|default_if_none:默认值}}\n", "例子：\n", "{{ value|default_if_none:\"我是默认值\" }}\n", "效果：\n", "当数据仅仅为none的时候，才会显示默认值\n", "如果数据为空列表时，显示 []\n", "数据为空字典时，显示 {}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fz92322891", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["default过滤器\n"], "ans": ["用法：\n", "{{ 数据|default:默认值}}\n", "例子：\n", "{{ value|default:\"无数据\" }}\n", "效果：\n", "如果数据为空时，显示：右边的内容\n", "空列表空字符串空字典等等\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "ff57251784", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["date过滤器\n"], "ans": ["用法：\n", "{{ 数据|date：格式 }}\n", "例子：\n", "{{ today|date:\"Y/m/d\" }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "fu50972977", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["add过滤器\n"], "ans": ["例子一，两个数字会相加：\n", "{{ \"1\"|add:\"2\"}}\n", "得到结果3\n", "例子二，不能相加的字符串就拼接\n", "{{ \"1\"|add:\"2sss\" }}\n", "得到结果  12sss\n", "例子三，两个列表相加就是合并\n", "{{ list1 | add : list2 }}\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "mo43325514", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["模板过滤器的使用格式\n"], "ans": ["格式：\n", "{{ 模块变量 | 过滤器:参数 }}\n", "说明：\n", "关于参数\n", "有的过滤器是不带参数的\n", "如果有参数，最多只会接收一个参数\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "zj29210170", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["cut过滤器\n"], "ans": ["用法：\n", "{{ 数据|cut:目标字符串 }}\n", "效果：\n", "把目标字符串从数据中去掉\n", "例如：\n", "{{ 'hello python'|cut:' '}}\n", "效果\n", "hellopython\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191029模板过滤器.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191029模板过滤器.txt", "test_id": "we35077858", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["模板中的html字符串，让它渲染生效\n"], "ans": ["格式：\n", "｛% autoescape off %}\n", "\t{{ html模板变量 }}\n", "｛% endautoescape %｝\n", "效果：\n", "被autoescape包裹的模板变量如果是html代码，会被渲染生效\n", "默认情况django为了保护安全，不会让html或js代码渲染生效\n", "单词：\n", "auto，自动\n", "escape，释放\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ya37489099", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["去除html标签中的空白字符\n"], "ans": ["格式：\n", "{% spaceless %}\n", "html代码\n", "{% endspaceless %}\n", "效果：\n", "会把html代码中的空白，换行等符号去掉，最后形成一行\n", "单词解释：\n", "space，空格\n", "less，减少\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "og66759184", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["让我们的模板语句不生效\n"], "ans": ["用法：\n", "{% verbatim %}\n", "{{ 变量 }}\n", "{% endverbatim %}\n", "效果：\n", "被verbatim包裹的模板语句不会被解释\n", "是什么还是什么\n", "翻译：\n", "verbatim\n", "英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  \n", "adj./adv.\n", "一字不差的(地);逐字的(地)\n"], "tips": [], "1": "03-django", "2": "04-dj2vdo", "3": "191024模板.txt", "file_path": "D:\\易三就业版\\source\\03-django\\04-dj2vdo\\191024模板.txt", "test_id": "ol03439421", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["创建爬虫\n"], "ans": ["格式：\n", "scrapy genspider 爬虫名称 允许访问的域名\n", "例子：\n", "scrapy genspider qidian www.qidian.com\n", "注意：\n", "要先cd到项目目录中\n", "然后再创建爬虫\n", "效果：\n", "在spiders目录中新增了一个爬虫名.py\n"], "tips": [], "1": "02-爬虫", "2": "scrapy爬虫", "3": "01-入门.txt", "file_path": "D:\\易三就业版\\source\\02-爬虫\\scrapy爬虫\\01-入门.txt", "test_id": "ku35768707", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["删除\n"], "ans": ["功能：\n", "可以删除一个，或者删除多个\n", "格式：\n", "集合对象.delete_one（条件字典）\n", "集合对象.delete_many(条件字典)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "06-mongodb与python的交互.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\06-mongodb与python的交互.txt", "test_id": "bz98106037", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["创建一个唯一索引\n"], "ans": ["例子\n", "> db.stu.ensureIndex({name:1},{unique:true})\n", "{\n", "        \"createdCollectionAutomatically\" : false,\n", "        \"numIndexesBefore\" : 1,\n", "        \"numIndexesAfter\" : 2,\n", "        \"ok\" : 1\n", "}\n", "应用：\n", "可以通过创建一个唯一索引的方式\n", "来约束字段，不允许重复\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "iw88538916", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["取消一个索引\n"], "ans": ["格式：\n", "db.集合名.dropIndex(索引名称)\n", "例子：\n", "> db.stu.dropIndex(\"name_1\")\n", "{ \"nIndexesWas\" : 2, \"ok\" : 1 }\n", "注意：\n", "删除索引的时候要先查一下索引对应的名称\n", "要用‘索引名称’来进行删除\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "pf28653530", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["查看当前集合的索引\n"], "ans": ["格式：\n", "db.集合名.getIndexes()\n", "例子：\n", "> db.stu.getIndexes()\n", "[\n", "        {\n", "                \"v\" : 2,\n", "                \"key\" : {\n", "                        \"_id\" : 1\n", "                },\n", "                \"name\" : \"_id_\",\n", "                \"ns\" : \"dbtwo.stu\"\n", "        }\n", "]\n", ">\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "di51317084", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["查找语句执行状态的查看\n"], "ans": ["db.stu.find({name:'tt'}).explain(\"executionStats\")\n", "关注\n", "executionTimeMillis\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "05-索引.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\05-索引.txt", "test_id": "ez21938492", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["去重\n"], "ans": ["格式：\n", "db.集合名.distinct(去重的字段)\n", "例子：\n", "查询所有的班级名称\n", "db.colc.distinct(\"classname\")\n", "找出年龄大于17岁的，班级名称\n", "db.colc.distinct(\"classname\", {age:{$gt:17}})\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ax50584318", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["分页\n"], "ans": ["$limit：隠定显示条目数\n", "$skip：跳过条目数\n", "例子：限定只显示两条数据\n", "> db.one.aggregate({$limit:2})\n", "{ \"_id\" : ObjectId(\"5db7896dde8bde057a298e48\"), \"name\" : \"张三\", \"age\" : 18, \"gender\" : 1, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "例子：跳过一条数据\n", "> db.one.aggregate({$skip:1})\n", "{ \"_id\" : ObjectId(\"5db789aede8bde057a298e49\"), \"name\" : \"李四\", \"age\" : 38, \"gender\" : 0, \"class\" : \"python\" }\n", "{ \"_id\" : ObjectId(\"5db789c1de8bde057a298e4a\"), \"name\" : \"赵强\", \"age\" : 86, \"gender\" : 1, \"class\" : \"php\" }\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "04-聚合.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\04-聚合.txt", "test_id": "cn32346515", "exam_id": "yhm069", "stu_id": "pm12"}, {"ask": ["查询，只拿一个\n"], "ans": ["格式：\n", "db.集合名称.findOne(条件)\n"], "tips": [], "1": "01-数据库", "2": "mongodb", "3": "03-查询.txt", "file_path": "D:\\易三就业版\\source\\01-数据库\\mongodb\\03-查询.txt", "test_id": "ot61766208", "exam_id": "yhm069", "stu_id": "pm12"}]