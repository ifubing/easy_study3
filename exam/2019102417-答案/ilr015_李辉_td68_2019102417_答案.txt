2
第[1]题_03-django__04-dj2vdo
191024模板.txt
...
开始行与结束行的判断
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》判断是否是开始行
forloop.first
》判断是否是结束行
forloop.last
》例子
{% for book in books %}
{% if forloop.first %}
代码一
{% elif forloop.last %}
代码二
｛% endif %}
{% endfor %}
》说明
一般会与if判断一起使用


3
第[2]题_03-django__04-dj2vdo
191024模板.txt
...
遍历容器无数据时的显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% for 临时变量 in 容器 %}
 	临时变量
｛% empty %}
无数据
｛% endfor %｝


3
第[3]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
谈下python的GIL
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。
如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。
多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大


4
第[4]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
10、python内建数据类型有哪些
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict


2
第[5]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
获取当前线程的对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
threading.current_thread()


3
第[6]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
队列中的等待
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
队列.join()
可以让任务没有完成的队列，阻塞


3
第[7]题_03-django__04-dj2vdo
191022路由url.txt
...
re_path的使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》格式：
re_path(正则式，视图）
注意：使用前确保re_path导入了
》导入，re_path的导入与path的导入在同一个位置
from django.urls import re_path
》使用
例如：匹配 127.0.0.1/
re_path(r"^$", views.article)
例如：匹配路径中的年份  127.0.0.1/list/2019
repath(r"^list/(?P<year>\d{4}/"), views.article_list)
例如：匹配路径中的月份   
re_path(r"list/(?P<month>\d{2}/"), views.article_list)


3
第[8]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转-带关键词参数的反转
路由的路径匹配中有关键词捕获时（命名分组的正则表达式）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)
例子：
detail_url= reverse("detail", kwargs={"article_id":16})
效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置


4
第[9]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
python实现列表去重的方法（先通过集合去重，在转列表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
li=[1,2,2,3,3]
a=set(li)
print (list(a))　


4
第[10]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
fun(*args,**kwargs)中的*args,**kwargs什么意思？
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
*args和**kwargs主要用于函数定义。你可以将不定数量的参数传递给一个函数。这里的不定的意思是:预先并不知道,函数使用者会传递多少个参数给你所以在这个场景下使用这两个关键字。
*args是 用来发送一个非键值对的可变数量的参 数列表给一个函数
**kwargs允许你将不定长度的键值对，作为参数传递给一个函数。


3
第[11]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]
并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
def square(x):
　　return x**2
res=map(square,[1,2,3,4,5])
res=[i for i in res if i>10]
print(res)


4
第[12]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转路径-不带参数的反转
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》使用前记得确保导入了
from django.shortcuts import reverse
》格式
reverse(“命名空间：别名”）
reverse（“别名”）


4
第[13]题_03-django__04-dj2vdo
1920211530综合.txt
...
url是统一资源定位符，它的组成结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scheme：//host:port/path/?k1=v1&k2=v2#anchor
详解：
scheme，协议
host，主机名
port，端口号
path，路径
k1=v1&k2=v2，get参数


4
第[14]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
select distinct name from student


3
第[15]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历基本使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 %}
临时变量
{% endfor %}
注意：
for中无continue与break
扩展：
forloop.counter	当前循环的索引值,从1开始
forloop.counter0	当前循环的索引值,从0开始
forloop.revcounter	当前循环的倒序索引值(以1结束)
forloop.revcounter0	当前循环的倒序索引值(以0结束)
forloop.first	当前循环是不是第一次循环(返回的是一个布尔值)
forloop.last	当前循环是不是最后一次循环(返回的是一个布尔值)
forloop.parentloop	本层循环的外层循环


3
第[16]题_03-django__04-dj2vdo
191022路由url.txt
...
给一个url起一个别名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
path('login/', views.login, name='login')


3
第[17]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程锁的定义与使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
定义
import threading
生成线程锁对象
锁对象 = threading.Lock()
上锁
锁对象.acquire()
解锁
锁对象.release()


4
第[18]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
一行代码实现1--100之和
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
s=sum(range(101))
print(s)  


3
第[19]题_03-django__04-dj2vdo
191024模板.txt
...
字典遍历，同时得到键与值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{% for key, val in persion.items %}
key--val
{% endfor %}


9
没有答案
第[20]题_03-django__04-dj2vdo
191024模板.txt
...
 
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：


4
第[21]题_02-爬虫__requests爬虫
03-经验小结.txt
...
如何解决破解图片验证码
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
使用打码平台
执行给定的代码，打码平台会识别指定路径的图片验证码
并且返回识别后的结果


3
第[22]题_03-django__04-dj2vdo
191024模板.txt
...
 
for循环中的变量，显示序号-顺序显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
forloop.counter
》
例子格式：
{% for 变量 in 容器 %}
序号：{{ forloop.counter }}
变量
{% endfor %}
》
计数从0开始，使用
forloop.counter0


4
第[23]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
python中断言方法举例
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
a=2
assert(a>1)
print('断言成功，程序继续向下执行')
b=2
assert(b>3)
print('断言失败，程序报错') #AssertionError　　



第[24]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
让当前的线程全部执行完毕后
主线程再进行下一条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
线程对象.join（）
例子：
t.join()



第[25]题_03-django__04-dj2vdo
191022路由url.txt
...
总路由根据路径进行分发
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》导入include模块
from django.urls import include
》进行分发
path("book/", include("book.urls"))
》其它形态
path("book/",include([path("list", 视图)]
))



第[26]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
python2和python3的range（100）的区别
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
python2返回列表，python3返回迭代器，节约内存



第[27]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
往线程队列中存入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.put(数据)
说明：
如果队列满了，会阻塞
补充：
队列.put(数据，block=False)
队列如果满了，就会报一个错误



第[28]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
创建一个线程队列队象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
import queue
q = queue.Queue()
补充：
生成一个容量为6的队列对象
q = queue.Queue(6)



第[29]题_03-django__04-dj2vdo
191024模板.txt
...
for循环中的变量，显示序号-反向显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
forloop.revcounter
。
例子格式：
{% for 变量 in 容器 %}
序号：{{ forloop.revcounter }}
变量
{% endfor %}
》
计数以0结束
revcounter0



第[30]题_03-django__04-dj2vdo
191022路由url.txt
...
命名空间的使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
为了防止多个别名导致的冲突，在总路由定义命名空间
一，总路由定义命名空间
path(路径，include('应用名.urls', namespace='空间名'))
例如：path('cms1/', include('cms.urls', namespace='cms1'))
二，在应用的urls.py中定义一个变量
app_name = 应用名
例如：app_name=book



第[31]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
队列中计数器减一
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
队列.task_done()
补充：
一般与队列等待共同使用



第[32]题_03-django__04-dj2vdo
191024视图.txt
...
模板的渲染，
把模板文件的内容获取出来
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一：render_to_string
》导入
from django.template.loader import render_to_string
》在视图中使用
def index(request):
	html = render_to_string(模板名.html)
	return HttpResponse(html)
》说明
这个是render函数的基本，了解即可
方式二: render 
》导入
from django.shortcuts import render
》在视图中使用
def index(request):
	return render(request, 模板名.html)



第[33]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历，逆序遍历
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 reversed %}
临时变量
{% endfor %}



第[34]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程类的定义与启动
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
自定义一个类
让该类继承threading.Thread
同时在自定义类中重写run方法
就可
例子：
class Drawing(threading.Thread):
    def run(self):
        for x in range(3):
            print('正在绘制图片', x)
            time.sleep(1)
》线程类实例化为一个对象并运行：
t2 = Drawing()
t2.start()



第[35]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
避免转义给字符串加哪个字母表示原始字符串
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
r , 表示需要原始字符串，不转义特殊字符
例如：
re_path(r"book/(\d+)/", bookview)



第[36]题_03-django__04-dj2vdo
191024视图.txt
...
视图给模板传递参数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
render(request, 模板名, 字典)



第[37]题_03-django__04-dj2vdo
191024模板.txt
...
模板变量的显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
{{ 变量名 }}
说明：变量的来源，来自视图的传递



第[38]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
如何启动一个线程
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》导入线程模块
import threading
》创建线程对象
t = threading.Thread(target=函数体，args=(参数,))
》让线程对象运行起来
t.start()
明确主线程与子线程的执行与等待关系



第[39]题_03-django__04-dj2vdo
191024模板.txt
...
if标签基本用法
if...else...二路分支的格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% if 条件 %}
成立时显示
{% else %}
不成立时显示
{% endif %}
关于条件：
可以是比较大小，判断等于，成员运算，等等



第[40]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
从线程队列中取出数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.get()
说明：
队列如果是空的，会阻塞
补充：
队列.get(block=False)
队列如果空了，就会报一个错误



第[41]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
列出5个python标准库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
os datetime sys re math time random



第[42]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
4、字典如何删除键和合并两个字典
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
dic={'name':'alex','age':18,'sex':'female'}
del dic['sex']
print(dic)  
# {'name': 'alex', 'age': 18}
dic1={'sex':'female'}
dic.update(dic1)
print('更新后的dic：',dic)   
# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}



第[43]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
获取当前代码中所有的线程对象，得到一个列表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
threading.enumerate()
[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的



第[44]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
<div class="nam">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
import re
str='<div class="nam">中国</div>'
res=re.findall(r'<div class=".*">(.*?)</div>',str)
print(res)       ==》      ['中国']



第[45]题_03-django__04-dj2vdo
191024模板.txt
...
高级模板变量取值与方法的调用
模板变量为列表，字典时，如何取成员
模板变量为对象时，如何调方法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
取值规则：
通过点来取值，例如：
字典.键， 列表.索引， 对象.属性取值
调方法规则：
模板变量.方法名  
注意，方法名后不用加括号
例如：
模板变量 stu_list 是一个列表，取列表的2号位
{{ stu_list.2 }}
例如：
模板变量 user 是一个对象，取它的name属性值
{{ user.name }}



第[46]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
如何在一个函数内部修改全局变量
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
a=1
def test():
    global a   #利用global 修改全局变量
    a=2
    print(a)
    return
test()  



第[47]题_04-版本控制__01-git
01-入门.txt
...
工作区的内容恢复为修改前的内容
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git checkout -- 文件名
例子：
。让所有的内容变为修改前
$ git checkout -- .
。让a.py变为修改前
$ git checkout -- a.py
图例：
https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70



第[48]题_04-版本控制__01-git
01-入门.txt
...
缓冲区的内容清除
清除缓冲区中记录的对某一个文件的修改
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git reset HEAD 文件名
例子：
git reset HEAD a.py
显示：
$ git reset HEAD a.py
Unstaged changes after reset:
M       a.py



第[49]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
进入虚拟环境所在的目录
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
cdvirtualenv



第[50]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
列出所有虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
lsvirtualenv



第[51]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
tar解压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》解压缩gzip方式的压缩包
tar xvfz 包名称.tar.gz
》解压缩bzip2方式的压缩包
tar xvfg 包名称.tar.bz2



第[52]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
tar压缩格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》以gzip方式压缩并打包
tar cvfz 包名称.tar.gz 
》以bzip2的方式压缩并打包
tar cvfj 包名称.tar.bz2



第[53]题_04-版本控制__02-github
01-操作.txt
...
本地仓库与远程仓库产生一个关联
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git remote add origin 路径ssh的
例子：
git remote add origin git@github.com:ifubing/py1021.git



第[54]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
创建虚拟环境时指定python版本
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
mkvirtualenv --python==解释器的路径 虚拟环境名称
例子：
mkvirtualenv --python==c:\Python36\python.exe hy_env
说明：
如果同时装有python2 和 python3 在创建虚拟环境的时候需要指定版本，可以这样子搞



第[55]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
修改mkvirtualenv默认路径的办法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
环境变量》系统变量
添加WORKON_HOME



第[56]题_03-django__03-配置
02-模块与功能.txt
...
上传图片的目录配置
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，新建目录，用于存放用户上传的图片
例如，在static目录下创一个media目录
二，配置目录
在settings.py中配置
# 上传文件的目录保存
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')



第[57]题_01-数据库__redis
09-hash数据类型.txt
...
添加单个哈希字段值对
设置zs键为哈希，存值
字段height 170
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hset 键 字段1 值1
例子：
hset zs height 170



第[58]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2解压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bunzip2 压缩文件



第[59]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bzip2 文件1 文件n
被压缩文件会消失，新生成的压缩文件以.bz2结尾
单个文件被压缩，并不会合并成一个压缩包
不可以压缩目录



第[60]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
gzip解压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
gunzip 被压缩的文件



第[61]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
gzip压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
gzip 文件1 文件n
原文件会消失，会有新的压缩文件出来，以.gz结尾
单个文件压缩，并不会合并为一个压缩包
不可压缩目录



第[62]题_04-版本控制__02-github
01-操作.txt
...
生成公钥与私钥
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
命令：
ssh-kengen
效果：
在提示的路径上会有公钥与私钥生成
公钥配到网上
私钥留在电脑



第[63]题_03-django__04-dj2vdo
1920211530综合.txt
...
url转换器
path方法捕捉路径上的参数
限定参数的类型
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
path('book/publisher/<int:publisher_id>/', 视图）
本写法限定了路径中publisher_id位置的类型，为int类型
默认的转换器是str
小结：
url转换器限定的是什么类型，视图函数得到的参数就是什么类型
常用的类型有int, str



第[64]题_03-django__04-dj2vdo
1920211530综合.txt
...
视图中获取get方式传递过来的参数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
在视图中通过
request.GET 获取get传参的字典
通过request.GET[键] 获取字典中键所对应的值



第[65]题_03-django__04-dj2vdo
1920211530综合.txt
...
捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：假设路径的格式
path('book/<名称1>/<名称2>/', 视图）
对应的视图需要这样定义：
def 视图名（request， 名称1， 名称2）：
注意，视图中的形参要与path里尖括号里名称保持一致
视图中就可以得到数据



第[66]题_03-django__04-dj2vdo
1920211530综合.txt
...
总路由
为什么总路由从urls.py中开始找
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
在settings.py中配置了
ROOT_URLCONF='项目名.urls'



第[67]题_03-django__04-dj2vdo
1920211530综合.txt
...
ALLOWED_HOSTS的功能
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
配置中ALLOWED_HOSTS的功能
只有列表中的ip才可以访问



第[68]题_03-django__04-dj2vdo
1920211530综合.txt
...
DEBUG模式的功能
位于settings.py中的DEBUG的功能
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
1，开启后修改django代码并保存后，服务器会重启
2，如果项目中出现了错误，会在浏览器与控制台打印错误
3，上线以后需要设置把DEBUG=False
4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS



第[69]题_03-django__04-dj2vdo
1920211530综合.txt
...
web服务器，应用服务器，web应用框架
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
web服务器，处理http请求，例如nginx
应用服务器，处理逻辑的服务器
应用框架，封装好的编程语言



第[70]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
创建虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
mkvirtualenv 虚拟环境名
例子：
mkvirtualenv dailyfresh



