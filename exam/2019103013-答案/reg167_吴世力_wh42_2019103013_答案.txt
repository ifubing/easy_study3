
第[1]题_03-django__04-dj2vdo
191024模板.txt
...
for循环中的变量，显示序号-反向显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
forloop.revcounter
。
例子格式：
{% for 变量 in 容器 %}
序号：{{ forloop.revcounter }}
变量
{% endfor %}
》
计数以0结束
revcounter0



第[2]题_01-数据库__mongodb
01-增删改查.txt
...
创建集合（集合就是数据表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：创建一个名籽tbtwo的集合
> db.createCollection("tbtwo")
{ "ok" : 1 }



第[3]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
往线程队列中存入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.put(数据)
说明：
如果队列满了，会阻塞
补充：
队列.put(数据，block=False)
队列如果满了，就会报一个错误



第[4]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
插入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》插入一条数据
例子：
res = 集合对象.insert_one({"name":"悟空2", "age":500, "skill":"龟派气功"})
》插入多条数据
例子：
集合对象.insert_many(列表包字典)



第[5]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
safe过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|safe }}
效果：
value的代码会被浏览器解析
如果是html代码会生成标签
如果是js代码会执行
对于用户提交的数据不要用saft过滤器



第[6]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
lower与upper过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|lower }}
效果：
把数据全部变为小写
例子：
{{ value|upper}}
效果：
把数据全部转变为大写



第[7]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程锁的定义与使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
定义
import threading
生成线程锁对象
锁对象 = threading.Lock()
上锁
锁对象.acquire()
解锁
锁对象.release()



第[8]题_06-前端__html
04-表单.txt
...
    ...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[9]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历，逆序遍历
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 reversed %}
临时变量
{% endfor %}



第[10]题_06-前端__html
01-html基本.txt
...
特效标签脚本标签
放javascript代码的标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
两个效果
1，加载其它js文件
<script src="js路径"></script>
2，直接在里面写代码
<script>样式</script>



第[11]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历基本使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 %}
临时变量
{% endfor %}
注意：
for中无continue与break
扩展：
forloop.counter	当前循环的索引值,从1开始
forloop.counter0	当前循环的索引值,从0开始
forloop.revcounter	当前循环的倒序索引值(以1结束)
forloop.revcounter0	当前循环的倒序索引值(以0结束)
forloop.first	当前循环是不是第一次循环(返回的是一个布尔值)
forloop.last	当前循环是不是最后一次循环(返回的是一个布尔值)
forloop.parentloop	本层循环的外层循环



第[12]题_01-数据库__mongodb
03-查询.txt
...
查询所有
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.find()



第[13]题_03-django__04-dj2vdo
191024模板.txt
...
让我们的模板语句不生效
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{% verbatim %}
{{ 变量 }}
{% endverbatim %}
效果：
被verbatim包裹的模板语句不会被解释
是什么还是什么
翻译：
verbatim
英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  
adj./adv.
一字不差的(地);逐字的(地)



第[14]题_06-前端__html
04-表单.txt
...
多行文本输入框
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
    <textarea name="" id="" cols="30" rows="10">内容区</textarea>



第[15]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
获取当前线程的对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
threading.current_thread()



第[16]题_06-前端__html
02-基本标签.txt
...
斜体标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<i>斜体</i>



第[17]题_03-django__04-dj2vdo
191024模板.txt
...
字典遍历，同时得到键与值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{% for key, val in persion.items %}
key--val
{% endfor %}



第[18]题_06-前端__html
02-基本标签.txt
...
字符实体
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
空格， &nbsp;
<， &lt;
>， &gt;



第[19]题_01-数据库__mongodb
03-查询.txt
...
排序
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
以某某键进行升序排序
查询结果.sort(｛键：1｝)
以某某键进行降序排序
查询结果.sort(｛键：-1｝)
例子：
查询所有的数据，以age升序排序
db.colc.find().sort({age:1})
查询所有的数据，以age降序排序
db.colc.find().sort({age:-1})



第[20]题_03-django__04-dj2vdo
191024模板.txt
...
模板中的html字符串，让它渲染生效
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% autoescape off %}
	{{ html模板变量 }}
｛% endautoescape %｝
效果：
被autoescape包裹的模板变量如果是html代码，会被渲染生效
默认情况django为了保护安全，不会让html或js代码渲染生效
单词：
auto，自动
escape，释放



第[21]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
避免转义给字符串加哪个字母表示原始字符串
如何避免正则表达式中的内容被python解释器转义
在python写正则表达式要注意什么
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
注意使用r包裹一下
r , 表示需要原始字符串，不转义特殊字符
例如：
re_path(r"book/(\d+)/", bookview)



第[22]题_01-数据库__mongodb
03-查询.txt
...
逻辑运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
与，｛键1：值1， 键2：值2｝ 
或， ｛$or：[{},{}]｝
例子：
找年龄为19岁或者班级为java班的数据
db.colc.find({$or:[{age:19},{classname:"java"}]})
找年龄大于16岁或者班级为java班的数据
db.colc.find({$or:[{age:{$gt:16}},{classname:"java"}]})



第[23]题_06-前端__html
02-基本标签.txt
...
水平线标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<hr>



第[24]题_01-数据库__mongodb
05-索引.txt
...
创建一个普通索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> db.stu.ensureIndex({name:1})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
>



第[25]题_03-django__04-dj2vdo
191024模板.txt
...
开始行与结束行的判断
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》判断是否是开始行
forloop.first
》判断是否是结束行
forloop.last
》例子
{% for book in books %}
{% if forloop.first %}
代码一
{% elif forloop.last %}
代码二
｛% endif %}
{% endfor %}
》说明
一般会与if判断一起使用



第[26]题_01-数据库__mongodb
03-查询.txt
...
分页相关知识
1，限定显示几条
2，跳过几条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
limit(n)，显示n条
skip(m)，跳过m条
一般limit与skip同时使用，实现分页效果
例子：
每一页显示两个数据
第一页
db.集合名.find().skip(0).limit(2)
第二页
db.集合名.find().skip(2).limit(2)
第三页
db.集合名.find().skip(4).limit(2)
第四页
db.集合名.find().skip(6).limit(2)
（当前页码-1）*每页显示几个数据
第n页
db.集合名.find().skip((n-1)*2)



第[27]题_03-django__04-dj2vdo
191024视图.txt
...
视图给模板传递参数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
render(request, 模板名, 字典)



第[28]题_06-前端__html
02-基本标签.txt
...
换行标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
标签：
<br>
或者
<br />



第[29]题_03-django__04-dj2vdo
1920211530综合.txt
...
url是统一资源定位符，它的组成结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scheme：//host:port/path/?k1=v1&k2=v2#anchor
详解：
scheme，协议
host，主机名
port，端口号
path，路径
k1=v1&k2=v2，get参数



第[30]题_06-前端__html
02-基本标签.txt
...
图象标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
<img src="images/pic.jpg" alt="产品图片" title="鸣人"/>
说明：
<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：
src属性 定义图片的引用地址
alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。
title属性，鼠标移动到图片上时显示的文字



第[31]题_02-爬虫__scrapy爬虫
01-入门.txt
...
爬虫项目运行
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scrapy crawl 爬虫名称
例子：
scrapy crawl qidian



第[32]题_01-数据库__mongodb
03-查询.txt
...
比较运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号有：
等于，年龄等于18  ｛age:18｝
小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}
大于，$gt,  greater than
小于等于，$lte  less than equal
大于等于，$gte
不等于， $ne   
例子：
db.colc.find({age:{$gt:19}})



第[33]题_06-前端__html
03-列表.txt
...
定义列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<dl>
    <dt>html</dt>
    <dd>负责页面的结构</dd>
    <dt>css</dt>
    <dd>负责页面的表现</dd>
    <dt>javascript</dt>
    <dd>负责页面的行为</dd>
</dl>
说明：
定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，



第[34]题_06-前端__html
02-基本标签.txt
...
加粗标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<b>加粗</b>



第[35]题_01-数据库__mongodb
04-聚合.txt
...
分组
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.aggregate({_id:"$字段名"})
例子：按照classname的值来进行分组
> db.colc.aggregate({$group:{_id:'$classname'}})
{ "_id" : "java" }
{ "_id" : "php" }
{ "_id" : "python02" }
{ "_id" : "python" }
{ "_id" : null }
>
例子：按照classname的值来进行分组并统计人数
> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})
{ "_id" : "java", "num" : 1 }
{ "_id" : "php", "num" : 1 }
{ "_id" : "python02", "num" : 1 }
{ "_id" : "python", "num" : 1 }
{ "_id" : null, "num" : 2 }
>
例子：分组统计小组人数，统计年龄平均值
> db.one.aggregate({$group:{_id:"$class",count:{$sum:1},pjnl:{$avg:"$age"}}})
{ "_id" : "php", "count" : 1, "pjnl" : 86 }
{ "_id" : "python", "count" : 2, "pjnl" : 28 }
例子：分组并得到最小值
> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})
{ "_id" : 1, "minage" : 52 }
{ "_id" : 0, "minage" : 38 }
>   



第[36]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
从线程队列中取出数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.get()
说明：
队列如果是空的，会阻塞
补充：
队列.get(block=False)
队列如果空了，就会报一个错误



第[37]题_03-django__04-dj2vdo
191024模板.txt
...
高级模板变量取值与方法的调用
模板变量为列表，字典时，如何取成员
模板变量为对象时，如何调方法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
取值规则：
通过点来取值，例如：
字典.键， 列表.索引， 对象.属性取值
调方法规则：
模板变量.方法名  
注意，方法名后不用加括号
例如：
模板变量 stu_list 是一个列表，取列表的2号位
{{ stu_list.2 }}
例如：
模板变量 user 是一个对象，取它的name属性值
{{ user.name }}



第[38]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
获取当前代码中所有的线程对象，得到一个列表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
threading.enumerate()
[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的



第[39]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
删除
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
功能：
可以删除一个，或者删除多个
格式：
集合对象.delete_one（条件字典）
集合对象.delete_many(条件字典)



第[40]题_01-数据库__redis
09-hash数据类型.txt
...
获取一共有多少个键值对
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hlen 键
例子：获取zs一共有多少个字段
hlen zs



第[41]题_03-django__04-dj2vdo
191024模板.txt
...
if标签基本用法
if...else...二路分支的格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% if 条件 %}
成立时显示
{% else %}
不成立时显示
{% endif %}
关于条件：
可以是比较大小，判断等于，成员运算，等等



第[42]题_06-前端__html
01-html基本.txt
...
样式标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
样式代码写在这里
<style>
样式代码写这里
</style>



第[43]题_02-爬虫__scrapy爬虫
01-入门.txt
...
安装scrapy
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
pip install scrapy



第[44]题_01-数据库__mongodb
05-索引.txt
...
创建一个联合唯一索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.ensureIndex({字段1：1， 字段2：1})
例子：按照姓名与图片名称建立联合唯一索引
db.stu.ensureIndex({name:1, bname:1})



第[45]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
length过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|length }}
效果
获取数据的长度



第[46]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转路径-不带参数的反转
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》使用前记得确保导入了
from django.shortcuts import reverse
》格式
reverse(“命名空间：别名”）
reverse（“别名”）



第[47]题_01-数据库__mongodb
02-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.update(查找条件，修改内容，[{multi:true}])
情况一：查到数据，完全修改
例子：这种效果会把查到的结果完全的替代为修改的内容
查找姓名为zs的数据行，把整个数据修改年龄为20
> db.colc.update({name:"zs"},{age:20})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
>   
情况二：查到数据，保留修改（只修改指定的字段）
例子，查找班级为python的数据，把年级改为2
> db.colc.update({classname:"python"},{$set:{grade:2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
格式：
要修改的内容
{$set:{要修改的键：要修改的值}}



第[48]题_01-数据库__mongodb
04-聚合.txt
...
匹配数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：查到年龄大于20的数据
> db.one.aggregate({$match:{age:{$gt:20}}})
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
>    



第[49]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
first与last过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|first }}
{{ 数据|last }}
效果：
first用于拿到数据中第一个成员
last用于拿到数据中最后一个成员



第[50]题_06-前端__html
04-表单.txt
...
下拉框
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
    <select name="place" id="">
        <option value="1">武汉</option>
        <option value="2">长沙</option>
    </select>



第[51]题_03-django__04-dj2vdo
191024模板.txt
...
遍历容器无数据时的显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% for 临时变量 in 容器 %}
 	临时变量
｛% empty %}
无数据
｛% endfor %｝



第[52]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
random过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|random }}
效果：
从value中随机出一个来



第[53]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
default过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|default:默认值}}
例子：
{{ value|default:"无数据" }}
效果：
如果数据为空时，显示：右边的内容
空列表空字符串空字典等等



第[54]题_06-前端__html
02-基本标签.txt
...
标题标签的使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
默认效果：
加粗
额外效果：
爬虫识别页面时，知道这个是重点
例子：
<h1>这是一级标题</h1>
<h2>这是二级标题</h2>
<h3>这是三级标题</h3>



第[55]题_01-数据库__mongodb
02-数据行的操作.txt
...
删除数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
》删除多个
db.集合名称.remove(条件)
》删除一个
db.集合名称.remove(条件,{justOne:true})



第[56]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
队列中的等待
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
队列.join()
可以让任务没有完成的队列，阻塞



第[57]题_03-django__04-dj2vdo
191024模板.txt
...
for循环中的变量，显示序号-顺序显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
forloop.counter
》
例子格式：
{% for 变量 in 容器 %}
序号：{{ forloop.counter }}
变量
{% endfor %}
》
计数从0开始，使用
forloop.counter0



第[58]题_03-django__04-dj2vdo
191024模板.txt
...
模板反向解析-带关键词参数的情况
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% url '别名' 参数名1=值1 参数名n=值n %}
例子：
{% url 'detail' book_id=1 %}
说明：
path('book/detail/<book_id>/', views.book_detail, name='detail')
别名detail对应的路径需要一个参数
所以在反向解析时要传递过去
模板中反解 {% url 'detail' book_id=1 %}
会得到这样的结果  'book/detail/1/'
视图中反解 reverse("detail", kwargs = {"book_id":1})
会得到这样的结果  'book/detail/1/'



第[59]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
查找
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
查找一条数据：
res = 集合对象.find_one({"name":"qq"})
查找多条数据：
res = 集合对象.find({"gender":True})



第[60]题_06-前端__html
04-表单.txt
...
input控件的各种类型
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
<input type="类型">
例子：
<input type="text">
分类：
type="text" 定义单行文本输入框
type="password" 定义密码输入框
type="radio" 定义单选框
type="checkbox" 定义复选框
type="file" 定义上传文件
type="submit" 定义提交按钮
type="reset" 定义重置按钮
type="button" 定义一个普通按钮
type="image" 定义图片作为提交按钮，用src属性定义图片地址
type="hidden" 定义一个隐藏的表单域，用来存储值
value属性 定义表单元素的值
name属性 定义表单元素的名称，此名称是提交数据时的键名



第[61]题_06-前端__html
01-html基本.txt
...
html的基本结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<!DOCTYPE html>
<html lang="en">
    <head>            
        <meta charset="UTF-8">
        <title>网页标题</title>
    </head>
    <body>
          网页显示内容
    </body>
</html>



第[62]题_03-django__04-dj2vdo
191024视图.txt
...
模板的渲染，
把模板文件的内容获取出来
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一：render_to_string
》导入
from django.template.loader import render_to_string
》在视图中使用
def index(request):
	html = render_to_string(模板名.html)
	return HttpResponse(html)
》说明
这个是render函数的基本，了解即可
方式二: render 
》导入
from django.shortcuts import render
》在视图中使用
def index(request):
	return render(request, 模板名.html)



第[63]题_01-数据库__mongodb
04-聚合.txt
...
排序
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：按照年龄进行升序
> db.one.aggregate({$sort:{age:1}})
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
>
例子：按照主键降序显示
> db.one.aggregate({$sort:{_id:-1}})
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
>



第[64]题_01-数据库__mongodb
01-增删改查.txt
...
使用数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
use 数据库名称
例子：
use one
> use one
switched to db one



第[65]题_01-数据库__mongodb
05-索引.txt
...
创建一个唯一索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
> db.stu.ensureIndex({name:1},{unique:true})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
应用：
可以通过创建一个唯一索引的方式
来约束字段，不允许重复



第[66]题_06-前端__html
02-基本标签.txt
...
下划线标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<u>下划线</u>



第[67]题_02-爬虫__scrapy爬虫
02-配置.txt
...
不尊守爬虫协议
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
ROBOTSTXT_OBEY = False



第[68]题_03-django__04-dj2vdo
191024模板.txt
...
模板中的反向解析，url基本用法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法，两种情况：
{% url '别名' %}
{% url '命名空间:别名' %}
例子：
路由文件中
path('book/detail/', views.book_detail, name='detail')
在模板中可以通过
{% url 'detail' %} 
拿到值
book/detail
在视图函数中可以通过
reverse('detail') 
拿到值
book/detail



第[69]题_06-前端__html
01-html基本.txt
...
注释
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<!-- 注释内容写在这里 -->



第[70]题_06-前端__html
03-列表.txt
...
有序列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<ol>
    <li>列表文字一</li>
    <li>列表文字二</li>
    <li>列表文字三</li>
</ol>
说明：
在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。



