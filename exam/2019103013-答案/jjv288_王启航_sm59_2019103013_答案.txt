
第[1]题_01-数据库__mongodb
03-查询.txt
...
逻辑运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
与，｛键1：值1， 键2：值2｝ 
或， ｛$or：[{},{}]｝
例子：
找年龄为19岁或者班级为java班的数据
db.colc.find({$or:[{age:19},{classname:"java"}]})
找年龄大于16岁或者班级为java班的数据
db.colc.find({$or:[{age:{$gt:16}},{classname:"java"}]})



第[2]题_01-数据库__mongodb
03-查询.txt
...
排序
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
以某某键进行升序排序
查询结果.sort(｛键：1｝)
以某某键进行降序排序
查询结果.sort(｛键：-1｝)
例子：
查询所有的数据，以age升序排序
db.colc.find().sort({age:1})
查询所有的数据，以age降序排序
db.colc.find().sort({age:-1})



第[3]题_01-数据库__mysql
04-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
update 表名 set 列1=值1，列2=值2 where 条件
例子：
update student set name='赵云',age=23 where id=3;
注意：
一定不要漏了where 条件，否则所有数据都被改掉



第[4]题_01-数据库__mongodb
04-聚合.txt
...
分组
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.aggregate({_id:"$字段名"})
例子：按照classname的值来进行分组
> db.colc.aggregate({$group:{_id:'$classname'}})
{ "_id" : "java" }
{ "_id" : "php" }
{ "_id" : "python02" }
{ "_id" : "python" }
{ "_id" : null }
>
例子：按照classname的值来进行分组并统计人数
> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})
{ "_id" : "java", "num" : 1 }
{ "_id" : "php", "num" : 1 }
{ "_id" : "python02", "num" : 1 }
{ "_id" : "python", "num" : 1 }
{ "_id" : null, "num" : 2 }
>
例子：分组统计小组人数，统计年龄平均值
> db.one.aggregate({$group:{_id:"$class",count:{$sum:1},pjnl:{$avg:"$age"}}})
{ "_id" : "php", "count" : 1, "pjnl" : 86 }
{ "_id" : "python", "count" : 2, "pjnl" : 28 }
例子：分组并得到最小值
> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})
{ "_id" : 1, "minage" : 52 }
{ "_id" : 0, "minage" : 38 }
>   



第[5]题_06-前端__html
04-表单.txt
...
下拉框
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
    <select name="place" id="">
        <option value="1">武汉</option>
        <option value="2">长沙</option>
    </select>



第[6]题_01-数据库__mongodb
05-索引.txt
...
创建一个联合唯一索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.ensureIndex({字段1：1， 字段2：1})
例子：按照姓名与图片名称建立联合唯一索引
db.stu.ensureIndex({name:1, bname:1})



第[7]题_01-数据库__mongodb
01-增删改查.txt
...
查看当前数据库中的全部集合（全部数据表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> show collections
spider
stu
tbtwo
>



第[8]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
random过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|random }}
效果：
从value中随机出一个来



第[9]题_01-数据库__mongodb
02-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.update(查找条件，修改内容，[{multi:true}])
情况一：查到数据，完全修改
例子：这种效果会把查到的结果完全的替代为修改的内容
查找姓名为zs的数据行，把整个数据修改年龄为20
> db.colc.update({name:"zs"},{age:20})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
>   
情况二：查到数据，保留修改（只修改指定的字段）
例子，查找班级为python的数据，把年级改为2
> db.colc.update({classname:"python"},{$set:{grade:2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
格式：
要修改的内容
{$set:{要修改的键：要修改的值}}



第[10]题_02-爬虫__requests爬虫
01-发起请求.txt
...
发起请求，伪装为浏览器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
办法，发起请求时，在请求头中添加user-agent数据



第[11]题_01-数据库__mongodb
03-查询.txt
...
查询，只拿一个
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.findOne(条件)



第[12]题_01-数据库__mysql
04-数据行的操作.txt
...
删除指定的数据行
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
delete from 表名 where 条件；
例子：
delete from student where id>4;



第[13]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
gzip解压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
gunzip 被压缩的文件



第[14]题_03-django__04-dj2vdo
191024模板.txt
...
让我们的模板语句不生效
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{% verbatim %}
{{ 变量 }}
{% endverbatim %}
效果：
被verbatim包裹的模板语句不会被解释
是什么还是什么
翻译：
verbatim
英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  
adj./adv.
一字不差的(地);逐字的(地)



第[15]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
join过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|join:"/" }}
效果：
value容器的成员以：右边的符号进行连接



第[16]题_01-数据库__redis
05-键命令.txt
...
查看name键对应值的数据类型
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> type name



第[17]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
创建一个线程队列队象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
import queue
q = queue.Queue()
补充：
生成一个容量为6的队列对象
q = queue.Queue(6)



第[18]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-全列插入
全部字段的值都插入
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名 values(值1，值n)
例子：
insert into student values(0, 'pyhui',18);



第[19]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
查找
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
查找一条数据：
res = 集合对象.find_one({"name":"qq"})
查找多条数据：
res = 集合对象.find({"gender":True})



第[20]题_01-数据库__mongodb
04-聚合.txt
...
排序
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：按照年龄进行升序
> db.one.aggregate({$sort:{age:1}})
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
>
例子：按照主键降序显示
> db.one.aggregate({$sort:{_id:-1}})
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
>



第[21]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
floatformat过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：2种情况
{{ 数据|floatformat }}
{{ 数据|floatformat:n }}
例子：
{{ "123.456"|floatformat }}
结果为 123.5
{{ "123.00"|floatformat }}
结果为 123
{{ "123.4567"|floatformat:2 }}
结果为123.46



第[22]题_06-前端__html
05-表格.txt
...
表格的基本格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<table>
    <thead>
    <tr><th>序号</th><th>姓名</th></tr>
    </thead>
    <tbody>
    <tr><td>1</td><td>张三</td></tr>
    </tbody>
</table>
说明：table的属性
border属性 定义表格的边框，设置值是数值
cellpadding属性 定义单元格内容与边框的距离，设置值是数值
cellspacing属性 定义单元格与单元格之间的距离，设置值是数值
align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right
说明：tr代表一行，td和th代表单元格
<tr>标签：定义表格中的一行
<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，
<thead>标签，代表表头
<tbody>标签，代表了表格的主体
注意：单元格的属性
align 设置单元格中内容的水平对齐方式,设置值有：left | center | right
valign 设置单元格中内容的垂直对齐方式 top | middle | bottom
colspan 设置单元格水平合并，设置值是数值
rowspan 设置单元格垂直合并，设置值是数值



第[23]题_01-数据库__mongodb
01-增删改查.txt
...
删除集合
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> db.tbtwo.drop()
true



第[24]题_02-爬虫__scrapy爬虫
02-配置.txt
...
不尊守爬虫协议
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
ROBOTSTXT_OBEY = False



第[25]题_03-django__03-配置
02-模块与功能.txt
...
如何定义一个视图类
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
导入View类，作为父类
自定义一个类，继承View类
例子：商品首页的页面渲染与展示
from django.views.generic import View
class IndexView(View):
    """首页"""
    def get(self,request):
        """ 显示首页 """
        return render(request, "index.html")



第[26]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
模板过滤器的使用格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{{ 模块变量 | 过滤器:参数 }}
说明：
关于参数
有的过滤器是不带参数的
如果有参数，最多只会接收一个参数



第[27]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历，逆序遍历
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 reversed %}
临时变量
{% endfor %}



第[28]题_01-数据库__mongodb
03-查询.txt
...
统计查询结果的数量
两种方式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一
db.集合名称.find(条件).count()
方式二
db.集合名称.count(条件)
例子：
查询年龄小于60的数据条目数
db.colc.find({age:{$lt:60}}).count()
db.colc.count({age:{$lt:60}})



第[29]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
安装virtualenvwrapper
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》windows系统的安装
pip install virtualenvwrapper-win
》linux系统的安装
pip install virtualenvwrapper
直接安装virtualenvwrapper，会自动安装virtualenv



第[30]题_04-版本控制__01-git
01-入门.txt
...
缓冲区的内容清除
清除缓冲区中记录的对某一个文件的修改
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git reset HEAD 文件名
例子：
git reset HEAD a.py
显示：
$ git reset HEAD a.py
Unstaged changes after reset:
M       a.py



第[31]题_06-前端__html
02-基本标签.txt
...
图象标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
<img src="images/pic.jpg" alt="产品图片" title="鸣人"/>
说明：
<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：
src属性 定义图片的引用地址
alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。
title属性，鼠标移动到图片上时显示的文字



第[32]题_01-数据库__mongodb
02-数据行的操作.txt
...
删除数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
》删除多个
db.集合名称.remove(条件)
》删除一个
db.集合名称.remove(条件,{justOne:true})



第[33]题_06-前端__html
03-列表.txt
...
有序列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<ol>
    <li>列表文字一</li>
    <li>列表文字二</li>
    <li>列表文字三</li>
</ol>
说明：
在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。



第[34]题_06-前端__html
01-html基本.txt
...
注释
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<!-- 注释内容写在这里 -->



第[35]题_02-爬虫__解析库
01-xpath解析.txt
...
获取标签内容为：下一页> 的a标签，取它的href值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//a[text()="下一页>"]/@href



第[36]题_06-前端__html
02-基本标签.txt
...
斜体标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<i>斜体</i>



第[37]题_03-django__04-dj2vdo
191024模板.txt
...
 
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[38]题_01-数据库__mongodb
05-索引.txt
...
创建一个唯一索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
> db.stu.ensureIndex({name:1},{unique:true})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
应用：
可以通过创建一个唯一索引的方式
来约束字段，不允许重复



第[39]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
如何在一个函数内部修改全局变量
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
a=1
def test():
    global a   #利用global 修改全局变量
    a=2
    print(a)
    return
test()  



第[40]题_01-数据库__redis
06-list数据类型.txt
...
往lis键中数据a4后面添加数据n4
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> linsert lis after a4 n4



第[41]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
获取当前线程的对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
threading.current_thread()



第[42]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
修改
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》修改一条
集合对象.update_one({条件字典})
》修改多条
集合对象.update_many({条件字典})
例子：
res = 集合对象.update_many({"gender":True},{"$set":{"skill":"无言"}})



第[43]题_06-前端__html
02-基本标签.txt
...
超链接标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<a href="2.html" target="_blank">测试页面2</a>
说明：
<a>标签可以在网页上定义一个链接地址，它的常用属性有：
href属性 定义跳转的地址
title属性 定义鼠标悬停时弹出的提示文字框
target属性 定义链接窗口打开的位置
target="_self" 缺省值，新页面替换原来的页面，在原来位置打开
target="_blank" 新页面会在新开的一个浏览器窗口打开



第[44]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
safe过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|safe }}
效果：
value的代码会被浏览器解析
如果是html代码会生成标签
如果是js代码会执行
对于用户提交的数据不要用saft过滤器



第[45]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程类的定义与启动
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
自定义一个类
让该类继承threading.Thread
同时在自定义类中重写run方法
就可
例子：
class Drawing(threading.Thread):
    def run(self):
        for x in range(3):
            print('正在绘制图片', x)
            time.sleep(1)
》线程类实例化为一个对象并运行：
t2 = Drawing()
t2.start()



第[46]题_04-版本控制__01-git
01-入门.txt
...
删除分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git branch -d 分支名称
例子：
$ git branch -d zhaoyun



第[47]题_06-前端__html
02-基本标签.txt
...
水平线标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<hr>



第[48]题_03-django__04-dj2vdo
191024模板.txt
...
去除html标签中的空白字符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% spaceless %}
html代码
{% endspaceless %}
效果：
会把html代码中的空白，换行等符号去掉，最后形成一行
单词解释：
space，空格
less，减少



第[49]题_01-数据库__mongodb
04-聚合.txt
...
显示指定的字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：不显示_id字段，只显示name字段
> db.one.aggregate({$project:{_id:0, name:1}})
{ "name" : "张三" }
{ "name" : "李四" }
{ "name" : "赵强" }
>  



第[50]题_03-django__04-dj2vdo
191024模板.txt
...
for循环中的变量，显示序号-顺序显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
forloop.counter
》
例子格式：
{% for 变量 in 容器 %}
序号：{{ forloop.counter }}
变量
{% endfor %}
》
计数从0开始，使用
forloop.counter0



第[51]题_01-数据库__mongodb
05-索引.txt
...
取消一个索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.dropIndex(索引名称)
例子：
> db.stu.dropIndex("name_1")
{ "nIndexesWas" : 2, "ok" : 1 }
注意：
删除索引的时候要先查一下索引对应的名称
要用‘索引名称’来进行删除



第[52]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2压缩文件，同时要保留文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bzip2 - k 文件1 文件n



第[53]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
获取当前代码中所有的线程对象，得到一个列表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
threading.enumerate()
[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的



第[54]题_06-前端__html
03-列表.txt
...
定义列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<dl>
    <dt>html</dt>
    <dd>负责页面的结构</dd>
    <dt>css</dt>
    <dd>负责页面的表现</dd>
    <dt>javascript</dt>
    <dd>负责页面的行为</dd>
</dl>
说明：
定义列表通常用于术语的定义。<dl>标签表示列表的整体。<dt>标签定义术语的题目。<dd>标签是术语的解释。一个<dl>中可以有多个题目和解释，



第[55]题_01-数据库__mysql
02-数据库操作.txt
...
创建数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
create database 数据库名 charset=utf8;
例子：
create database pyhui charset=utf8;



第[56]题_03-django__04-dj2vdo
191024模板.txt
...
开始行与结束行的判断
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》判断是否是开始行
forloop.first
》判断是否是结束行
forloop.last
》例子
{% for book in books %}
{% if forloop.first %}
代码一
{% elif forloop.last %}
代码二
｛% endif %}
{% endfor %}
》说明
一般会与if判断一起使用



第[57]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
避免转义给字符串加哪个字母表示原始字符串
如何避免正则表达式中的内容被python解释器转义
在python写正则表达式要注意什么
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
注意使用r包裹一下
r , 表示需要原始字符串，不转义特殊字符
例如：
re_path(r"book/(\d+)/", bookview)



第[58]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
add过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子一，两个数字会相加：
{{ "1"|add:"2"}}
得到结果3
例子二，不能相加的字符串就拼接
{{ "1"|add:"2sss" }}
得到结果  12sss
例子三，两个列表相加就是合并
{{ list1 | add : list2 }}



第[59]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转路径-不带参数的反转
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》使用前记得确保导入了
from django.shortcuts import reverse
》格式
reverse(“命名空间：别名”）
reverse（“别名”）



第[60]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
date过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|date：格式 }}
例子：
{{ today|date:"Y/m/d" }}



第[61]题_01-数据库__mongodb
03-查询.txt
...
一个条件的查找
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.find(条件)



第[62]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bzip2 文件1 文件n
被压缩文件会消失，新生成的压缩文件以.bz2结尾
单个文件被压缩，并不会合并成一个压缩包
不可以压缩目录



第[63]题_04-版本控制__02-github
01-操作.txt
...
本地仓库推送到网上
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git push -u origin
例子：
git push -u origin



第[64]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转-带关键词参数的反转
路由的路径匹配中有关键词捕获时（命名分组的正则表达式）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)
例子：
detail_url= reverse("detail", kwargs={"article_id":16})
效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置



第[65]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
插入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》插入一条数据
例子：
res = 集合对象.insert_one({"name":"悟空2", "age":500, "skill":"龟派气功"})
》插入多条数据
例子：
集合对象.insert_many(列表包字典)



第[66]题_01-数据库__redis
06-python连redis.txt
...
python连redis需要安装的包
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
pip install redis



第[67]题_06-前端__html
01-html基本.txt
...
样式标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
样式代码写在这里
<style>
样式代码写这里
</style>



第[68]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
从线程队列中取出数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.get()
说明：
队列如果是空的，会阻塞
补充：
队列.get(block=False)
队列如果空了，就会报一个错误



第[69]题_01-数据库__redis
09-hash数据类型.txt
...
获取一共有多少个键值对
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hlen 键
例子：获取zs一共有多少个字段
hlen zs



第[70]题_01-数据库__redis
09-hash数据类型.txt
...
删除哈希数据某一个字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hdel 键 字段
例子：删除zs的weight字段
hdel zs weight



