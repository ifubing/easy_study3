
第[1]题_02-爬虫__解析库
01-xpath解析.txt
...
从选取到的一堆节点中拿到指定索引的节点对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
办法：利用索引
例子：//a[1]
注意：起始值为1



第[2]题_01-数据库__mysql
05-查询.txt
...
模糊查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号：
like，模糊查询关键词
%，代表任意多个任意字符
_，代表一个任意字符
例子：
查询name以赵字开头的
select * from student where name like '赵%';
查询name是两个字组成的
select * from student where name like '__';



第[3]题_01-数据库__redis
08-zset数据类型.txt
...
获取z1键里权值在1到5范围的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zrangebyscore z1 1 5



第[4]题_01-数据库__mongodb
03-查询.txt
...
逻辑运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
与，｛键1：值1， 键2：值2｝ 
或， ｛$or：[{},{}]｝
例子：
找年龄为19岁或者班级为java班的数据
db.colc.find({$or:[{age:19},{classname:"java"}]})
找年龄大于16岁或者班级为java班的数据
db.colc.find({$or:[{age:{$gt:16}},{classname:"java"}]})



第[5]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]
并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
def square(x):
　　return x**2
res=map(square,[1,2,3,4,5])
res=[i for i in res if i>10]
print(res)



第[6]题_04-版本控制__01-git
01-入门.txt
...
删除文件的操作
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
1，本地删除
rm -rf 目标
2，提交到缓存区
git add 目标
3，提交到版本
git commit -m '版本说明'



第[7]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
date过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|date：格式 }}
例子：
{{ today|date:"Y/m/d" }}



第[8]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历基本使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 %}
临时变量
{% endfor %}
注意：
for中无continue与break
扩展：
forloop.counter	当前循环的索引值,从1开始
forloop.counter0	当前循环的索引值,从0开始
forloop.revcounter	当前循环的倒序索引值(以1结束)
forloop.revcounter0	当前循环的倒序索引值(以0结束)
forloop.first	当前循环是不是第一次循环(返回的是一个布尔值)
forloop.last	当前循环是不是最后一次循环(返回的是一个布尔值)
forloop.parentloop	本层循环的外层循环



第[9]题_01-数据库__mongodb
03-查询.txt
...
正则查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
find(｛键：/正则表达式/｝)
find(｛键：$regex:正则式str｝)
例子：
查询sku以abc开头的数据
db.products.find({sku:/^abc/})
例子：查询姓名以z开头的
db.colc.find({name:/^z/})



第[10]题_01-数据库__mysql
03-数据表的操作.txt
...
删除数据表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
drop table 表名
示例：
drop table one;



第[11]题_01-数据库__mongodb
03-查询.txt
...
自定义查询，使用js语句来查
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
find({
	$where:function(){
		return this.age>19
	}
})
例子：
查找班级名称为python02的
db.colc.find({
	$where:function(){
		return this.classname == "python02"
	}
})
查找年龄小于19岁的
db.colc.find({
	$where:function(){
		return this.age < 19 
	}
})
关键点：
查询条件字典中以
$where 为键
值是一个js的匿名函数
只需要函数return 一个布尔值即可
如果布尔的结果为true 那么该行数据会被显示
通常在匿函中的this代表了当前数据行对象



第[12]题_06-前端__html
03-列表.txt
...
有序列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<ol>
    <li>列表文字一</li>
    <li>列表文字二</li>
    <li>列表文字三</li>
</ol>
说明：
在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。



第[13]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
default_if_none过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|default_if_none:默认值}}
例子：
{{ value|default_if_none:"我是默认值" }}
效果：
当数据仅仅为none的时候，才会显示默认值
如果数据为空列表时，显示 []
数据为空字典时，显示 {}



第[14]题_01-数据库__mongodb
01-增删改查.txt
...
使用数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
use 数据库名称
例子：
use one
> use one
switched to db one



第[15]题_03-django__04-dj2vdo
1920211530综合.txt
...
web服务器，应用服务器，web应用框架
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
web服务器，处理http请求，例如nginx
应用服务器，处理逻辑的服务器
应用框架，封装好的编程语言



第[16]题_01-数据库__redis
06-list数据类型.txt
...
从右侧插入数据
往lis键右侧插入数据 
a4  
a5
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> rpush lis a4 a5



第[17]题_06-前端__html
01-html基本.txt
...
载入其它样式文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<link rel="stylesheet" href="m.css">



第[18]题_06-前端__html
01-html基本.txt
...
meta标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
定义网页基本信息的标签
例如
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="keywords" content="python 人工智能">
    <meta name="description" content="网站描述">



第[19]题_02-爬虫__解析库
01-xpath解析.txt
...
获取标签内容为：下一页> 的a标签，取它的href值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//a[text()="下一页>"]/@href



第[20]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-全列插入
全部字段的值都插入
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名 values(值1，值n)
例子：
insert into student values(0, 'pyhui',18);



第[21]题_03-django__04-dj2vdo
1920211530综合.txt
...
url是统一资源定位符，它的组成结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scheme：//host:port/path/?k1=v1&k2=v2#anchor
详解：
scheme，协议
host，主机名
port，端口号
path，路径
k1=v1&k2=v2，get参数



第[22]题_02-爬虫__scrapy爬虫
01-入门.txt
...
安装scrapy
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
pip install scrapy



第[23]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
10、python内建数据类型有哪些
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict



第[24]题_01-数据库__redis
06-list数据类型.txt
...
lis键中查找a
找到后从左向右删掉2个
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrem lis 2 a



第[25]题_01-数据库__mysql
04-数据行的操作.txt
...
删除指定的数据行
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
delete from 表名 where 条件；
例子：
delete from student where id>4;



第[26]题_01-数据库__mongodb
05-索引.txt
...
创建一个唯一索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
> db.stu.ensureIndex({name:1},{unique:true})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
应用：
可以通过创建一个唯一索引的方式
来约束字段，不允许重复



第[27]题_01-数据库__mysql
04-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
update 表名 set 列1=值1，列2=值2 where 条件
例子：
update student set name='赵云',age=23 where id=3;
注意：
一定不要漏了where 条件，否则所有数据都被改掉



第[28]题_04-版本控制__01-git
01-入门.txt
...
切换分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
$ git checkout 分支名称
例子：
$ git checkout dev



第[29]题_06-前端__html
04-表单.txt
...
input控件的各种类型
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
<input type="类型">
例子：
<input type="text">
分类：
type="text" 定义单行文本输入框
type="password" 定义密码输入框
type="radio" 定义单选框
type="checkbox" 定义复选框
type="file" 定义上传文件
type="submit" 定义提交按钮
type="reset" 定义重置按钮
type="button" 定义一个普通按钮
type="image" 定义图片作为提交按钮，用src属性定义图片地址
type="hidden" 定义一个隐藏的表单域，用来存储值
value属性 定义表单元素的值
name属性 定义表单元素的名称，此名称是提交数据时的键名



第[30]题_01-数据库__redis
04-string数据类型.txt
...
设置name键对应的值zgl，5秒钟过期
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> setex name 5 zgl



第[31]题_01-数据库__redis
01-安装与配置.txt
...
默认的端口号
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
6379



第[32]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
从线程队列中取出数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.get()
说明：
队列如果是空的，会阻塞
补充：
队列.get(block=False)
队列如果空了，就会报一个错误



第[33]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转-带关键词参数的反转
路由的路径匹配中有关键词捕获时（命名分组的正则表达式）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)
例子：
detail_url= reverse("detail", kwargs={"article_id":16})
效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置



第[34]题_01-数据库__mongodb
02-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.update(查找条件，修改内容，[{multi:true}])
情况一：查到数据，完全修改
例子：这种效果会把查到的结果完全的替代为修改的内容
查找姓名为zs的数据行，把整个数据修改年龄为20
> db.colc.update({name:"zs"},{age:20})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
>   
情况二：查到数据，保留修改（只修改指定的字段）
例子，查找班级为python的数据，把年级改为2
> db.colc.update({classname:"python"},{$set:{grade:2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
格式：
要修改的内容
{$set:{要修改的键：要修改的值}}



第[35]题_06-前端__html
04-表单.txt
...
多行文本输入框
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
    <textarea name="" id="" cols="30" rows="10">内容区</textarea>



第[36]题_03-django__04-dj2vdo
191024模板.txt
...
字典遍历，同时得到键与值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{% for key, val in persion.items %}
key--val
{% endfor %}



第[37]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
删除
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
功能：
可以删除一个，或者删除多个
格式：
集合对象.delete_one（条件字典）
集合对象.delete_many(条件字典)



第[38]题_02-爬虫__scrapy爬虫
01-入门.txt
...
爬虫项目运行
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scrapy crawl 爬虫名称
例子：
scrapy crawl qidian



第[39]题_01-数据库__mysql
05-查询.txt
...
范围查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
关键词：
in(值1，值n)			不连续范围内
between...and...	连续范围内
例子：
查询id值为1,3,6的学生
select * from student where id in (1,3,6);
查询id值在2到8之间的学生
select * from student where id between 2 and 8;



第[40]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
select distinct name from student



第[41]题_01-数据库__redis
06-list数据类型.txt
...
获取lis键中最后四个元素
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrange lis -4 -1



第[42]题_01-数据库__redis
08-zset数据类型.txt
...
删除z1键里的两个成员two,three
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zrem z1 two three



第[43]题_01-数据库__mysql
03-数据表的操作.txt
...
修改表中字段-改字段名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
alter table 表名 change 原字段名 新字段名 类型 约束;
例子：
alter table pistudent change score defen tinyint ;



第[44]题_01-数据库__mongodb
03-查询.txt
...
查询所有
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.find()



第[45]题_04-版本控制__01-git
01-入门.txt
...
工作区的内容恢复为修改前的内容
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git checkout -- 文件名
例子：
。让所有的内容变为修改前
$ git checkout -- .
。让a.py变为修改前
$ git checkout -- a.py
图例：
https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70



第[46]题_01-数据库__mysql
03-数据表的操作.txt
...
修改表中字段的类型-仅改类型-不改字段名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
alter table 表名 modify 字段名 约束;
例子：
alter table pistudent modify score char(3) default '60';



第[47]题_02-爬虫__scrapy爬虫
01-入门.txt
...
创建爬虫
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scrapy genspider 爬虫名称 允许访问的域名
例子：
scrapy genspider qidian www.qidian.com
注意：
要先cd到项目目录中
然后再创建爬虫
效果：
在spiders目录中新增了一个爬虫名.py



第[48]题_06-前端__html
01-html基本.txt
...
样式标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
样式代码写在这里
<style>
样式代码写这里
</style>



第[49]题_01-数据库__redis
08-zset数据类型.txt
...
获取z1键中数据three的权值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zscore z1 three



第[50]题_01-数据库__redis
05-键命令.txt
...
查看name键对应值的数据类型
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> type name



第[51]题_01-数据库__redis
07-set数据类型.txt
...
往键s1里添加成员zs ls ww
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> sadd s1 zs ls ww



第[52]题_01-数据库__redis
09-hash数据类型.txt
...
删除整个哈希数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
del 键
例子：删掉键为zs的哈希数据
del zs



第[53]题_02-爬虫__requests爬虫
03-经验小结.txt
...
如何解决破解图片验证码
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
使用打码平台
执行给定的代码，打码平台会识别指定路径的图片验证码
并且返回识别后的结果



第[54]题_06-前端__html
02-基本标签.txt
...
删除标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<s>删除线</s>



第[55]题_01-数据库__redis
09-hash数据类型.txt
...
哈希的数据结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
redis数据库是键值形式的
比如0号数据库有一个name键存的字符串，有一个lis键存的列表，结构如下：
｛"name":"zs", "lis":[1,2,3]｝
如果该库中有一个键名为ha的数据是哈希类型，它在redis中的形态为：
｛"name":"zs", "lis":[1,2,3], "ha":{"f1":"v1","f2":"v2"}｝
博客：
https://blog.csdn.net/ifubing/article/details/101427123



第[56]题_01-数据库__mysql
05-查询.txt
...
查询结果消除重复
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select distinct 字段 from 表名;
例子：
select distinct gender from student;



第[57]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
插入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》插入一条数据
例子：
res = 集合对象.insert_one({"name":"悟空2", "age":500, "skill":"龟派气功"})
》插入多条数据
例子：
集合对象.insert_many(列表包字典)



第[58]题_04-版本控制__01-git
01-入门.txt
...
创建分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
$ git branch 分支名称
例子：
$ git branch dev



第[59]题_03-django__04-dj2vdo
191022路由url.txt
...
总路由根据路径进行分发
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》导入include模块
from django.urls import include
》进行分发
path("book/", include("book.urls"))
》其它形态
path("book/",include([path("list", 视图)]
))



第[60]题_01-数据库__mysql
05-查询.txt
...
查指定的字段，并且控制表头名称
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select 字段1 as 表头1，字段n as 表头n from 表名；
例子：
select name as 姓名, age as 年龄 from student;



第[61]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
谈下python的GIL
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。
如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。
多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大



第[62]题_03-django__03-配置
01-基本配置.txt
...
模板页中如何使用静态文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，导入静态配置
{% load staticfiles %}
二，拼静态文件的路径
例如在static目录下有image目录，目录下有a.jpg
这样子拼路径
{% static 'image/a.jpg'}



第[63]题_01-数据库__mongodb
02-数据行的操作.txt
...
删除数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
》删除多个
db.集合名称.remove(条件)
》删除一个
db.集合名称.remove(条件,{justOne:true})



第[64]题_01-数据库__redis
01-安装与配置.txt
...
如何查看redis是否启动
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
ps aux|grep redis
[root@192 ~]# ps aux|grep redis



第[65]题_04-版本控制__01-git
01-入门.txt
...
冲突的预防
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
确保当前自己的版本是最新的版本
只提交属于自己一个人的代码
如果要提交的是多人合作的文件
就更更新文件，然后再提交



第[66]题_03-django__04-dj2vdo
191024视图.txt
...
视图给模板传递参数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
render(request, 模板名, 字典)



第[67]题_01-数据库__mongodb
01-增删改查.txt
...
查看当前全部的数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
两种查询办法：
> show databases
> show dbs



第[68]题_06-前端__html
01-html基本.txt
...
html的基本结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<!DOCTYPE html>
<html lang="en">
    <head>            
        <meta charset="UTF-8">
        <title>网页标题</title>
    </head>
    <body>
          网页显示内容
    </body>
</html>



第[69]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
让当前的线程全部执行完毕后
主线程再进行下一条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
线程对象.join（）
例子：
t.join()



第[70]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2解压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bunzip2 压缩文件



