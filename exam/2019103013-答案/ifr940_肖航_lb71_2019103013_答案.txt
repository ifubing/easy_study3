
第[1]题_01-数据库__redis
04-string数据类型.txt
...
修改classname的值为pythonOne
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> set classname pythonOne



第[2]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
length过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|length }}
效果
获取数据的长度



第[3]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转路径-不带参数的反转
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》使用前记得确保导入了
from django.shortcuts import reverse
》格式
reverse(“命名空间：别名”）
reverse（“别名”）



第[4]题_03-django__04-dj2vdo
191024模板.txt
...
遍历容器无数据时的显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% for 临时变量 in 容器 %}
 	临时变量
｛% empty %}
无数据
｛% endfor %｝



第[5]题_01-数据库__mongodb
04-聚合.txt
...
分组
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.aggregate({_id:"$字段名"})
例子：按照classname的值来进行分组
> db.colc.aggregate({$group:{_id:'$classname'}})
{ "_id" : "java" }
{ "_id" : "php" }
{ "_id" : "python02" }
{ "_id" : "python" }
{ "_id" : null }
>
例子：按照classname的值来进行分组并统计人数
> db.colc.aggregate({$group:{_id:'$classname',num:{$sum:1}}})
{ "_id" : "java", "num" : 1 }
{ "_id" : "php", "num" : 1 }
{ "_id" : "python02", "num" : 1 }
{ "_id" : "python", "num" : 1 }
{ "_id" : null, "num" : 2 }
>
例子：分组统计小组人数，统计年龄平均值
> db.one.aggregate({$group:{_id:"$class",count:{$sum:1},pjnl:{$avg:"$age"}}})
{ "_id" : "php", "count" : 1, "pjnl" : 86 }
{ "_id" : "python", "count" : 2, "pjnl" : 28 }
例子：分组并得到最小值
> db.one.aggregate({$group:{_id:'$gender', minage:{$avg:'$age'}}})
{ "_id" : 1, "minage" : 52 }
{ "_id" : 0, "minage" : 38 }
>   



第[6]题_01-数据库__mongodb
03-查询.txt
...
逻辑运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
与，｛键1：值1， 键2：值2｝ 
或， ｛$or：[{},{}]｝
例子：
找年龄为19岁或者班级为java班的数据
db.colc.find({$or:[{age:19},{classname:"java"}]})
找年龄大于16岁或者班级为java班的数据
db.colc.find({$or:[{age:{$gt:16}},{classname:"java"}]})



第[7]题_01-数据库__mongodb
01-增删改查.txt
...
查看当前正在使用的数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> db
one



第[8]题_02-爬虫__requests爬虫
01-发起请求.txt
...
使用代理发起请求
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
request.get(网址，proxies=代理字典)
代理字典的格式：
{"协议"："ip：端口""}
例如：
{"http":"http://12.34.56.01:8000", "https":"https://12.34.56.01:8000"}



第[9]题_01-数据库__mysql
03-数据表的操作.txt
...
重命名表名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
rename table 原表名 to 新表名
例子：
rename table student to pistudent;



第[10]题_04-版本控制__01-git
01-入门.txt
...
合并分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git merge 另一个分支名称
例子：
一，切换到接收分支
git checkout 接收分支
$ git checkout master
二，接收分支合并数据
》接收dev分支的代码
git merge dev
》接收zhaoyun分支的代码
git merge zhaoyun



第[11]题_01-数据库__mysql
05-查询.txt
...
查指定的字段，并且控制表头名称
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select 字段1 as 表头1，字段n as 表头n from 表名；
例子：
select name as 姓名, age as 年龄 from student;



第[12]题_01-数据库__mysql
05-查询.txt
...
查询结果消除重复
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select distinct 字段 from 表名;
例子：
select distinct gender from student;



第[13]题_04-版本控制__01-git
01-入门.txt
...
查看分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
$ git branch



第[14]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
gzip解压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
gunzip 被压缩的文件



第[15]题_01-数据库__redis
04-string数据类型.txt
...
获取classname对应的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> get classname



第[16]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
模板过滤器的使用格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{{ 模块变量 | 过滤器:参数 }}
说明：
关于参数
有的过滤器是不带参数的
如果有参数，最多只会接收一个参数



第[17]题_01-数据库__redis
01-安装与配置.txt
...
如何查看redis是否启动
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
ps aux|grep redis
[root@192 ~]# ps aux|grep redis



第[18]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应内容
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一：string类型的结果
响应对象.text
方式二：bytes数据类型
响应对象.content



第[19]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
列出5个python标准库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
os datetime sys re math time random



第[20]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取请求头
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.request.headers



第[21]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
退出虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
deactivate



第[22]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
让当前的线程全部执行完毕后
主线程再进行下一条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
线程对象.join（）
例子：
t.join()



第[23]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
队列中的等待
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
队列.join()
可以让任务没有完成的队列，阻塞



第[24]题_01-数据库__redis
08-zset数据类型.txt
...
删除z1键里的两个成员two,three
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zrem z1 two three



第[25]题_03-django__04-dj2vdo
191024模板.txt
...
if标签基本用法
if...else...二路分支的格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% if 条件 %}
成立时显示
{% else %}
不成立时显示
{% endif %}
关于条件：
可以是比较大小，判断等于，成员运算，等等



第[26]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
往线程队列中存入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.put(数据)
说明：
如果队列满了，会阻塞
补充：
队列.put(数据，block=False)
队列如果满了，就会报一个错误



第[27]题_01-数据库__mysql
05-查询.txt
...
模糊查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号：
like，模糊查询关键词
%，代表任意多个任意字符
_，代表一个任意字符
例子：
查询name以赵字开头的
select * from student where name like '赵%';
查询name是两个字组成的
select * from student where name like '__';



第[28]题_01-数据库__redis
04-string数据类型.txt
...
一次性设置多个键值
name,zs
age,18
gender,ture
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> mset name zs age 18 gender true



第[29]题_01-数据库__mysql
03-数据表的操作.txt
...
创建数据表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
create table 表名（字段 类型 约束）
示例：
》创建一个表，主键primary key， 自增长 auto_increment
create table student(id int primary key auto_increment);
》删掉它
drop table student;
》换个姿式再创建一次，不允许为空 not null
create table student(
id int auto_increment primary key,
name varchar(20) not null
);
》再删掉
drop table student;
》再创建，default 0
create table student(
id int auto_increment primary key,
name varchar(20) not null,
age int not null,
gender bit default 1,
address varchar(20),
isDelete bit default 0
);



第[30]题_01-数据库__redis
06-python连redis.txt
...
获取所有的键
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
连接对象.keys()



第[31]题_06-前端__html
04-表单.txt
...
表单标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<form action="" method="get" enctype="multipart/form-data"></form>
说明：
如果数据需要提交到某个网址需要使用表单标签



第[32]题_01-数据库__redis
08-zset数据类型.txt
...
获取z1键中数据three的权值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zscore z1 three



第[33]题_01-数据库__mongodb
02-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.update(查找条件，修改内容，[{multi:true}])
情况一：查到数据，完全修改
例子：这种效果会把查到的结果完全的替代为修改的内容
查找姓名为zs的数据行，把整个数据修改年龄为20
> db.colc.update({name:"zs"},{age:20})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
>   
情况二：查到数据，保留修改（只修改指定的字段）
例子，查找班级为python的数据，把年级改为2
> db.colc.update({classname:"python"},{$set:{grade:2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
格式：
要修改的内容
{$set:{要修改的键：要修改的值}}



第[34]题_03-django__04-dj2vdo
191024模板.txt
...
{% with persons.0 as zs %}
<p> {{ zs }} </p>
{% endwith %}
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[35]题_06-前端__html
04-表单.txt
...
input控件的各种类型
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
<input type="类型">
例子：
<input type="text">
分类：
type="text" 定义单行文本输入框
type="password" 定义密码输入框
type="radio" 定义单选框
type="checkbox" 定义复选框
type="file" 定义上传文件
type="submit" 定义提交按钮
type="reset" 定义重置按钮
type="button" 定义一个普通按钮
type="image" 定义图片作为提交按钮，用src属性定义图片地址
type="hidden" 定义一个隐藏的表单域，用来存储值
value属性 定义表单元素的值
name属性 定义表单元素的名称，此名称是提交数据时的键名



第[36]题_03-django__04-dj2vdo
1920211530综合.txt
...
pycharm创建django项目
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，New project>django
二，设置路径，虚拟环境，等



第[37]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
4、字典如何删除键和合并两个字典
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
dic={'name':'alex','age':18,'sex':'female'}
del dic['sex']
print(dic)  
# {'name': 'alex', 'age': 18}
dic1={'sex':'female'}
dic.update(dic1)
print('更新后的dic：',dic)   
# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}



第[38]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bzip2 文件1 文件n
被压缩文件会消失，新生成的压缩文件以.bz2结尾
单个文件被压缩，并不会合并成一个压缩包
不可以压缩目录



第[39]题_03-django__04-dj2vdo
1920211530综合.txt
...
ALLOWED_HOSTS的功能
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
配置中ALLOWED_HOSTS的功能
只有列表中的ip才可以访问



第[40]题_06-前端__html
05-表格.txt
...
表格的基本格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<table>
    <thead>
    <tr><th>序号</th><th>姓名</th></tr>
    </thead>
    <tbody>
    <tr><td>1</td><td>张三</td></tr>
    </tbody>
</table>
说明：table的属性
border属性 定义表格的边框，设置值是数值
cellpadding属性 定义单元格内容与边框的距离，设置值是数值
cellspacing属性 定义单元格与单元格之间的距离，设置值是数值
align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right
说明：tr代表一行，td和th代表单元格
<tr>标签：定义表格中的一行
<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，
<thead>标签，代表表头
<tbody>标签，代表了表格的主体
注意：单元格的属性
align 设置单元格中内容的水平对齐方式,设置值有：left | center | right
valign 设置单元格中内容的垂直对齐方式 top | middle | bottom
colspan 设置单元格水平合并，设置值是数值
rowspan 设置单元格垂直合并，设置值是数值



第[41]题_02-爬虫__解析库
01-xpath解析.txt
...
从选取到的一堆节点中拿到指定索引的节点对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
办法：利用索引
例子：//a[1]
注意：起始值为1



第[42]题_01-数据库__mongodb
01-增删改查.txt
...
查看当前全部的数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
两种查询办法：
> show databases
> show dbs



第[43]题_01-数据库__redis
04-string数据类型.txt
...
设置name键对应的值zgl，5秒钟过期
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> setex name 5 zgl



第[44]题_04-版本控制__01-git
01-入门.txt
...
工作区的内容恢复为修改前的内容
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git checkout -- 文件名
例子：
。让所有的内容变为修改前
$ git checkout -- .
。让a.py变为修改前
$ git checkout -- a.py
图例：
https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70



第[45]题_01-数据库__redis
08-zset数据类型.txt
...
删除z1键中权值在4到10范围的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zremrangebyscore z1 4 10



第[46]题_01-数据库__mysql
05-查询.txt
...
范围查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
关键词：
in(值1，值n)			不连续范围内
between...and...	连续范围内
例子：
查询id值为1,3,6的学生
select * from student where id in (1,3,6);
查询id值在2到8之间的学生
select * from student where id between 2 and 8;



第[47]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程锁的定义与使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
定义
import threading
生成线程锁对象
锁对象 = threading.Lock()
上锁
锁对象.acquire()
解锁
锁对象.release()



第[48]题_03-django__02-模板
02-模板语言.txt
...
在模板页中如何加载静态文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，加载模板的配置
{% load staticfiles %}
二，利用配置完成静态路径的拼接
如果有个图片存放在
项目目录/static/image/a.jpg
那么这样子拼路径
{% static 'image/a.jpg'}



第[49]题_02-爬虫__requests爬虫
01-发起请求.txt
...
发起一个post请求
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
requests.post(url, params=参数字典)



第[50]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
一行代码实现1--100之和
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
s=sum(range(101))
print(s)  



第[51]题_03-django__04-dj2vdo
191024模板.txt
...
去除html标签中的空白字符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% spaceless %}
html代码
{% endspaceless %}
效果：
会把html代码中的空白，换行等符号去掉，最后形成一行
单词解释：
space，空格
less，减少



第[52]题_01-数据库__redis
05-键命令.txt
...
设置键name的过期时间为6秒
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> expire name 6



第[53]题_01-数据库__mongodb
03-查询.txt
...
范围运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
在， $in
不在， $nin
例子：查询年龄在 16 19 22 岁的
db.colc.find({age:{$in:[16,19,22]}})



第[54]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
join过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|join:"/" }}
效果：
value容器的成员以：右边的符号进行连接



第[55]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应网址
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.url



第[56]题_01-数据库__redis
06-list数据类型.txt
...
取键名lis的数据
取0号到2号索引的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrange lis 0 2



第[57]题_01-数据库__redis
05-键命令.txt
...
删除多个键值对
删除stuname和classname两组键值对
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> del stuname classname



第[58]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
lower与upper过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|lower }}
效果：
把数据全部变为小写
例子：
{{ value|upper}}
效果：
把数据全部转变为大写



第[59]题_01-数据库__mysql
02-数据库操作.txt
...
查看当前选中的是哪个数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
select database();



第[60]题_01-数据库__redis
06-python连redis.txt
...
添加string类型的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
连接对象.set(键，值)



第[61]题_04-版本控制__02-github
01-操作.txt
...
生成公钥与私钥
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
命令：
ssh-kengen
效果：
在提示的路径上会有公钥与私钥生成
公钥配到网上
私钥留在电脑



第[62]题_01-数据库__redis
08-zset数据类型.txt
...
获取z1键里权值在1到5范围的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zrangebyscore z1 1 5



第[63]题_01-数据库__mysql
05-查询.txt
...
查询中的比较运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号：
等于 =
大于 >
小于 <
大于等于 >=
小于等于 <=
不等于 !=
例子：
查询gender字段不为0的数据
select * from student where gender != 0;



第[64]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应对象的默认解码格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.encoding



第[65]题_01-数据库__mongodb
03-查询.txt
...
投影
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
功能：显示期望的字段
用法：
find(条件字典，投影字典)
投影字典的说明：
希望显示的字段，设置为1
如果不希望显示_id，设置它为0
例子：
查询结果中，只显示classname字段的值
db.getCollection('colc').find({},{classname:1})
db.colc.find({},{classname:1})
例子：
查询结果中，只显示classname字段的值，不显示_id的内容
db.getCollection('colc').find({},{classname:1, _id:0})
例子：
查找年龄在79，16岁的数据，只显示name，age
db.colc.find({age:{$in:[79,16]}},{name:1, age:1, _id:0})



第[66]题_06-前端__html
02-基本标签.txt
...
图象标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
<img src="images/pic.jpg" alt="产品图片" title="鸣人"/>
说明：
<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：
src属性 定义图片的引用地址
alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。
title属性，鼠标移动到图片上时显示的文字



第[67]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
<div class="nam">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
import re
str='<div class="nam">中国</div>'
res=re.findall(r'<div class=".*">(.*?)</div>',str)
print(res)       ==》      ['中国']



第[68]题_06-前端__html
02-基本标签.txt
...
水平线标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<hr>



第[69]题_01-数据库__mongodb
05-索引.txt
...
查看当前集合的索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.getIndexes()
例子：
> db.stu.getIndexes()
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_",
                "ns" : "dbtwo.stu"
        }
]
>



第[70]题_01-数据库__redis
09-hash数据类型.txt
...
添加单个哈希字段值对
设置zs键为哈希，存值
字段height 170
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hset 键 字段1 值1
例子：
hset zs height 170



