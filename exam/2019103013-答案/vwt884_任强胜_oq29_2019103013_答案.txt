
第[1]题_01-数据库__mongodb
03-查询.txt
...
比较运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号有：
等于，年龄等于18  ｛age:18｝
小于，$lt， less than  比如，年龄小于18 {age:{$lt:18}}
大于，$gt,  greater than
小于等于，$lte  less than equal
大于等于，$gte
不等于， $ne   
例子：
db.colc.find({age:{$gt:19}})



第[2]题_06-前端__html
03-列表.txt
...
有序列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<ol>
    <li>列表文字一</li>
    <li>列表文字二</li>
    <li>列表文字三</li>
</ol>
说明：
在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。



第[3]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-缺省插入
只插入部分字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名（字段1，字段n） values(值1，值n);
例子：
insert into student (name) values('ggyy');



第[4]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
join过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|join:"/" }}
效果：
value容器的成员以：右边的符号进行连接



第[5]题_04-版本控制__01-git
01-入门.txt
...
工作区的内容恢复为修改前的内容
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git checkout -- 文件名
例子：
。让所有的内容变为修改前
$ git checkout -- .
。让a.py变为修改前
$ git checkout -- a.py
图例：
https://img-blog.csdnimg.cn/20191015150857674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lmdWJpbmc=,size_16,color_FFFFFF,t_70



第[6]题_03-django__04-dj2vdo
1920211530综合.txt
...
DEBUG模式的功能
位于settings.py中的DEBUG的功能
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
1，开启后修改django代码并保存后，服务器会重启
2，如果项目中出现了错误，会在浏览器与控制台打印错误
3，上线以后需要设置把DEBUG=False
4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS



第[7]题_01-数据库__mysql
03-数据表的操作.txt
...
修改表中字段-改字段名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
alter table 表名 change 原字段名 新字段名 类型 约束;
例子：
alter table pistudent change score defen tinyint ;



第[8]题_02-爬虫__解析库
02-python操作xpath.txt
...
利用Element对象的xpath方法取值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
返回值 = Element对象.xpath(字符串xpath选择语句)
注意：
返回值是列表类型
如果返回值是一个节点
那么该节点，仍然可以继续使用xpath方法



第[9]题_01-数据库__redis
06-list数据类型.txt
...
从右侧插入数据
往lis键右侧插入数据 
a4  
a5
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> rpush lis a4 a5



第[10]题_02-爬虫__解析库
01-xpath解析.txt
...
获取倒数第二个节点
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
//mon[last()-1]



第[11]题_02-爬虫__解析库
02-python操作xpath.txt
...
xpath的使用套招
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，实例化生成一个element对象
from lxml import etree
obj = etree.HTML(字符串html内容)
二，对象.xpath（xpath表达式)
res = obj.xpath(表达式)
# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法


第[12]题_03-django__04-dj2vdo
191024模板.txt
...
{% with persons.0 as zs %}
<p> {{ zs }} </p>
{% endwith %}
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[13]题_01-数据库__mongodb
03-查询.txt
...
去重
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.distinct(去重的字段)
例子：
查询所有的班级名称
db.colc.distinct("classname")
找出年龄大于17岁的，班级名称
db.colc.distinct("classname", {age:{$gt:17}})



第[14]题_04-版本控制__02-github
01-操作.txt
...
生成公钥与私钥
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
命令：
ssh-kengen
效果：
在提示的路径上会有公钥与私钥生成
公钥配到网上
私钥留在电脑



第[15]题_01-数据库__redis
06-python连redis.txt
...
添加string类型的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
连接对象.set(键，值)



第[16]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
10、python内建数据类型有哪些
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict



第[17]题_03-django__04-dj2vdo
191024模板.txt
...
if标签基本用法
if...else...二路分支的格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% if 条件 %}
成立时显示
{% else %}
不成立时显示
{% endif %}
关于条件：
可以是比较大小，判断等于，成员运算，等等



第[18]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
进入虚拟环境所在的目录
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
cdvirtualenv



第[19]题_06-前端__html
01-html基本.txt
...
载入其它样式文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<link rel="stylesheet" href="m.css">



第[20]题_01-数据库__redis
09-hash数据类型.txt
...
获取一个哈希数据某个字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hget 键 字段
例子：获取zs键对应的哈希数据中height字段的值
hget zs height



第[21]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
列出所有虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
lsvirtualenv



第[22]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应状态码
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.status_code



第[23]题_01-数据库__redis
06-python连redis.txt
...
删除键name,键age
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
连接对象.delete("name", "age")



第[24]题_02-爬虫__解析库
01-xpath解析.txt
...
基本节点的选取
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
nodename	选取此节点的所有子节点。
/	默认情况是从根节点选取。如果当前是其它节点，以选中节点往下。
//	从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。
.	选取当前节点。
..	选取当前节点的父节点。
@	选取属性。



第[25]题_01-数据库__mongodb
05-索引.txt
...
取消一个索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.dropIndex(索引名称)
例子：
> db.stu.dropIndex("name_1")
{ "nIndexesWas" : 2, "ok" : 1 }
注意：
删除索引的时候要先查一下索引对应的名称
要用‘索引名称’来进行删除



第[26]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
插入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》插入一条数据
例子：
res = 集合对象.insert_one({"name":"悟空2", "age":500, "skill":"龟派气功"})
》插入多条数据
例子：
集合对象.insert_many(列表包字典)



第[27]题_01-数据库__mysql
02-数据库操作.txt
...
删除数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
drop database 数据库名;
例子：
drop database pyhui;



第[28]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
如何安装requests模块
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
pip install requests



第[29]题_01-数据库__redis
06-python连redis.txt
...
获得连接对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
import redis
conn = redis.StrictRedis(host=ip地址，port=端口, db=0)
conn代表的是某一个数据库的连接对象



第[30]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
random过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|random }}
效果：
从value中随机出一个来



第[31]题_01-数据库__mysql
05-查询.txt
...
分组与对已分的组进行过滤
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
group by 列 having 条件
意义：
对某一个列进行分组，同时按照某个条件对组进行过滤
例子：
select gender,count(*) from student group by gender having gender is not null;



第[32]题_03-django__03-配置
01-基本配置.txt
...
静态目录的配置
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》一，新建一个static目录
》二，配置这个目录 
在settings.py中 
STATICFILES_DIR = [os.path.join(BASE_DIR, 'static')]  # 静态目录的高以置



第[33]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
伪造成浏览器在访问
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
通过在请求头中添加user-agent来伪造成浏览器



第[34]题_06-前端__html
02-基本标签.txt
...
换行标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
标签：
<br>
或者
<br />



第[35]题_06-前端__html
02-基本标签.txt
...
水平线标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<hr>



第[36]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
修改
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》修改一条
集合对象.update_one({条件字典})
》修改多条
集合对象.update_many({条件字典})
例子：
res = 集合对象.update_many({"gender":True},{"$set":{"skill":"无言"}})



第[37]题_02-爬虫__解析库
01-xpath解析.txt
...
获取第二个节点
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//mon[2]
//mon[position()=2]



第[38]题_01-数据库__mysql
05-查询.txt
...
查指定的字段，并且控制表头名称
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select 字段1 as 表头1，字段n as 表头n from 表名；
例子：
select name as 姓名, age as 年龄 from student;



第[39]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
列出5个python标准库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
os datetime sys re math time random



第[40]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
first与last过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|first }}
{{ 数据|last }}
效果：
first用于拿到数据中第一个成员
last用于拿到数据中最后一个成员



第[41]题_01-数据库__redis
08-zset数据类型.txt
...
往z1键中添加内容，权重与值分别为
5 five 
3 three 
2 two 
11 eleven
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zadd z1 5 five 3 three 2 two 11 eleven



第[42]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
tar解压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》解压缩gzip方式的压缩包
tar xvfz 包名称.tar.gz
》解压缩bzip2方式的压缩包
tar xvfg 包名称.tar.bz2



第[43]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2压缩
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bzip2 文件1 文件n
被压缩文件会消失，新生成的压缩文件以.bz2结尾
单个文件被压缩，并不会合并成一个压缩包
不可以压缩目录



第[44]题_01-数据库__redis
02-远程连接.txt
...
python远程连接redis的配置
如何让windows的python可以连接上centos的redis服务
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
1，centos关闭防火墙对6379端口的保护
2，redis配置，bind项目注释掉（默认: bind 127.0.0.1)
3, redis配置，保护模式关闭（protected-mode no）



第[45]题_01-数据库__redis
04-string数据类型.txt
...
获取多个键对应的值
获取name,age,gender键对应的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> mget name age gender



第[46]题_01-数据库__mysql
02-数据库操作.txt
...
查看所有的数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
show databases;



第[47]题_02-爬虫__解析库
01-xpath解析.txt
...
获取节点的文本
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
节点/text()



第[48]题_03-django__03-配置
02-模块与功能.txt
...
上传图片的目录配置
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，新建目录，用于存放用户上传的图片
例如，在static目录下创一个media目录
二，配置目录
在settings.py中配置
# 上传文件的目录保存
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')



第[49]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
python中断言方法举例
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
a=2
assert(a>1)
print('断言成功，程序继续向下执行')
b=2
assert(b>3)
print('断言失败，程序报错') #AssertionError　　



第[50]题_01-数据库__mongodb
04-聚合.txt
...
排序
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：按照年龄进行升序
> db.one.aggregate({$sort:{age:1}})
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
>
例子：按照主键降序显示
> db.one.aggregate({$sort:{_id:-1}})
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
>



第[51]题_01-数据库__redis
01-安装与配置.txt
...
默认的端口号
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
6379



第[52]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应网址
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.url



第[53]题_01-数据库__mongodb
03-查询.txt
...
一个条件的查找
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.find(条件)



第[54]题_01-数据库__redis
01-安装与配置.txt
...
默认的数据库数量
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
16
取值范围是0-15



第[55]题_02-爬虫__解析库
01-xpath解析.txt
...
从选取到的一堆节点中拿到指定索引的节点对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
办法：利用索引
例子：//a[1]
注意：起始值为1



第[56]题_01-数据库__redis
09-hash数据类型.txt
...
获取一共有多少个键值对
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hlen 键
例子：获取zs一共有多少个字段
hlen zs



第[57]题_01-数据库__mongodb
03-查询.txt
...
逻辑运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
与，｛键1：值1， 键2：值2｝ 
或， ｛$or：[{},{}]｝
例子：
找年龄为19岁或者班级为java班的数据
db.colc.find({$or:[{age:19},{classname:"java"}]})
找年龄大于16岁或者班级为java班的数据
db.colc.find({$or:[{age:{$gt:16}},{classname:"java"}]})



第[58]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
模板过滤器的使用格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{{ 模块变量 | 过滤器:参数 }}
说明：
关于参数
有的过滤器是不带参数的
如果有参数，最多只会接收一个参数



第[59]题_01-数据库__mysql
03-数据表的操作.txt
...
创建数据表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
create table 表名（字段 类型 约束）
示例：
》创建一个表，主键primary key， 自增长 auto_increment
create table student(id int primary key auto_increment);
》删掉它
drop table student;
》换个姿式再创建一次，不允许为空 not null
create table student(
id int auto_increment primary key,
name varchar(20) not null
);
》再删掉
drop table student;
》再创建，default 0
create table student(
id int auto_increment primary key,
name varchar(20) not null,
age int not null,
gender bit default 1,
address varchar(20),
isDelete bit default 0
);



第[60]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
如何启动一个线程
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》导入线程模块
import threading
》创建线程对象
t = threading.Thread(target=函数体，args=(参数,))
》让线程对象运行起来
t.start()
明确主线程与子线程的执行与等待关系



第[61]题_02-爬虫__解析库
01-xpath解析.txt
...
选取mon标签中class属性值中包含m的
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//mon[contains(@class,"m")]



第[62]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应内容
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一：string类型的结果
响应对象.text
方式二：bytes数据类型
响应对象.content



第[63]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程锁的定义与使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
定义
import threading
生成线程锁对象
锁对象 = threading.Lock()
上锁
锁对象.acquire()
解锁
锁对象.release()



第[64]题_03-django__04-dj2vdo
191022路由url.txt
...
命名空间的使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
为了防止多个别名导致的冲突，在总路由定义命名空间
一，总路由定义命名空间
path(路径，include('应用名.urls', namespace='空间名'))
例如：path('cms1/', include('cms.urls', namespace='cms1'))
二，在应用的urls.py中定义一个变量
app_name = 应用名
例如：app_name=book



第[65]题_06-前端__html
04-表单.txt
...
    ...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[66]题_04-版本控制__02-github
01-操作.txt
...
简洁的查看log日志
一行显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
$ git log --pretty=oneline



第[67]题_06-前端__html
02-基本标签.txt
...
图象标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
<img src="images/pic.jpg" alt="产品图片" title="鸣人"/>
说明：
<img>标签可以在网页上插入一张图片，它是独立使用的标签，它的常用属性有：
src属性 定义图片的引用地址
alt属性 定义图片加载失败时显示的文字，搜索引擎会使用这个文字收录图片、盲人读屏软件会读取这个文字让盲人识别图片，所以此属性非常重要。
title属性，鼠标移动到图片上时显示的文字



第[68]题_02-爬虫__解析库
01-xpath解析.txt
...
取notbook标签中name值包含m的标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//notbook[contains(@name,'m')]



第[69]题_01-数据库__redis
05-键命令.txt
...
查看键name的剩余时间
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> ttl name



第[70]题_01-数据库__mongodb
03-查询.txt
...
范围运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
在， $in
不在， $nin
例子：查询年龄在 16 19 22 岁的
db.colc.find({age:{$in:[16,19,22]}})



