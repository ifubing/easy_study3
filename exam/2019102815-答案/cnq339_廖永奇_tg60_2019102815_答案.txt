
第[1]题_01-数据库__mongodb
02-数据行的操作.txt
...
添加数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.insert(字典)
例子：
> db.cola.insert({"name":"zs", "age":18})
WriteResult({ "nInserted" : 1 })
注意：
关于集合名称，如果操作的是一个不存在的集合
mongo会自动创建



第[2]题_03-django__04-dj2vdo
1920211530综合.txt
...
捕捉路径上的参数，传递给视图，关键词方式传参，使用path函数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：假设路径的格式
path('book/<名称1>/<名称2>/', 视图）
对应的视图需要这样定义：
def 视图名（request， 名称1， 名称2）：
注意，视图中的形参要与path里尖括号里名称保持一致
视图中就可以得到数据



第[3]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
数据表student有id,name,score,city字段，其中name中的名字可有重复，需要消除重复行,请写sql语句
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
select distinct name from student



第[4]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
<div class="nam">中国</div>，用正则匹配出标签里面的内容（“中国”），其中class的类名是不确定的
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
import re
str='<div class="nam">中国</div>'
res=re.findall(r'<div class=".*">(.*?)</div>',str)
print(res)       ==》      ['中国']



第[5]题_01-数据库__redis
06-list数据类型.txt
...
从右侧插入数据
往lis键右侧插入数据 
a4  
a5
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> rpush lis a4 a5



第[6]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
从线程队列中取出数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.get()
说明：
队列如果是空的，会阻塞
补充：
队列.get(block=False)
队列如果空了，就会报一个错误



第[7]题_03-django__04-dj2vdo
191022路由url.txt
...
给一个url起一个别名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
path('login/', views.login, name='login')



第[8]题_03-django__03-配置
01-基本配置.txt
...
模板页中如何使用静态文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，导入静态配置
{% load staticfiles %}
二，拼静态文件的路径
例如在static目录下有image目录，目录下有a.jpg
这样子拼路径
{% static 'image/a.jpg'}



第[9]题_03-django__04-dj2vdo
191024视图.txt
...
视图给模板传递参数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
render(request, 模板名, 字典)



第[10]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
进入虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式
workon 环境名
例子
workon dailyfresh



第[11]题_04-版本控制__01-git
01-入门.txt
...
切换分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
$ git checkout 分支名称
例子：
$ git checkout dev



第[12]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
获取当前代码中所有的线程对象，得到一个列表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
threading.enumerate()
[<_MainThread(MainThread, started 22116)>, <Thread(Thread-1, started 16752)>, <Thread(Thread-2, started 14352)>] 总的



第[13]题_01-数据库__mysql
05-查询.txt
...
逻辑运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号：
与 and
或 or
非 not 
例子：
查询id大于3并且gender等于0的
select * from student where id>3 and gender=0;



第[14]题_03-django__04-dj2vdo
1920211530综合.txt
...
DEBUG模式的功能
位于settings.py中的DEBUG的功能
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
1，开启后修改django代码并保存后，服务器会重启
2，如果项目中出现了错误，会在浏览器与控制台打印错误
3，上线以后需要设置把DEBUG=False
4，如果 DEBUG设置为False，必需设置ALLOWED_HOSTS



第[15]题_01-数据库__mysql
04-数据行的操作.txt
...
删除指定的数据行
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
delete from 表名 where 条件；
例子：
delete from student where id>4;



第[16]题_03-django__02-模板
02-模板语言.txt
...
在模板页中如何加载静态文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，加载模板的配置
{% load staticfiles %}
二，利用配置完成静态路径的拼接
如果有个图片存放在
项目目录/static/image/a.jpg
那么这样子拼路径
{% static 'image/a.jpg'}



第[17]题_01-数据库__redis
05-键命令.txt
...
查看name键是否存在
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> exists name



第[18]题_04-版本控制__02-github
01-操作.txt
...
生成公钥与私钥
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
命令：
ssh-kengen
效果：
在提示的路径上会有公钥与私钥生成
公钥配到网上
私钥留在电脑



第[19]题_03-django__04-dj2vdo
191022路由url.txt
...
re_path的使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》格式：
re_path(正则式，视图）
注意：使用前确保re_path导入了
》导入，re_path的导入与path的导入在同一个位置
from django.urls import re_path
》使用
例如：匹配 127.0.0.1/
re_path(r"^$", views.article)
例如：匹配路径中的年份  127.0.0.1/list/2019
repath(r"^list/(?P<year>\d{4}/"), views.article_list)
例如：匹配路径中的月份   
re_path(r"list/(?P<month>\d{2}/"), views.article_list)



第[20]题_01-数据库__redis
07-set数据类型.txt
...
删除s1键中的数据zs
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> srem s1 zs



第[21]题_01-数据库__mongodb
03-查询.txt
...
查询，只拿一个
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.findOne(条件)



第[22]题_01-数据库__redis
09-hash数据类型.txt
...
一次获取哈希值中多个字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hmget 键 字段1 字段n
例子：获取zs的height字段值，weight字段值
hmget zs height weight



第[23]题_01-数据库__redis
09-hash数据类型.txt
...
添加多个哈希字段值对
设置ls键为哈希，存多个字段值对
字段height 177
字段weight 66
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hmset 键 字段1 值1 字段n 值n
例子：
hmset ls height 177 weight 66



第[24]题_01-数据库__redis
08-zset数据类型.txt
...
获取z1键里权值在1到5范围的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zrangebyscore z1 1 5



第[25]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
如何启动一个线程
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》导入线程模块
import threading
》创建线程对象
t = threading.Thread(target=函数体，args=(参数,))
》让线程对象运行起来
t.start()
明确主线程与子线程的执行与等待关系



第[26]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历基本使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 %}
临时变量
{% endfor %}
注意：
for中无continue与break
扩展：
forloop.counter	当前循环的索引值,从1开始
forloop.counter0	当前循环的索引值,从0开始
forloop.revcounter	当前循环的倒序索引值(以1结束)
forloop.revcounter0	当前循环的倒序索引值(以0结束)
forloop.first	当前循环是不是第一次循环(返回的是一个布尔值)
forloop.last	当前循环是不是最后一次循环(返回的是一个布尔值)
forloop.parentloop	本层循环的外层循环



第[27]题_01-数据库__redis
07-set数据类型.txt
...
获取s1键里的成员值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> smembers s1



第[28]题_01-数据库__redis
09-hash数据类型.txt
...
获取一个哈键的所有字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hkeys 键
例如：获取一个键名为zs的哈希数据中所有字段
hkeys zs



第[29]题_01-数据库__redis
08-zset数据类型.txt
...
删除z1键里的两个成员two,three
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zrem z1 two three



第[30]题_01-数据库__mongodb
03-查询.txt
...
每一页显示两个数据
第一页
db.集合名.find().skip(0).limit(2)
第二页
db.集合名.find().skip(2).limit(2)
第三页
db.集合名.find().skip(4).limit(2)
第四页
db.集合名.find().skip(6).limit(2)
（当前页码-1）*每页显示几个数据
第n页
db.集合名.find().skip((n-1)*2)
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[31]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
tar压缩格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》以gzip方式压缩并打包
tar cvfz 包名称.tar.gz 
》以bzip2的方式压缩并打包
tar cvfj 包名称.tar.bz2



第[32]题_01-数据库__mysql
05-查询.txt
...
查询中的比较运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号：
等于 =
大于 >
小于 <
大于等于 >=
小于等于 <=
不等于 !=
例子：
查询gender字段不为0的数据
select * from student where gender != 0;



第[33]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-缺省插入
只插入部分字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名（字段1，字段n） values(值1，值n);
例子：
insert into student (name) values('ggyy');



第[34]题_01-数据库__redis
05-键命令.txt
...
查看键name的剩余时间
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> ttl name



第[35]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
列表[1,2,3,4,5],请使用map()函数输出[1,4,9,16,25]
并使用列表推导式（[表达式 for 变量 in 列表]    或者  [表达式 for 变量 in 列表 if 条件]）提取出大于10的数，最终输出[16,25]
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
def square(x):
　　return x**2
res=map(square,[1,2,3,4,5])
res=[i for i in res if i>10]
print(res)



第[36]题_01-数据库__mongodb
03-查询.txt
...
排序
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
以某某键进行升序排序
查询结果.sort(｛键：1｝)
以某某键进行降序排序
查询结果.sort(｛键：-1｝)
例子：
查询所有的数据，以age升序排序
db.colc.find().sort({age:1})
查询所有的数据，以age降序排序
db.colc.find().sort({age:-1})



第[37]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-全列插入
全部字段的值都插入
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名 values(值1，值n)
例子：
insert into student values(0, 'pyhui',18);



第[38]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-插入多条数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);
例子：
insert into student(name) values('cat'), ('dog'),('mie');
说明：
括号，括号，括号
这样的方式传多个值



第[39]题_01-数据库__redis
05-键命令.txt
...
查看以na开头的键
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> keys na*



第[40]题_02-爬虫__解析库
02-python操作xpath.txt
...
xpath的使用套招
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，实例化生成一个element对象
from lxml import etree
obj = etree.HTML(字符串html内容)
二，对象.xpath（xpath表达式)
res = obj.xpath(表达式)
# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法


第[41]题_05-linux__01-压缩与解压缩.txt
01-操作.txt
...
bzip2压缩文件，同时要保留文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
bzip2 - k 文件1 文件n



第[42]题_01-数据库__mysql
04-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
update 表名 set 列1=值1，列2=值2 where 条件
例子：
update student set name='赵云',age=23 where id=3;
注意：
一定不要漏了where 条件，否则所有数据都被改掉



第[43]题_03-django__04-dj2vdo
191024模板.txt
...
遍历容器无数据时的显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% for 临时变量 in 容器 %}
 	临时变量
｛% empty %}
无数据
｛% endfor %｝



第[44]题_01-数据库__redis
04-string数据类型.txt
...
修改classname的值为pythonOne
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> set classname pythonOne



第[45]题_03-django__04-dj2vdo
191024模板.txt
...
字典遍历，同时得到键与值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{% for key, val in persion.items %}
key--val
{% endfor %}



第[46]题_01-数据库__redis
08-zset数据类型.txt
...
获取z1键中数据three的权值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zscore z1 three



第[47]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历，逆序遍历
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 reversed %}
临时变量
{% endfor %}



第[48]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
退出虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
deactivate



第[49]题_03-django__04-dj2vdo
191024模板.txt
...
高级模板变量取值与方法的调用
模板变量为列表，字典时，如何取成员
模板变量为对象时，如何调方法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
取值规则：
通过点来取值，例如：
字典.键， 列表.索引， 对象.属性取值
调方法规则：
模板变量.方法名  
注意，方法名后不用加括号
例如：
模板变量 stu_list 是一个列表，取列表的2号位
{{ stu_list.2 }}
例如：
模板变量 user 是一个对象，取它的name属性值
{{ user.name }}



第[50]题_01-数据库__redis
06-python连redis.txt
...
添加string类型的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
连接对象.set(键，值)



第[51]题_01-数据库__redis
06-list数据类型.txt
...
获取lis键中最后四个元素
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrange lis -4 -1



第[52]题_02-爬虫__requests爬虫
01-发起请求.txt
...
发起一个get请求，带上参数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
request.get(url, params=参数字典)
效果，会在url后拼上传递的参数
例如http://www.baidu.com/?name=zs&age=18
post请求同理



第[53]题_01-数据库__redis
06-list数据类型.txt
...
lis键中查找a
找到后从左向右删掉2个
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrem lis 2 a



第[54]题_01-数据库__redis
05-键命令.txt
...
删除多个键值对
删除stuname和classname两组键值对
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> del stuname classname



第[55]题_01-数据库__mongodb
01-增删改查.txt
...
查看当前正在使用的数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> db
one



第[56]题_03-django__04-dj2vdo
191024模板.txt
...
if标签基本用法
if...else...二路分支的格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% if 条件 %}
成立时显示
{% else %}
不成立时显示
{% endif %}
关于条件：
可以是比较大小，判断等于，成员运算，等等



第[57]题_01-数据库__redis
06-list数据类型.txt
...
往键lis里面数据a1的前面
添加数据m1
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> linsert lis before a1 m1



第[58]题_01-数据库__redis
08-zset数据类型.txt
...
删除z1键中权值在4到10范围的数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> zremrangebyscore z1 4 10



第[59]题_01-数据库__redis
09-hash数据类型.txt
...
删除整个哈希数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
del 键
例子：删掉键为zs的哈希数据
del zs



第[60]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程锁的定义与使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
定义
import threading
生成线程锁对象
锁对象 = threading.Lock()
上锁
锁对象.acquire()
解锁
锁对象.release()



第[61]题_04-版本控制__02-github
01-操作.txt
...
本地仓库推送到网上
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git push -u origin
例子：
git push -u origin



第[62]题_01-数据库__mysql
04-数据行的操作.txt
...
查询数据表中全部数据，查看全部字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select * from 表名;
例子：
select * from student;



第[63]题_01-数据库__redis
01-安装与配置.txt
...
如何启动服务端
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
redis-server 配置的地址
[root@192 ~]# redis-server /etc/redis/redis.conf



第[64]题_01-数据库__redis
06-python连redis.txt
...
获取所有的键
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
连接对象.keys()



第[65]题_01-数据库__redis
06-list数据类型.txt
...
取键名lis的数据
取0号到2号索引的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrange lis 0 2



第[66]题_04-版本控制__01-git
01-入门.txt
...
冲突的预防
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
确保当前自己的版本是最新的版本
只提交属于自己一个人的代码
如果要提交的是多人合作的文件
就更更新文件，然后再提交



第[67]题_02-爬虫__requests爬虫
01-发起请求.txt
...
发起请求，伪装为浏览器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
办法，发起请求时，在请求头中添加user-agent数据



第[68]题_01-数据库__mysql
02-数据库操作.txt
...
查看所有的数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
show databases;



第[69]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
谈下python的GIL
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
GIL 是python的全局解释器锁，同一进程中假如有多个线程运行，一个线程在运行python程序的时候会霸占python解释器（加了一把锁即GIL），使该进程内的其他线程无法运行，等该线程运行完后其他线程才能运行。
如果线程运行过程中遇到耗时操作，则解释器锁解开，使其他线程运行。所以在多线程中，线程的运行仍是有先后顺序的，并不是同时进行。
多进程中因为每个进程都能被系统分配资源，相当于每个进程有了一个python解释器，所以多进程可以实现多个进程的同时运行，缺点是进程系统资源开销大



第[70]题_01-数据库__mongodb
03-查询.txt
...
分页相关
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
limit(n)，显示n条
skip(m)，跳过m条
一般limit与skip同时使用，实现分页效果
例子：



