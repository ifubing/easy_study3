
第[1]题_03-django__04-dj2vdo
191024模板.txt
...
 
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[2]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
python实现列表去重的方法（先通过集合去重，在转列表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
li=[1,2,2,3,3]
a=set(li)
print (list(a))　



第[3]题_01-数据库__mysql
05-查询.txt
...
范围查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
关键词：
in(值1，值n)			不连续范围内
between...and...	连续范围内
例子：
查询id值为1,3,6的学生
select * from student where id in (1,3,6);
查询id值在2到8之间的学生
select * from student where id between 2 and 8;



第[4]题_01-数据库__redis
04-string数据类型.txt
...
一次性设置多个键值
name,zs
age,18
gender,ture
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> mset name zs age 18 gender true



第[5]题_01-数据库__mongodb
01-增删改查.txt
...
查看当前数据库中的全部集合（全部数据表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> show collections
spider
stu
tbtwo
>



第[6]题_02-爬虫__requests爬虫
03-经验小结.txt
...
如何获取下一页的URL地址
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，寻找URL规律，根据规律来拼下一页
二，通过"下一页"链接url来找



第[7]题_01-数据库__mongodb
03-查询.txt
...
每一页显示两个数据
第一页
db.集合名.find().skip(0).limit(2)
第二页
db.集合名.find().skip(2).limit(2)
第三页
db.集合名.find().skip(4).limit(2)
第四页
db.集合名.find().skip(6).limit(2)
（当前页码-1）*每页显示几个数据
第n页
db.集合名.find().skip((n-1)*2)
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[8]题_02-爬虫__解析库
01-xpath解析.txt
...
获取节点的文本
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
节点/text()



第[9]题_02-爬虫__解析库
01-xpath解析.txt
...
选取所有的notbook标签或者mon标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
//notbook | //mon



第[10]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
如何启动一个线程
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》导入线程模块
import threading
》创建线程对象
t = threading.Thread(target=函数体，args=(参数,))
》让线程对象运行起来
t.start()
明确主线程与子线程的执行与等待关系



第[11]题_02-爬虫__requests爬虫
01-发起请求.txt
...
使用代理发起请求
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
request.get(网址，proxies=代理字典)
代理字典的格式：
{"协议"："ip：端口""}
例如：
{"http":"http://12.34.56.01:8000", "https":"https://12.34.56.01:8000"}



第[12]题_01-数据库__mongodb
03-查询.txt
...
自定义查询，使用js语句来查
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
find({
	$where:function(){
		return this.age>19
	}
})
例子：
查找班级名称为python02的
db.colc.find({
	$where:function(){
		return this.classname == "python02"
	}
})
查找年龄小于19岁的
db.colc.find({
	$where:function(){
		return this.age < 19 
	}
})
关键点：
查询条件字典中以
$where 为键
值是一个js的匿名函数
只需要函数return 一个布尔值即可
如果布尔的结果为true 那么该行数据会被显示
通常在匿函中的this代表了当前数据行对象



第[13]题_01-数据库__redis
07-set数据类型.txt
...
往键s1里添加成员zs ls ww
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> sadd s1 zs ls ww



第[14]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应状态码
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.status_code



第[15]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
创建虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
mkvirtualenv 虚拟环境名
例子：
mkvirtualenv dailyfresh



第[16]题_01-数据库__mongodb
03-查询.txt
...
查询所有
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.find()



第[17]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
一行代码实现1--100之和
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
s=sum(range(101))
print(s)  



第[18]题_04-版本控制__01-git
01-入门.txt
...
查看分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
$ git branch



第[19]题_01-数据库__redis
09-hash数据类型.txt
...
一次获取哈希值中多个字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hmget 键 字段1 字段n
例子：获取zs的height字段值，weight字段值
hmget zs height weight



第[20]题_01-数据库__mysql
03-数据表的操作.txt
...
查看表结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
desc 表名;
desc student;



第[21]题_02-爬虫__requests爬虫
01-发起请求.txt
...
访问用户中心的办法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，请求头中带上cookies数据
request.get(网址，headers=字典)
备注，字典中存一个cookie的键值对
键是：Cookie
值就是类似于这样的字符串：uuid_tt_dd=10_28743412270-1569723942844-420746; dc_session_id=10_1569723942844.879679; 
二，get方法带上cookie参数,值是一个字典
格式：
response = request.get(url, headers=请求头字典, cookies=cookie字典)
字典的键是：uuid_tt_dd
值是：10_28743412270-1569723942844-420746
字典的完整形态类以于
{
'uuid_tt_dd'='10_28743412270-1569723942844-420746',
'dc_session_id'='10_1569723942844.879679'
}
三，使用session类
1，实例化一个对session类对象
2，让该对象去登陆网站，登陆成功对象便得到了cookie数据
3，让该对象去访问用户中心URL，访问时会带上cookie。所以可以得到正确的响应。
例子：
s = requests.session()
s.post(登陆url, params=参数字典)
res = s.get(用户中心url)



第[22]题_03-django__03-配置
02-模块与功能.txt
...
上传图片的目录配置
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，新建目录，用于存放用户上传的图片
例如，在static目录下创一个media目录
二，配置目录
在settings.py中配置
# 上传文件的目录保存
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')



第[23]题_02-爬虫__解析库
02-python操作xpath.txt
...
把一个html字符串转换为Element对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
Element对象 = etree.HTML(html字符串)
备注，Element对象具有xpath方法



第[24]题_01-数据库__mysql
03-数据表的操作.txt
...
重命名表名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
rename table 原表名 to 新表名
例子：
rename table student to pistudent;



第[25]题_03-django__04-dj2vdo
191024视图.txt
...
模板的渲染，
把模板文件的内容获取出来
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一：render_to_string
》导入
from django.template.loader import render_to_string
》在视图中使用
def index(request):
	html = render_to_string(模板名.html)
	return HttpResponse(html)
》说明
这个是render函数的基本，了解即可
方式二: render 
》导入
from django.shortcuts import render
》在视图中使用
def index(request):
	return render(request, 模板名.html)



第[26]题_04-版本控制__02-github
01-操作.txt
...
本地仓库与远程仓库产生一个关联
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git remote add origin 路径ssh的
例子：
git remote add origin git@github.com:ifubing/py1021.git



第[27]题_01-数据库__redis
06-python连redis.txt
...
python连redis需要安装的包
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
pip install redis



第[28]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
列出5个python标准库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
os datetime sys re math time random



第[29]题_04-版本控制__02-github
01-操作.txt
...
本地仓库推送到网上
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git push -u origin
例子：
git push -u origin



第[30]题_01-数据库__redis
09-hash数据类型.txt
...
删除哈希数据某一个字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hdel 键 字段
例子：删除zs的weight字段
hdel zs weight



第[31]题_01-数据库__redis
09-hash数据类型.txt
...
删除整个哈希数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
del 键
例子：删掉键为zs的哈希数据
del zs



第[32]题_02-爬虫__解析库
01-xpath解析.txt
...
获取标签内容为：下一页> 的a标签，取它的href值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//a[text()="下一页>"]/@href



第[33]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-插入多条数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);
例子：
insert into student(name) values('cat'), ('dog'),('mie');
说明：
括号，括号，括号
这样的方式传多个值



第[34]题_03-django__04-dj2vdo
1920211530综合.txt
...
ALLOWED_HOSTS的功能
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
配置中ALLOWED_HOSTS的功能
只有列表中的ip才可以访问



第[35]题_01-数据库__redis
01-安装与配置.txt
...
如何启动服务端
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
redis-server 配置的地址
[root@192 ~]# redis-server /etc/redis/redis.conf



第[36]题_02-爬虫__解析库
01-xpath解析.txt
...
选取某个节点，要求属性等于指定的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
//mon[@class='m2']



第[37]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
让当前的线程全部执行完毕后
主线程再进行下一条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
线程对象.join（）
例子：
t.join()



第[38]题_01-数据库__redis
06-list数据类型.txt
...
获取lis键中的所有元素
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrange lis 0 -1



第[39]题_01-数据库__redis
01-安装与配置.txt
...
如何查看redis是否启动
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
ps aux|grep redis
[root@192 ~]# ps aux|grep redis



第[40]题_04-版本控制__01-git
01-入门.txt
...
缓冲区的内容清除
清除缓冲区中记录的对某一个文件的修改
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git reset HEAD 文件名
例子：
git reset HEAD a.py
显示：
$ git reset HEAD a.py
Unstaged changes after reset:
M       a.py



第[41]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历，逆序遍历
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 reversed %}
临时变量
{% endfor %}



第[42]题_01-数据库__redis
09-hash数据类型.txt
...
获取一个哈希数据某个字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hget 键 字段
例子：获取zs键对应的哈希数据中height字段的值
hget zs height



第[43]题_04-版本控制__01-git
01-入门.txt
...
冲突的预防
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
确保当前自己的版本是最新的版本
只提交属于自己一个人的代码
如果要提交的是多人合作的文件
就更更新文件，然后再提交



第[44]题_01-数据库__mysql
03-数据表的操作.txt
...
往表中添加字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
alter table 表名 add 字段 类型 约束;
例子：
alter table pistudent add score int default 60;



第[45]题_01-数据库__redis
04-string数据类型.txt
...
往键名为name的值中添加内容2019
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> append name 2019



第[46]题_01-数据库__mongodb
01-增删改查.txt
...
创建集合（集合就是数据表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：创建一个名籽tbtwo的集合
> db.createCollection("tbtwo")
{ "ok" : 1 }



第[47]题_02-爬虫__解析库
02-python操作xpath.txt
...
导入etree
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
from lxml import etree



第[48]题_01-数据库__mysql
03-数据表的操作.txt
...
查看建表语句
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
show create table 表名;
例子：
show create table student;



第[49]题_02-爬虫__requests爬虫
01-发起请求.txt
...
发起请求，伪装为浏览器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
办法，发起请求时，在请求头中添加user-agent数据



第[50]题_01-数据库__mysql
05-查询.txt
...
判空查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
关键词：
is null			判断为空
is not null		判断非空
例子：
查询gender值为null的数据
select * from student where gender is null;



第[51]题_01-数据库__redis
01-安装与配置.txt
...
默认的数据库数量
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
16
取值范围是0-15



第[52]题_02-爬虫__解析库
01-xpath解析.txt
...
获取节点的属性
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
节点/@属性名



第[53]题_03-django__03-配置
02-模块与功能.txt
...
如何定义一个视图类
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
导入View类，作为父类
自定义一个类，继承View类
例子：商品首页的页面渲染与展示
from django.views.generic import View
class IndexView(View):
    """首页"""
    def get(self,request):
        """ 显示首页 """
        return render(request, "index.html")



第[54]题_01-数据库__mysql
02-数据库操作.txt
...
查看当前选中的是哪个数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
select database();



第[55]题_02-爬虫__解析库
01-xpath解析.txt
...
选取notbook，要求它的子级price标签包裹文本值大于9000
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
//notbook[price>9000]



第[56]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
队列中计数器减一
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
队列.task_done()
补充：
一般与队列等待共同使用



第[57]题_01-数据库__mysql
04-数据行的操作.txt
...
查询数据表中全部数据，查看全部字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select * from 表名;
例子：
select * from student;



第[58]题_01-数据库__mysql
03-数据表的操作.txt
...
查看当前库里的所有数据表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
show tables;



第[59]题_01-数据库__redis
06-list数据类型.txt
...
lis键中查找b
找到后从右向左删1个
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrem lis -1 b



第[60]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
响应对象的text属性与content属性的相同点与不同点
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
相同点：
都可以拿到响应的内容
不同点：
数据类型不一样
text拿到string类型
content拿到bytes类型
注意：
如果访问的目标是图片，文件，音频视频等，需要使用content属性来拿内容



第[61]题_01-数据库__mysql
05-查询.txt
...
查询结果消除重复
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select distinct 字段 from 表名;
例子：
select distinct gender from student;



第[62]题_02-爬虫__解析库
01-xpath解析.txt
...
获取位置不等于2的节点
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//mon[position()!=2]



第[63]题_01-数据库__redis
06-list数据类型.txt
...
lis键中查找a
找到后从左向右删掉2个
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> lrem lis 2 a



第[64]题_01-数据库__mysql
05-查询.txt
...
分组与对已分的组进行过滤
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
group by 列 having 条件
意义：
对某一个列进行分组，同时按照某个条件对组进行过滤
例子：
select gender,count(*) from student group by gender having gender is not null;



第[65]题_01-数据库__mysql
03-数据表的操作.txt
...
修改表中字段-改字段名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
alter table 表名 change 原字段名 新字段名 类型 约束;
例子：
alter table pistudent change score defen tinyint ;



第[66]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
修改mkvirtualenv默认路径的办法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
环境变量》系统变量
添加WORKON_HOME



第[67]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-缺省插入
只插入部分字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名（字段1，字段n） values(值1，值n);
例子：
insert into student (name) values('ggyy');



第[68]题_03-django__04-dj2vdo
191022路由url.txt
...
总路由根据路径进行分发
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》导入include模块
from django.urls import include
》进行分发
path("book/", include("book.urls"))
》其它形态
path("book/",include([path("list", 视图)]
))



第[69]题_04-版本控制__01-git
01-入门.txt
...
centos系统安装git
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
yum install git



第[70]题_01-数据库__mysql
02-数据库操作.txt
...
删除数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
drop database 数据库名;
例子：
drop database pyhui;



