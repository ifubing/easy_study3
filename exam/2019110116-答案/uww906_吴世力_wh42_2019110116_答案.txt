
第[1]题_01-数据库__mongodb
02-数据行的操作.txt
...
删除数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
》删除多个
db.集合名称.remove(条件)
》删除一个
db.集合名称.remove(条件,{justOne:true})



第[2]题_01-数据库__mongodb
03-查询.txt
...
排序
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
以某某键进行升序排序
查询结果.sort(｛键：1｝)
以某某键进行降序排序
查询结果.sort(｛键：-1｝)
例子：
查询所有的数据，以age升序排序
db.colc.find().sort({age:1})
查询所有的数据，以age降序排序
db.colc.find().sort({age:-1})



第[3]题_06-前端__css
05-盒子模型.txt
...
内间距与外间距
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》
内间距 padding
外间距 margin
》具体的设置，以内间距为例（外间距同理，换个单词就可以）
padding-top：20px;     /* 设置顶部内间距20px */ 
padding-left:30px;     /* 设置左边内间距30px */ 
padding-right:40px;    /* 设置右边内间距40px */ 
padding-bottom:50px;   /* 设置底部内间距50px */
》连写设置
有多种写法，详情如下：
padding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  
padding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ 
padding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ 
padding：20px; /* 设置四边内边距为20px */



第[4]题_03-django__04-dj2vdo
191024模板.txt
...
模板中的html字符串，让它渲染生效
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% autoescape off %}
	{{ html模板变量 }}
｛% endautoescape %｝
效果：
被autoescape包裹的模板变量如果是html代码，会被渲染生效
默认情况django为了保护安全，不会让html或js代码渲染生效
单词：
auto，自动
escape，释放



第[5]题_06-前端__html
04-表单.txt
...
input控件的各种类型
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
<input type="类型">
例子：
<input type="text">
分类：
type="text" 定义单行文本输入框
type="password" 定义密码输入框
type="radio" 定义单选框
type="checkbox" 定义复选框
type="file" 定义上传文件
type="submit" 定义提交按钮
type="reset" 定义重置按钮
type="button" 定义一个普通按钮
type="image" 定义图片作为提交按钮，用src属性定义图片地址
type="hidden" 定义一个隐藏的表单域，用来存储值
value属性 定义表单元素的值
name属性 定义表单元素的名称，此名称是提交数据时的键名



第[6]题_01-数据库__mongodb
05-索引.txt
...
创建一个联合唯一索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.ensureIndex({字段1：1， 字段2：1})
例子：按照姓名与图片名称建立联合唯一索引
db.stu.ensureIndex({name:1, bname:1})



第[7]题_01-数据库__mongodb
01-增删改查.txt
...
查看当前数据库中的全部集合（全部数据表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> show collections
spider
stu
tbtwo
>



第[8]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
add过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子一，两个数字会相加：
{{ "1"|add:"2"}}
得到结果3
例子二，不能相加的字符串就拼接
{{ "1"|add:"2sss" }}
得到结果  12sss
例子三，两个列表相加就是合并
{{ list1 | add : list2 }}



第[9]题_06-前端__html
01-html基本.txt
...
注释
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<!-- 注释内容写在这里 -->



第[10]题_01-数据库__mongodb
05-索引.txt
...
查看当前集合的索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名.getIndexes()
例子：
> db.stu.getIndexes()
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_",
                "ns" : "dbtwo.stu"
        }
]
>



第[11]题_03-django__04-dj2vdo
191024模板.txt
...
for遍历，逆序遍历
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% for 临时变量 in 容器 reversed %}
临时变量
{% endfor %}



第[12]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
join过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{{ value|join:"/" }}
效果：
value容器的成员以：右边的符号进行连接



第[13]题_01-数据库__mongodb
03-查询.txt
...
范围运算符
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
在， $in
不在， $nin
例子：查询年龄在 16 19 22 岁的
db.colc.find({age:{$in:[16,19,22]}})



第[14]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
truncatechars过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ value| truncatechars:n }}
效果：
保留n位字符的显示
其中最后一位的显示是...
单词：
truncate，截短缩短



第[15]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
创建一个线程队列队象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
import queue
q = queue.Queue()
补充：
生成一个容量为6的队列对象
q = queue.Queue(6)



第[16]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
让当前的线程全部执行完毕后
主线程再进行下一条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
线程对象.join（）
例子：
t.join()



第[17]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转-带关键词参数的反转
路由的路径匹配中有关键词捕获时（命名分组的正则表达式）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)
例子：
detail_url= reverse("detail", kwargs={"article_id":16})
效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置



第[18]题_06-前端__html
04-表单.txt
...
表单标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<form action="" method="get" enctype="multipart/form-data"></form>
说明：
如果数据需要提交到某个网址需要使用表单标签



第[19]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
从线程队列中取出数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
代码：
队列.get()
说明：
队列如果是空的，会阻塞
补充：
队列.get(block=False)
队列如果空了，就会报一个错误



第[20]题_06-前端__css
02-文本样式.txt
...
02-文本样式.txt...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[21]题_03-django__04-dj2vdo
191024模板.txt
...
让我们的模板语句不生效
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{% verbatim %}
{{ 变量 }}
{% endverbatim %}
效果：
被verbatim包裹的模板语句不会被解释
是什么还是什么
翻译：
verbatim
英 [vɜːˈbeɪtɪm]   美 [vɜːrˈbeɪtɪm]  
adj./adv.
一字不差的(地);逐字的(地)



第[22]题_03-django__04-dj2vdo
191024视图.txt
...
模板的渲染，
把模板文件的内容获取出来
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一：render_to_string
》导入
from django.template.loader import render_to_string
》在视图中使用
def index(request):
	html = render_to_string(模板名.html)
	return HttpResponse(html)
》说明
这个是render函数的基本，了解即可
方式二: render 
》导入
from django.shortcuts import render
》在视图中使用
def index(request):
	return render(request, 模板名.html)



第[23]题_06-前端__html
02-基本标签.txt
...
斜体标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<i>斜体</i>



第[24]题_06-前端__html
02-基本标签.txt
...
删除标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<s>删除线</s>



第[25]题_06-前端__html
01-html基本.txt
...
载入其它样式文件
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<link rel="stylesheet" href="m.css">



第[26]题_01-数据库__mongodb
05-索引.txt
...
查找语句执行状态的查看
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
db.stu.find({name:'tt'}).explain("executionStats")
关注
executionTimeMillis



第[27]题_02-爬虫__解析库
01-xpath解析.txt
...
获取标签内容为：下一页> 的a标签，取它的href值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//a[text()="下一页>"]/@href



第[28]题_01-数据库__mongodb
03-查询.txt
...
查询所有
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.find()



第[29]题_06-前端__html
02-基本标签.txt
...
标题标签的使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
默认效果：
加粗
额外效果：
爬虫识别页面时，知道这个是重点
例子：
<h1>这是一级标题</h1>
<h2>这是二级标题</h2>
<h3>这是三级标题</h3>



第[30]题_02-爬虫__requests爬虫
04-多线程爬虫.txt
...
线程类的定义与启动
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
自定义一个类
让该类继承threading.Thread
同时在自定义类中重写run方法
就可
例子：
class Drawing(threading.Thread):
    def run(self):
        for x in range(3):
            print('正在绘制图片', x)
            time.sleep(1)
》线程类实例化为一个对象并运行：
t2 = Drawing()
t2.start()



第[31]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
first与last过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|first }}
{{ 数据|last }}
效果：
first用于拿到数据中第一个成员
last用于拿到数据中最后一个成员



第[32]题_01-数据库__mongodb
01-增删改查.txt
...
使用数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
use 数据库名称
例子：
use one
> use one
switched to db one



第[33]题_06-前端__html
02-基本标签.txt
...
换行标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
标签：
<br>
或者
<br />



第[34]题_06-前端__html
05-表格.txt
...
表格的基本格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<table>
    <thead>
    <tr><th>序号</th><th>姓名</th></tr>
    </thead>
    <tbody>
    <tr><td>1</td><td>张三</td></tr>
    </tbody>
</table>
说明：table的属性
border属性 定义表格的边框，设置值是数值
cellpadding属性 定义单元格内容与边框的距离，设置值是数值
cellspacing属性 定义单元格与单元格之间的距离，设置值是数值
align属性 设置整体表格相对于浏览器窗口的水平对齐方式,设置值有：left | center | right
说明：tr代表一行，td和th代表单元格
<tr>标签：定义表格中的一行
<td>和<th>标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格，
<thead>标签，代表表头
<tbody>标签，代表了表格的主体
注意：单元格的属性
align 设置单元格中内容的水平对齐方式,设置值有：left | center | right
valign 设置单元格中内容的垂直对齐方式 top | middle | bottom
colspan 设置单元格水平合并，设置值是数值
rowspan 设置单元格垂直合并，设置值是数值



第[35]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
删除虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
rmvirtualenv 环境名称



第[36]题_06-前端__html
02-基本标签.txt
...
段落标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
标签：
<p>内容</p>
例子：
    <p>一个html文件就是一个网页，html文件用编辑器打开显示的是文本，可以用文本的方
    式编辑它，如果用浏览器打开，浏览器会按照标签描述内容将文件渲染成网页，显示的网
    页可以从一个网页链接跳转到另外一个网页。</p>



第[37]题_01-数据库__mongodb
01-增删改查.txt
...
创建集合（集合就是数据表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：创建一个名籽tbtwo的集合
> db.createCollection("tbtwo")
{ "ok" : 1 }



第[38]题_01-数据库__mongodb
02-数据行的操作.txt
...
添加数据
如果存在，修改
如果不存在，新增
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> db.colc.save({_id:100,"name":"ww"})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
>  



第[39]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
slice过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
效果：
切片的效果
格式：
{{ 变量|slice:"起始索引：终止索引：步长" }}
例子：
{{ 变量|slice:"2:6" }}



第[40]题_01-数据库__mongodb
04-聚合.txt
...
分页
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
$limit：隠定显示条目数
$skip：跳过条目数
例子：限定只显示两条数据
> db.one.aggregate({$limit:2})
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
例子：跳过一条数据
> db.one.aggregate({$skip:1})
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }



第[41]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
cut过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ 数据|cut:目标字符串 }}
效果：
把目标字符串从数据中去掉
例如：
{{ 'hello python'|cut:' '}}
效果
hellopython



第[42]题_03-django__04-dj2vdo
191024模板.txt
...
{% with persons.0 as zs %}
<p> {{ zs }} </p>
{% endwith %}
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[43]题_02-爬虫__scrapy爬虫
01-入门.txt
...
从xpath的结果对象中提取内容
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式
对象.get()
或者
对象.extract_first()



第[44]题_06-前端__html
01-html基本.txt
...
html的基本结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<!DOCTYPE html>
<html lang="en">
    <head>            
        <meta charset="UTF-8">
        <title>网页标题</title>
    </head>
    <body>
          网页显示内容
    </body>
</html>



第[45]题_01-数据库__mongodb
02-数据行的操作.txt
...
修改数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.update(查找条件，修改内容，[{multi:true}])
情况一：查到数据，完全修改
例子：这种效果会把查到的结果完全的替代为修改的内容
查找姓名为zs的数据行，把整个数据修改年龄为20
> db.colc.update({name:"zs"},{age:20})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
>   
情况二：查到数据，保留修改（只修改指定的字段）
例子，查找班级为python的数据，把年级改为2
> db.colc.update({classname:"python"},{$set:{grade:2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
格式：
要修改的内容
{$set:{要修改的键：要修改的值}}



第[46]题_06-前端__html
01-html基本.txt
...
特效标签脚本标签
放javascript代码的标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
两个效果
1，加载其它js文件
<script src="js路径"></script>
2，直接在里面写代码
<script>样式</script>



第[47]题_06-前端__html
02-基本标签.txt
...
字符实体
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
空格， &nbsp;
<， &lt;
>， &gt;



第[48]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
查找
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
查找一条数据：
res = 集合对象.find_one({"name":"qq"})
查找多条数据：
res = 集合对象.find({"gender":True})



第[49]题_01-数据库__redis
09-hash数据类型.txt
...
获取一共有多少个键值对
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hlen 键
例子：获取zs一共有多少个字段
hlen zs



第[50]题_03-django__04-dj2vdo
191024模板.txt
...
if标签基本用法
if...else...二路分支的格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% if 条件 %}
成立时显示
{% else %}
不成立时显示
{% endif %}
关于条件：
可以是比较大小，判断等于，成员运算，等等



第[51]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
避免转义给字符串加哪个字母表示原始字符串
如何避免正则表达式中的内容被python解释器转义
在python写正则表达式要注意什么
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
注意使用r包裹一下
r , 表示需要原始字符串，不转义特殊字符
例如：
re_path(r"book/(\d+)/", bookview)



第[52]题_03-django__04-dj2vdo
191024模板.txt
...
遍历容器无数据时的显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% for 临时变量 in 容器 %}
 	临时变量
｛% empty %}
无数据
｛% endfor %｝



第[53]题_01-数据库__mongodb
03-查询.txt
...
正则查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
find(｛键：/正则表达式/｝)
find(｛键：$regex:正则式str｝)
例子：
查询sku以abc开头的数据
db.products.find({sku:/^abc/})
例子：查询姓名以z开头的
db.colc.find({name:/^z/})



第[54]题_01-数据库__mongodb
04-聚合.txt
...
匹配数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：查到年龄大于20的数据
> db.one.aggregate({$match:{age:{$gt:20}}})
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }
>    



第[55]题_02-爬虫__scrapy爬虫
02-配置.txt
...
不尊守爬虫协议
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
ROBOTSTXT_OBEY = False



第[56]题_01-数据库__mongodb
03-查询.txt
...
分页相关知识
1，限定显示几条
2，跳过几条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
limit(n)，显示n条
skip(m)，跳过m条
一般limit与skip同时使用，实现分页效果
例子：
每一页显示两个数据
第一页
db.集合名.find().skip(0).limit(2)
第二页
db.集合名.find().skip(2).limit(2)
第三页
db.集合名.find().skip(4).limit(2)
第四页
db.集合名.find().skip(6).limit(2)
（当前页码-1）*每页显示几个数据
第n页
db.集合名.find().skip((n-1)*2)



第[57]题_06-前端__css
04-选择器.txt
...
伪类及伪元素选择器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
常用的伪类选择器有hover，表示鼠标悬浮在元素上时的状态，伪元素选择器有before和after,它们可以通过样式在元素中插入内容。
.box1:hover{color:red}
.box2:before{content:'行首文字';}
.box3:after{content:'行尾文字';}



第[58]题_03-django__04-dj2vdo
191024模板.txt
...
模板反向解析-带关键词参数的情况
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
{% url '别名' 参数名1=值1 参数名n=值n %}
例子：
{% url 'detail' book_id=1 %}
说明：
path('book/detail/<book_id>/', views.book_detail, name='detail')
别名detail对应的路径需要一个参数
所以在反向解析时要传递过去
模板中反解 {% url 'detail' book_id=1 %}
会得到这样的结果  'book/detail/1/'
视图中反解 reverse("detail", kwargs = {"book_id":1})
会得到这样的结果  'book/detail/1/'



第[59]题_06-前端__html
03-列表.txt
...
无序列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<ul>
    <li><a href="#">新闻标题一</a></li>
    <li><a href="#">新闻标题二</a></li>
    <li><a href="#">新闻标题三</a></li>
</ul>
说明：
在网页上生成的列表，每条项目上会有一个小图标，这个小图标在不同浏览器上显示效果不同，所以一般会用样式去掉默认的小图标，如果需要图标，可以用样式自定义图标，从而达到在不同浏览器上显示的效果相同,实际开发中一般用这种列表。



第[60]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
修改
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》修改一条
集合对象.update_one({条件字典})
》修改多条
集合对象.update_many({条件字典})
例子：
res = 集合对象.update_many({"gender":True},{"$set":{"skill":"无言"}})



第[61]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
floatformat过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：2种情况
{{ 数据|floatformat }}
{{ 数据|floatformat:n }}
例子：
{{ "123.456"|floatformat }}
结果为 123.5
{{ "123.00"|floatformat }}
结果为 123
{{ "123.4567"|floatformat:2 }}
结果为123.46



第[62]题_03-django__02-模板
01-过滤器.txt
...
自定义过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，任意app下创建一个包
名称必需为
templatetags
二，在包下新建一个py文件，名字随便，开始写功能
例子如下：
#1 固定写法 导入模块
from django import template
#2 固定写法 实例化对象
register = template.Library()
#3 写过滤器同时注册该过滤器
@register.filter
def addString(value):
    return value+"good"
三，确保app已注册
四，模板中使用。1，先导入。2，再使用。
{% load my_filter %}
{{ "张三"|addString}}


第[63]题_03-django__04-dj2vdo
191024模板.txt
...
高级模板变量取值与方法的调用
模板变量为列表，字典时，如何取成员
模板变量为对象时，如何调方法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
取值规则：
通过点来取值，例如：
字典.键， 列表.索引， 对象.属性取值
调方法规则：
模板变量.方法名  
注意，方法名后不用加括号
例如：
模板变量 stu_list 是一个列表，取列表的2号位
{{ stu_list.2 }}
例如：
模板变量 user 是一个对象，取它的name属性值
{{ user.name }}



第[64]题_01-数据库__mongodb
02-数据行的操作.txt
...
添加数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.insert(字典)
例子：
> db.cola.insert({"name":"zs", "age":18})
WriteResult({ "nInserted" : 1 })
注意：
关于集合名称，如果操作的是一个不存在的集合
mongo会自动创建



第[65]题_03-django__04-dj2vdo
191024模板.txt
...
字典遍历，同时得到键与值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
{% for key, val in persion.items %}
key--val
{% endfor %}



第[66]题_03-django__04-dj2vdo
191024模板.txt
...
for循环中的变量，显示序号-顺序显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
forloop.counter
》
例子格式：
{% for 变量 in 容器 %}
序号：{{ forloop.counter }}
变量
{% endfor %}
》
计数从0开始，使用
forloop.counter0



第[67]题_03-django__04-dj2vdo
1920211530综合.txt
...
url是统一资源定位符，它的组成结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scheme：//host:port/path/?k1=v1&k2=v2#anchor
详解：
scheme，协议
host，主机名
port，端口号
path，路径
k1=v1&k2=v2，get参数



第[68]题_06-前端__html
03-列表.txt
...
有序列表标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
<ol>
    <li>列表文字一</li>
    <li>列表文字二</li>
    <li>列表文字三</li>
</ol>
说明：
在网页上生成的列表，每条项目上会按1、2、3编号，有序列表在实际开发中较少使用。



第[69]题_01-数据库__mongodb
06-mongodb与python的交互.txt
...
插入数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
》插入一条数据
例子：
res = 集合对象.insert_one({"name":"悟空2", "age":500, "skill":"龟派气功"})
》插入多条数据
例子：
集合对象.insert_many(列表包字典)



第[70]题_01-数据库__mongodb
03-查询.txt
...
统计查询结果的数量
两种方式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
方式一
db.集合名称.find(条件).count()
方式二
db.集合名称.count(条件)
例子：
查询年龄小于60的数据条目数
db.colc.find({age:{$lt:60}}).count()
db.colc.count({age:{$lt:60}})



