
第[1]题_03-django__04-dj2vdo
1920211530综合.txt
...
命令创建django项目
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
django-admin startproject 项目名称
例子：
diango-admin startproject first_project
效果：
会在当前目录下创建一个目录，名称是项目名



第[2]题_01-数据库__mysql
05-查询.txt
...
查询，只显示指定的字段
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
select 字段1， 字段n from 表名；
例子：
select id, name from student;



第[3]题_01-数据库__redis
09-hash数据类型.txt
...
删除整个哈希数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
del 键
例子：删掉键为zs的哈希数据
del zs



第[4]题_03-django__04-dj2vdo
1920211530综合.txt
...
用代码运行一个项目
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
python manage.py runserver
期望它以指定的ip和端口运行
python mange.py runserver IP地址：端口



第[5]题_01-数据库__mongodb
01-增删改查.txt
...
使用数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
use 数据库名称
例子：
use one
> use one
switched to db one



第[6]题_01-数据库__mysql
03-数据表的操作.txt
...
查看表结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
desc 表名;
desc student;



第[7]题_01-数据库__mysql
03-数据表的操作.txt
...
删除数据表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
drop table 表名
示例：
drop table one;



第[8]题_01-数据库__mysql
02-数据库操作.txt
...
查看当前选中的是哪个数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
select database();



第[9]题_02-爬虫__解析库
01-xpath解析.txt
...
选取notbook，要求它的子级price标签包裹文本值大于9000
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
//notbook[price>9000]



第[10]题_06-前端__html
02-基本标签.txt
...
水平线标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<hr>



第[11]题_01-数据库__mongodb
03-查询.txt
...
查询所有
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
db.集合名称.find()



第[12]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
避免转义给字符串加哪个字母表示原始字符串
如何避免正则表达式中的内容被python解释器转义
在python写正则表达式要注意什么
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
注意使用r包裹一下
r , 表示需要原始字符串，不转义特殊字符
例如：
re_path(r"book/(\d+)/", bookview)



第[13]题_01-数据库__mongodb
03-查询.txt
...
自定义查询，使用js语句来查
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
find({
	$where:function(){
		return this.age>19
	}
})
例子：
查找班级名称为python02的
db.colc.find({
	$where:function(){
		return this.classname == "python02"
	}
})
查找年龄小于19岁的
db.colc.find({
	$where:function(){
		return this.age < 19 
	}
})
关键点：
查询条件字典中以
$where 为键
值是一个js的匿名函数
只需要函数return 一个布尔值即可
如果布尔的结果为true 那么该行数据会被显示
通常在匿函中的this代表了当前数据行对象



第[14]题_02-爬虫__解析库
02-python操作xpath.txt
...
xpath的使用套招
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
一，实例化生成一个element对象
from lxml import etree
obj = etree.HTML(字符串html内容)
二，对象.xpath（xpath表达式)
res = obj.xpath(表达式)
# res是一个列表，如果列表成员仍然是element对象，他们仍可以使用xpath方法


第[15]题_06-前端__css
01-基本.txt
...
三种使用方式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
1、外联式：通过link标签，链接到外部样式表到页面中。
<link rel="stylesheet" type="text/css" href="css/main.css">
2、嵌入式：通过style标签，在网页上创建嵌入的样式表。
<style type="text/css">
    div{ width:100px; height:100px; color:red }
    ......
</style>
3、内联式：通过标签的style属性，在标签上直接写样式。
<div style="width:100px; height:100px; color:red ">......</div>



第[16]题_04-版本控制__01-git
01-入门.txt
...
创建分支同时切换到新分支
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git checkout -b 分支名称
例子：
$ git checkout -b zhaoyun



第[17]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
4、字典如何删除键和合并两个字典
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
dic={'name':'alex','age':18,'sex':'female'}
del dic['sex']
print(dic)  
# {'name': 'alex', 'age': 18}
dic1={'sex':'female'}
dic.update(dic1)
print('更新后的dic：',dic)   
# 更新后的dic： {'name': 'alex', 'age': 18, 'sex': 'female'}



第[18]题_01-数据库__mongodb
04-聚合.txt
...
分页
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
$limit：隠定显示条目数
$skip：跳过条目数
例子：限定只显示两条数据
> db.one.aggregate({$limit:2})
{ "_id" : ObjectId("5db7896dde8bde057a298e48"), "name" : "张三", "age" : 18, "gender" : 1, "class" : "python" }
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
例子：跳过一条数据
> db.one.aggregate({$skip:1})
{ "_id" : ObjectId("5db789aede8bde057a298e49"), "name" : "李四", "age" : 38, "gender" : 0, "class" : "python" }
{ "_id" : ObjectId("5db789c1de8bde057a298e4a"), "name" : "赵强", "age" : 86, "gender" : 1, "class" : "php" }



第[19]题_01-数据库__mysql
04-数据行的操作.txt
...
删除指定的数据行
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
delete from 表名 where 条件；
例子：
delete from student where id>4;



第[20]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
进入虚拟环境所在的目录
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
cdvirtualenv



第[21]题_01-数据库__redis
04-string数据类型.txt
...
往键名为name的值中添加内容2019
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> append name 2019



第[22]题_02-爬虫__requests爬虫
01-发起请求.txt
...
发起一个get请求
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
# 导入模块
import request
# 发起请求
响应对象 = requests.get(网址)



第[23]题_02-爬虫__解析库
02-python操作xpath.txt
...
把一个html字符串转换为Element对象
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
Element对象 = etree.HTML(html字符串)
备注，Element对象具有xpath方法



第[24]题_03-django__04-dj2vdo
10211518虚拟环境.txt
...
退出虚拟环境
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
deactivate



第[25]题_02-爬虫__解析库
01-xpath解析.txt
...
获取pc标签下notbook标签的所有属性值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//pc/notbook/@*



第[26]题_01-数据库__mysql
02-数据库操作.txt
...
切换数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
use 数据库名;
例子：
use test;



第[27]题_03-django__04-dj2vdo
191024视图.txt
...
reverse函数反转-带关键词参数的反转
路由的路径匹配中有关键词捕获时（命名分组的正则表达式）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
reverse（别名，kwargs=｛关键词1：值1，关键词2：值2｝)
例子：
detail_url= reverse("detail", kwargs={"article_id":16})
效果：会反向生成别名为detail的路径，同时把article_id的数据拼到对应的位置



第[28]题_06-前端__html
04-表单.txt
...
    ...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：



第[29]题_01-数据库__mongodb
03-查询.txt
...
分页相关知识
1，限定显示几条
2，跳过几条
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
limit(n)，显示n条
skip(m)，跳过m条
一般limit与skip同时使用，实现分页效果
例子：
每一页显示两个数据
第一页
db.集合名.find().skip(0).limit(2)
第二页
db.集合名.find().skip(2).limit(2)
第三页
db.集合名.find().skip(4).limit(2)
第四页
db.集合名.find().skip(6).limit(2)
（当前页码-1）*每页显示几个数据
第n页
db.集合名.find().skip((n-1)*2)



第[30]题_01-数据库__redis
06-python连redis.txt
...
python连redis需要安装的包
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
pip install redis



第[31]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应状态码
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.status_code



第[32]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
10、python内建数据类型有哪些
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
整型--int 布尔型--bool 字符串--str 列表--list 元组--tuple 字典--dict



第[33]题_01-数据库__redis
07-set数据类型.txt
...
获取s1键里的成员值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> smembers s1



第[34]题_01-数据库__mongodb
01-增删改查.txt
...
删除集合
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> db.tbtwo.drop()
true



第[35]题_03-django__04-dj2vdo
1920211530综合.txt
...
视图中获取get方式传递过来的参数
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
在视图中通过
request.GET 获取get传参的字典
通过request.GET[键] 获取字典中键所对应的值



第[36]题_01-数据库__mysql
03-数据表的操作.txt
...
查看当前库里的所有数据表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
show tables;



第[37]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-缺省插入
只插入部分字段的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名（字段1，字段n） values(值1，值n);
例子：
insert into student (name) values('ggyy');



第[38]题_06-前端__css
01-基本.txt
...
定义样式的语法格式
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
选择器 { 属性:值; 属性:值; 属性:值;}
例子：
div{ 
    width:100px; 
    height:100px; 
    color:red 
}



第[39]题_01-数据库__mongodb
01-增删改查.txt
...
创建集合（集合就是数据表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：创建一个名籽tbtwo的集合
> db.createCollection("tbtwo")
{ "ok" : 1 }



第[40]题_01-数据库__mysql
05-查询.txt
...
聚合查询
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
符号：
count(*)	统计总数
max(列)		此列最大值
min(列)		此列最小值
sum(列)		此列总和
avg(列)		此列平均值
例子：
查询全部数据有多少条
select count(*) from student;
查询年龄最大的值
select max(age) from student;



第[41]题_06-前端__html
04-表单.txt
...
下拉框
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子
    <select name="place" id="">
        <option value="1">武汉</option>
        <option value="2">长沙</option>
    </select>



第[42]题_01-数据库__redis
09-hash数据类型.txt
...
获取一共有多少个键值对
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hlen 键
例子：获取zs一共有多少个字段
hlen zs



第[43]题_06-前端__css
05-盒子模型.txt
...
宽和高
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
width:200px;  /* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */ 
height:200px; /* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */



第[44]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
一行代码实现1--100之和
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
s=sum(range(101))
print(s)  



第[45]题_01-数据库__redis
04-string数据类型.txt
...
获取classname对应的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> get classname



第[46]题_01-数据库__redis
01-安装与配置.txt
...
如何启动服务端
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
redis-server 配置的地址
[root@192 ~]# redis-server /etc/redis/redis.conf



第[47]题_02-爬虫__解析库
01-xpath解析.txt
...
选取所有的notbook标签或者mon标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
//notbook | //mon



第[48]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
修改响应对象的默认解码格式为utf8
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.encoding="utf8"



第[49]题_03-django__04-dj2vdo
191022路由url.txt
...
给一个url起一个别名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
path('login/', views.login, name='login')



第[50]题_06-前端__html
02-基本标签.txt
...
加粗标签
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<b>加粗</b>



第[51]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
slice过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
效果：
切片的效果
格式：
{{ 变量|slice:"起始索引：终止索引：步长" }}
例子：
{{ 变量|slice:"2:6" }}



第[52]题_01-数据库__mysql
03-数据表的操作.txt
...
创建数据表
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
create table 表名（字段 类型 约束）
示例：
》创建一个表，主键primary key， 自增长 auto_increment
create table student(id int primary key auto_increment);
》删掉它
drop table student;
》换个姿式再创建一次，不允许为空 not null
create table student(
id int auto_increment primary key,
name varchar(20) not null
);
》再删掉
drop table student;
》再创建，default 0
create table student(
id int auto_increment primary key,
name varchar(20) not null,
age int not null,
gender bit default 1,
address varchar(20),
isDelete bit default 0
);



第[53]题_03-django__04-dj2vdo
191024模板.txt
...
遍历容器无数据时的显示
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
｛% for 临时变量 in 容器 %}
 	临时变量
｛% empty %}
无数据
｛% endfor %｝



第[54]题_01-数据库__redis
04-string数据类型.txt
...
设置name键对应的值zgl，5秒钟过期
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
127.0.0.1:6379> setex name 5 zgl



第[55]题_02-爬虫__scrapy爬虫
01-入门.txt
...
创建爬虫
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
scrapy genspider 爬虫名称 允许访问的域名
例子：
scrapy genspider qidian www.qidian.com
注意：
要先cd到项目目录中
然后再创建爬虫
效果：
在spiders目录中新增了一个爬虫名.py



第[56]题_02-爬虫__解析库
01-xpath解析.txt
...
获取第二个节点
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//mon[2]
//mon[position()=2]



第[57]题_03-django__04-dj2vdo
191022路由url.txt
...
命名空间的使用
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
为了防止多个别名导致的冲突，在总路由定义命名空间
一，总路由定义命名空间
path(路径，include('应用名.urls', namespace='空间名'))
例如：path('cms1/', include('cms.urls', namespace='cms1'))
二，在应用的urls.py中定义一个变量
app_name = 应用名
例如：app_name=book



第[58]题_03-django__04-dj2vdo
191024模板.txt
...
模板中的反向解析，url基本用法
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法，两种情况：
{% url '别名' %}
{% url '命名空间:别名' %}
例子：
路由文件中
path('book/detail/', views.book_detail, name='detail')
在模板中可以通过
{% url 'detail' %} 
拿到值
book/detail
在视图函数中可以通过
reverse('detail') 
拿到值
book/detail



第[59]题_04-版本控制__02-github
01-操作.txt
...
本地仓库推送到网上
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
git push -u origin
例子：
git push -u origin



第[60]题_03-django__04-dj2vdo
191029模板过滤器.txt
...
truncatechars过滤器
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
用法：
{{ value| truncatechars:n }}
效果：
保留n位字符的显示
其中最后一位的显示是...
单词：
truncate，截短缩短



第[61]题_01-数据库__redis
09-hash数据类型.txt
...
获取所有字段对应的值
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
hvals 键
例子：获取zs的所有值
hvals zs



第[62]题_02-爬虫__解析库
01-xpath解析.txt
...
获取位置不等于2的节点
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
//mon[position()!=2]



第[63]题_01-数据库__mongodb
05-索引.txt
...
创建一个普通索引
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
例子：
> db.stu.ensureIndex({name:1})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
>



第[64]题_01-数据库__mysql
04-数据行的操作.txt
...
插入数据-插入多条数据
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式：
insert into 表名（字段1，字段n） values(值1，值n)，(值1，值n);
例子：
insert into student(name) values('cat'), ('dog'),('mie');
说明：
括号，括号，括号
这样的方式传多个值



第[65]题_06-前端__html
01-html基本.txt
...
html的基本结构
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
<!DOCTYPE html>
<html lang="en">
    <head>            
        <meta charset="UTF-8">
        <title>网页标题</title>
    </head>
    <body>
          网页显示内容
    </body>
</html>



第[66]题_06-前端__html
02-基本标签.txt
...
字符实体
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
空格， &nbsp;
<， &lt;
>， &gt;



第[67]题_08-面试刷题__一只小妖
10221614-面试题上.txt
...
python实现列表去重的方法（先通过集合去重，在转列表）
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
li=[1,2,2,3,3]
a=set(li)
print (list(a))　



第[68]题_02-爬虫__requests爬虫
02-响应的属性与方法.txt
...
获取响应头
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
响应对象.headers



第[69]题_03-django__04-dj2vdo
191024模板.txt
...
常用的数据取别名
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
格式一：
{% with 别名=数据 %}
{{ 别名 }}
{% endwith %}
格式二：
{% with 数据 as 别名 %}
{{ 别名 }}
{% endwith %}
例子：
{% with zs = persons.0 %}
<p> {{ zs }} </p>
{% endwith %}



第[70]题_01-数据库__redis
01-安装与配置.txt
...
如何选择数据库
...
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
答案：
select n
n的取值范围是0-15
select 5
代表选取了索引值为5的redis数据库


